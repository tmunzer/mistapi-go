/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ApStatsPortStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApStatsPortStat{}

// ApStatsPortStat struct for ApStatsPortStat
type ApStatsPortStat struct {
	FullDuplex *bool `json:"full_duplex,omitempty"`
	RxBytes *float32 `json:"rx_bytes,omitempty"`
	RxErrors *float32 `json:"rx_errors,omitempty"`
	RxPkts *float32 `json:"rx_pkts,omitempty"`
	Speed *int32 `json:"speed,omitempty"`
	TxBytes *float32 `json:"tx_bytes,omitempty"`
	TxPkts *float32 `json:"tx_pkts,omitempty"`
	Up *bool `json:"up,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApStatsPortStat ApStatsPortStat

// NewApStatsPortStat instantiates a new ApStatsPortStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApStatsPortStat() *ApStatsPortStat {
	this := ApStatsPortStat{}
	return &this
}

// NewApStatsPortStatWithDefaults instantiates a new ApStatsPortStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApStatsPortStatWithDefaults() *ApStatsPortStat {
	this := ApStatsPortStat{}
	return &this
}

// GetFullDuplex returns the FullDuplex field value if set, zero value otherwise.
func (o *ApStatsPortStat) GetFullDuplex() bool {
	if o == nil || IsNil(o.FullDuplex) {
		var ret bool
		return ret
	}
	return *o.FullDuplex
}

// GetFullDuplexOk returns a tuple with the FullDuplex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsPortStat) GetFullDuplexOk() (*bool, bool) {
	if o == nil || IsNil(o.FullDuplex) {
		return nil, false
	}
	return o.FullDuplex, true
}

// HasFullDuplex returns a boolean if a field has been set.
func (o *ApStatsPortStat) HasFullDuplex() bool {
	if o != nil && !IsNil(o.FullDuplex) {
		return true
	}

	return false
}

// SetFullDuplex gets a reference to the given bool and assigns it to the FullDuplex field.
func (o *ApStatsPortStat) SetFullDuplex(v bool) {
	o.FullDuplex = &v
}

// GetRxBytes returns the RxBytes field value if set, zero value otherwise.
func (o *ApStatsPortStat) GetRxBytes() float32 {
	if o == nil || IsNil(o.RxBytes) {
		var ret float32
		return ret
	}
	return *o.RxBytes
}

// GetRxBytesOk returns a tuple with the RxBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsPortStat) GetRxBytesOk() (*float32, bool) {
	if o == nil || IsNil(o.RxBytes) {
		return nil, false
	}
	return o.RxBytes, true
}

// HasRxBytes returns a boolean if a field has been set.
func (o *ApStatsPortStat) HasRxBytes() bool {
	if o != nil && !IsNil(o.RxBytes) {
		return true
	}

	return false
}

// SetRxBytes gets a reference to the given float32 and assigns it to the RxBytes field.
func (o *ApStatsPortStat) SetRxBytes(v float32) {
	o.RxBytes = &v
}

// GetRxErrors returns the RxErrors field value if set, zero value otherwise.
func (o *ApStatsPortStat) GetRxErrors() float32 {
	if o == nil || IsNil(o.RxErrors) {
		var ret float32
		return ret
	}
	return *o.RxErrors
}

// GetRxErrorsOk returns a tuple with the RxErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsPortStat) GetRxErrorsOk() (*float32, bool) {
	if o == nil || IsNil(o.RxErrors) {
		return nil, false
	}
	return o.RxErrors, true
}

// HasRxErrors returns a boolean if a field has been set.
func (o *ApStatsPortStat) HasRxErrors() bool {
	if o != nil && !IsNil(o.RxErrors) {
		return true
	}

	return false
}

// SetRxErrors gets a reference to the given float32 and assigns it to the RxErrors field.
func (o *ApStatsPortStat) SetRxErrors(v float32) {
	o.RxErrors = &v
}

// GetRxPkts returns the RxPkts field value if set, zero value otherwise.
func (o *ApStatsPortStat) GetRxPkts() float32 {
	if o == nil || IsNil(o.RxPkts) {
		var ret float32
		return ret
	}
	return *o.RxPkts
}

// GetRxPktsOk returns a tuple with the RxPkts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsPortStat) GetRxPktsOk() (*float32, bool) {
	if o == nil || IsNil(o.RxPkts) {
		return nil, false
	}
	return o.RxPkts, true
}

// HasRxPkts returns a boolean if a field has been set.
func (o *ApStatsPortStat) HasRxPkts() bool {
	if o != nil && !IsNil(o.RxPkts) {
		return true
	}

	return false
}

// SetRxPkts gets a reference to the given float32 and assigns it to the RxPkts field.
func (o *ApStatsPortStat) SetRxPkts(v float32) {
	o.RxPkts = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *ApStatsPortStat) GetSpeed() int32 {
	if o == nil || IsNil(o.Speed) {
		var ret int32
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsPortStat) GetSpeedOk() (*int32, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *ApStatsPortStat) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given int32 and assigns it to the Speed field.
func (o *ApStatsPortStat) SetSpeed(v int32) {
	o.Speed = &v
}

// GetTxBytes returns the TxBytes field value if set, zero value otherwise.
func (o *ApStatsPortStat) GetTxBytes() float32 {
	if o == nil || IsNil(o.TxBytes) {
		var ret float32
		return ret
	}
	return *o.TxBytes
}

// GetTxBytesOk returns a tuple with the TxBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsPortStat) GetTxBytesOk() (*float32, bool) {
	if o == nil || IsNil(o.TxBytes) {
		return nil, false
	}
	return o.TxBytes, true
}

// HasTxBytes returns a boolean if a field has been set.
func (o *ApStatsPortStat) HasTxBytes() bool {
	if o != nil && !IsNil(o.TxBytes) {
		return true
	}

	return false
}

// SetTxBytes gets a reference to the given float32 and assigns it to the TxBytes field.
func (o *ApStatsPortStat) SetTxBytes(v float32) {
	o.TxBytes = &v
}

// GetTxPkts returns the TxPkts field value if set, zero value otherwise.
func (o *ApStatsPortStat) GetTxPkts() float32 {
	if o == nil || IsNil(o.TxPkts) {
		var ret float32
		return ret
	}
	return *o.TxPkts
}

// GetTxPktsOk returns a tuple with the TxPkts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsPortStat) GetTxPktsOk() (*float32, bool) {
	if o == nil || IsNil(o.TxPkts) {
		return nil, false
	}
	return o.TxPkts, true
}

// HasTxPkts returns a boolean if a field has been set.
func (o *ApStatsPortStat) HasTxPkts() bool {
	if o != nil && !IsNil(o.TxPkts) {
		return true
	}

	return false
}

// SetTxPkts gets a reference to the given float32 and assigns it to the TxPkts field.
func (o *ApStatsPortStat) SetTxPkts(v float32) {
	o.TxPkts = &v
}

// GetUp returns the Up field value if set, zero value otherwise.
func (o *ApStatsPortStat) GetUp() bool {
	if o == nil || IsNil(o.Up) {
		var ret bool
		return ret
	}
	return *o.Up
}

// GetUpOk returns a tuple with the Up field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsPortStat) GetUpOk() (*bool, bool) {
	if o == nil || IsNil(o.Up) {
		return nil, false
	}
	return o.Up, true
}

// HasUp returns a boolean if a field has been set.
func (o *ApStatsPortStat) HasUp() bool {
	if o != nil && !IsNil(o.Up) {
		return true
	}

	return false
}

// SetUp gets a reference to the given bool and assigns it to the Up field.
func (o *ApStatsPortStat) SetUp(v bool) {
	o.Up = &v
}

func (o ApStatsPortStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApStatsPortStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FullDuplex) {
		toSerialize["full_duplex"] = o.FullDuplex
	}
	if !IsNil(o.RxBytes) {
		toSerialize["rx_bytes"] = o.RxBytes
	}
	if !IsNil(o.RxErrors) {
		toSerialize["rx_errors"] = o.RxErrors
	}
	if !IsNil(o.RxPkts) {
		toSerialize["rx_pkts"] = o.RxPkts
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.TxBytes) {
		toSerialize["tx_bytes"] = o.TxBytes
	}
	if !IsNil(o.TxPkts) {
		toSerialize["tx_pkts"] = o.TxPkts
	}
	if !IsNil(o.Up) {
		toSerialize["up"] = o.Up
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApStatsPortStat) UnmarshalJSON(data []byte) (err error) {
	varApStatsPortStat := _ApStatsPortStat{}

	err = json.Unmarshal(data, &varApStatsPortStat)

	if err != nil {
		return err
	}

	*o = ApStatsPortStat(varApStatsPortStat)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "full_duplex")
		delete(additionalProperties, "rx_bytes")
		delete(additionalProperties, "rx_errors")
		delete(additionalProperties, "rx_pkts")
		delete(additionalProperties, "speed")
		delete(additionalProperties, "tx_bytes")
		delete(additionalProperties, "tx_pkts")
		delete(additionalProperties, "up")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApStatsPortStat struct {
	value *ApStatsPortStat
	isSet bool
}

func (v NullableApStatsPortStat) Get() *ApStatsPortStat {
	return v.value
}

func (v *NullableApStatsPortStat) Set(val *ApStatsPortStat) {
	v.value = val
	v.isSet = true
}

func (v NullableApStatsPortStat) IsSet() bool {
	return v.isSet
}

func (v *NullableApStatsPortStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApStatsPortStat(val *ApStatsPortStat) *NullableApStatsPortStat {
	return &NullableApStatsPortStat{value: val, isSet: true}
}

func (v NullableApStatsPortStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApStatsPortStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


