/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the OrgSettingCloudshark type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgSettingCloudshark{}

// OrgSettingCloudshark struct for OrgSettingCloudshark
type OrgSettingCloudshark struct {
	Apitoken *string `json:"apitoken,omitempty"`
	// if using CS Enteprise
	Url *string `json:"url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrgSettingCloudshark OrgSettingCloudshark

// NewOrgSettingCloudshark instantiates a new OrgSettingCloudshark object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgSettingCloudshark() *OrgSettingCloudshark {
	this := OrgSettingCloudshark{}
	return &this
}

// NewOrgSettingCloudsharkWithDefaults instantiates a new OrgSettingCloudshark object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgSettingCloudsharkWithDefaults() *OrgSettingCloudshark {
	this := OrgSettingCloudshark{}
	return &this
}

// GetApitoken returns the Apitoken field value if set, zero value otherwise.
func (o *OrgSettingCloudshark) GetApitoken() string {
	if o == nil || IsNil(o.Apitoken) {
		var ret string
		return ret
	}
	return *o.Apitoken
}

// GetApitokenOk returns a tuple with the Apitoken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgSettingCloudshark) GetApitokenOk() (*string, bool) {
	if o == nil || IsNil(o.Apitoken) {
		return nil, false
	}
	return o.Apitoken, true
}

// HasApitoken returns a boolean if a field has been set.
func (o *OrgSettingCloudshark) HasApitoken() bool {
	if o != nil && !IsNil(o.Apitoken) {
		return true
	}

	return false
}

// SetApitoken gets a reference to the given string and assigns it to the Apitoken field.
func (o *OrgSettingCloudshark) SetApitoken(v string) {
	o.Apitoken = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OrgSettingCloudshark) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgSettingCloudshark) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OrgSettingCloudshark) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OrgSettingCloudshark) SetUrl(v string) {
	o.Url = &v
}

func (o OrgSettingCloudshark) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgSettingCloudshark) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Apitoken) {
		toSerialize["apitoken"] = o.Apitoken
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrgSettingCloudshark) UnmarshalJSON(data []byte) (err error) {
	varOrgSettingCloudshark := _OrgSettingCloudshark{}

	err = json.Unmarshal(data, &varOrgSettingCloudshark)

	if err != nil {
		return err
	}

	*o = OrgSettingCloudshark(varOrgSettingCloudshark)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "apitoken")
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrgSettingCloudshark struct {
	value *OrgSettingCloudshark
	isSet bool
}

func (v NullableOrgSettingCloudshark) Get() *OrgSettingCloudshark {
	return v.value
}

func (v *NullableOrgSettingCloudshark) Set(val *OrgSettingCloudshark) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgSettingCloudshark) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgSettingCloudshark) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgSettingCloudshark(val *OrgSettingCloudshark) *NullableOrgSettingCloudshark {
	return &NullableOrgSettingCloudshark{value: val, isSet: true}
}

func (v NullableOrgSettingCloudshark) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgSettingCloudshark) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


