/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the GatewayTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayTemplate{}

// GatewayTemplate Gateway Template is applied to a site for gateway(s) in a site.
type GatewayTemplate struct {
	// additional CLI commands to append to the generated Junos config  **Note**: no check is done
	AdditionalConfigCmds []string `json:"additional_config_cmds,omitempty"`
	BgpConfig *map[string]BgpConfig `json:"bgp_config,omitempty"`
	CreatedTime *float32 `json:"created_time,omitempty"`
	DhcpdConfig *DhcpdConfigs `json:"dhcpd_config,omitempty"`
	DnsOverride *bool `json:"dnsOverride,omitempty"`
	// Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting
	DnsServers []string `json:"dns_servers,omitempty"`
	// Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting
	DnsSuffix []string `json:"dns_suffix,omitempty"`
	ExtraRoutes *map[string]GatewayExtraRoute `json:"extra_routes,omitempty"`
	GatewayMatching *GatewayMatching `json:"gateway_matching,omitempty"`
	Id *string `json:"id,omitempty"`
	// Property key is the profile name
	IdpProfiles *map[string]IdpProfile `json:"idp_profiles,omitempty"`
	// Property key is the network name
	IpConfigs *map[string]GatewayTemplateIpConfig `json:"ip_configs,omitempty"`
	ModifiedTime *float32 `json:"modified_time,omitempty"`
	Name string `json:"name"`
	Networks []Network `json:"networks,omitempty"`
	NtpOverride *bool `json:"ntpOverride,omitempty"`
	// list of NTP servers specific to this device. By default, those in Site Settings will be used
	NtpServers []string `json:"ntp_servers,omitempty"`
	OobIpConfig *JunosOobIpConfigs `json:"oob_ip_config,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	// Property key is the path name
	PathPreferences *map[string]GatewayTemplatePathPreferences `json:"path_preferences,omitempty"`
	// Property key is the port(s) name or range (e.g. \"ge-0/0/0-10\")
	PortConfig *map[string]GatewayPortConfig `json:"port_config,omitempty"`
	// auto assigned if not set
	RouterId *string `json:"router_id,omitempty"`
	// Property key is the routing policy name
	RoutingPolicies *map[string]RoutingPolicy `json:"routing_policies,omitempty"`
	ServicePolicies []ServicePolicy `json:"service_policies,omitempty"`
	// Property key is the tunnel name
	TunnelConfigs *map[string]TunnelConfigs `json:"tunnel_configs,omitempty"`
	TunnelProviderOptions *TunnelProviderOptions `json:"tunnel_provider_options,omitempty"`
	Type *GatewayTemplateType `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayTemplate GatewayTemplate

// NewGatewayTemplate instantiates a new GatewayTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayTemplate(name string) *GatewayTemplate {
	this := GatewayTemplate{}
	var dnsOverride bool = false
	this.DnsOverride = &dnsOverride
	this.Name = name
	var ntpOverride bool = false
	this.NtpOverride = &ntpOverride
	var type_ GatewayTemplateType = GATEWAYTEMPLATETYPE_STANDALONE
	this.Type = &type_
	return &this
}

// NewGatewayTemplateWithDefaults instantiates a new GatewayTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayTemplateWithDefaults() *GatewayTemplate {
	this := GatewayTemplate{}
	var dnsOverride bool = false
	this.DnsOverride = &dnsOverride
	var ntpOverride bool = false
	this.NtpOverride = &ntpOverride
	var type_ GatewayTemplateType = GATEWAYTEMPLATETYPE_STANDALONE
	this.Type = &type_
	return &this
}

// GetAdditionalConfigCmds returns the AdditionalConfigCmds field value if set, zero value otherwise.
func (o *GatewayTemplate) GetAdditionalConfigCmds() []string {
	if o == nil || IsNil(o.AdditionalConfigCmds) {
		var ret []string
		return ret
	}
	return o.AdditionalConfigCmds
}

// GetAdditionalConfigCmdsOk returns a tuple with the AdditionalConfigCmds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetAdditionalConfigCmdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalConfigCmds) {
		return nil, false
	}
	return o.AdditionalConfigCmds, true
}

// HasAdditionalConfigCmds returns a boolean if a field has been set.
func (o *GatewayTemplate) HasAdditionalConfigCmds() bool {
	if o != nil && !IsNil(o.AdditionalConfigCmds) {
		return true
	}

	return false
}

// SetAdditionalConfigCmds gets a reference to the given []string and assigns it to the AdditionalConfigCmds field.
func (o *GatewayTemplate) SetAdditionalConfigCmds(v []string) {
	o.AdditionalConfigCmds = v
}

// GetBgpConfig returns the BgpConfig field value if set, zero value otherwise.
func (o *GatewayTemplate) GetBgpConfig() map[string]BgpConfig {
	if o == nil || IsNil(o.BgpConfig) {
		var ret map[string]BgpConfig
		return ret
	}
	return *o.BgpConfig
}

// GetBgpConfigOk returns a tuple with the BgpConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetBgpConfigOk() (*map[string]BgpConfig, bool) {
	if o == nil || IsNil(o.BgpConfig) {
		return nil, false
	}
	return o.BgpConfig, true
}

// HasBgpConfig returns a boolean if a field has been set.
func (o *GatewayTemplate) HasBgpConfig() bool {
	if o != nil && !IsNil(o.BgpConfig) {
		return true
	}

	return false
}

// SetBgpConfig gets a reference to the given map[string]BgpConfig and assigns it to the BgpConfig field.
func (o *GatewayTemplate) SetBgpConfig(v map[string]BgpConfig) {
	o.BgpConfig = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *GatewayTemplate) GetCreatedTime() float32 {
	if o == nil || IsNil(o.CreatedTime) {
		var ret float32
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetCreatedTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *GatewayTemplate) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given float32 and assigns it to the CreatedTime field.
func (o *GatewayTemplate) SetCreatedTime(v float32) {
	o.CreatedTime = &v
}

// GetDhcpdConfig returns the DhcpdConfig field value if set, zero value otherwise.
func (o *GatewayTemplate) GetDhcpdConfig() DhcpdConfigs {
	if o == nil || IsNil(o.DhcpdConfig) {
		var ret DhcpdConfigs
		return ret
	}
	return *o.DhcpdConfig
}

// GetDhcpdConfigOk returns a tuple with the DhcpdConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetDhcpdConfigOk() (*DhcpdConfigs, bool) {
	if o == nil || IsNil(o.DhcpdConfig) {
		return nil, false
	}
	return o.DhcpdConfig, true
}

// HasDhcpdConfig returns a boolean if a field has been set.
func (o *GatewayTemplate) HasDhcpdConfig() bool {
	if o != nil && !IsNil(o.DhcpdConfig) {
		return true
	}

	return false
}

// SetDhcpdConfig gets a reference to the given DhcpdConfigs and assigns it to the DhcpdConfig field.
func (o *GatewayTemplate) SetDhcpdConfig(v DhcpdConfigs) {
	o.DhcpdConfig = &v
}

// GetDnsOverride returns the DnsOverride field value if set, zero value otherwise.
func (o *GatewayTemplate) GetDnsOverride() bool {
	if o == nil || IsNil(o.DnsOverride) {
		var ret bool
		return ret
	}
	return *o.DnsOverride
}

// GetDnsOverrideOk returns a tuple with the DnsOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetDnsOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.DnsOverride) {
		return nil, false
	}
	return o.DnsOverride, true
}

// HasDnsOverride returns a boolean if a field has been set.
func (o *GatewayTemplate) HasDnsOverride() bool {
	if o != nil && !IsNil(o.DnsOverride) {
		return true
	}

	return false
}

// SetDnsOverride gets a reference to the given bool and assigns it to the DnsOverride field.
func (o *GatewayTemplate) SetDnsOverride(v bool) {
	o.DnsOverride = &v
}

// GetDnsServers returns the DnsServers field value if set, zero value otherwise.
func (o *GatewayTemplate) GetDnsServers() []string {
	if o == nil || IsNil(o.DnsServers) {
		var ret []string
		return ret
	}
	return o.DnsServers
}

// GetDnsServersOk returns a tuple with the DnsServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetDnsServersOk() ([]string, bool) {
	if o == nil || IsNil(o.DnsServers) {
		return nil, false
	}
	return o.DnsServers, true
}

// HasDnsServers returns a boolean if a field has been set.
func (o *GatewayTemplate) HasDnsServers() bool {
	if o != nil && !IsNil(o.DnsServers) {
		return true
	}

	return false
}

// SetDnsServers gets a reference to the given []string and assigns it to the DnsServers field.
func (o *GatewayTemplate) SetDnsServers(v []string) {
	o.DnsServers = v
}

// GetDnsSuffix returns the DnsSuffix field value if set, zero value otherwise.
func (o *GatewayTemplate) GetDnsSuffix() []string {
	if o == nil || IsNil(o.DnsSuffix) {
		var ret []string
		return ret
	}
	return o.DnsSuffix
}

// GetDnsSuffixOk returns a tuple with the DnsSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetDnsSuffixOk() ([]string, bool) {
	if o == nil || IsNil(o.DnsSuffix) {
		return nil, false
	}
	return o.DnsSuffix, true
}

// HasDnsSuffix returns a boolean if a field has been set.
func (o *GatewayTemplate) HasDnsSuffix() bool {
	if o != nil && !IsNil(o.DnsSuffix) {
		return true
	}

	return false
}

// SetDnsSuffix gets a reference to the given []string and assigns it to the DnsSuffix field.
func (o *GatewayTemplate) SetDnsSuffix(v []string) {
	o.DnsSuffix = v
}

// GetExtraRoutes returns the ExtraRoutes field value if set, zero value otherwise.
func (o *GatewayTemplate) GetExtraRoutes() map[string]GatewayExtraRoute {
	if o == nil || IsNil(o.ExtraRoutes) {
		var ret map[string]GatewayExtraRoute
		return ret
	}
	return *o.ExtraRoutes
}

// GetExtraRoutesOk returns a tuple with the ExtraRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetExtraRoutesOk() (*map[string]GatewayExtraRoute, bool) {
	if o == nil || IsNil(o.ExtraRoutes) {
		return nil, false
	}
	return o.ExtraRoutes, true
}

// HasExtraRoutes returns a boolean if a field has been set.
func (o *GatewayTemplate) HasExtraRoutes() bool {
	if o != nil && !IsNil(o.ExtraRoutes) {
		return true
	}

	return false
}

// SetExtraRoutes gets a reference to the given map[string]GatewayExtraRoute and assigns it to the ExtraRoutes field.
func (o *GatewayTemplate) SetExtraRoutes(v map[string]GatewayExtraRoute) {
	o.ExtraRoutes = &v
}

// GetGatewayMatching returns the GatewayMatching field value if set, zero value otherwise.
func (o *GatewayTemplate) GetGatewayMatching() GatewayMatching {
	if o == nil || IsNil(o.GatewayMatching) {
		var ret GatewayMatching
		return ret
	}
	return *o.GatewayMatching
}

// GetGatewayMatchingOk returns a tuple with the GatewayMatching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetGatewayMatchingOk() (*GatewayMatching, bool) {
	if o == nil || IsNil(o.GatewayMatching) {
		return nil, false
	}
	return o.GatewayMatching, true
}

// HasGatewayMatching returns a boolean if a field has been set.
func (o *GatewayTemplate) HasGatewayMatching() bool {
	if o != nil && !IsNil(o.GatewayMatching) {
		return true
	}

	return false
}

// SetGatewayMatching gets a reference to the given GatewayMatching and assigns it to the GatewayMatching field.
func (o *GatewayTemplate) SetGatewayMatching(v GatewayMatching) {
	o.GatewayMatching = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GatewayTemplate) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GatewayTemplate) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GatewayTemplate) SetId(v string) {
	o.Id = &v
}

// GetIdpProfiles returns the IdpProfiles field value if set, zero value otherwise.
func (o *GatewayTemplate) GetIdpProfiles() map[string]IdpProfile {
	if o == nil || IsNil(o.IdpProfiles) {
		var ret map[string]IdpProfile
		return ret
	}
	return *o.IdpProfiles
}

// GetIdpProfilesOk returns a tuple with the IdpProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetIdpProfilesOk() (*map[string]IdpProfile, bool) {
	if o == nil || IsNil(o.IdpProfiles) {
		return nil, false
	}
	return o.IdpProfiles, true
}

// HasIdpProfiles returns a boolean if a field has been set.
func (o *GatewayTemplate) HasIdpProfiles() bool {
	if o != nil && !IsNil(o.IdpProfiles) {
		return true
	}

	return false
}

// SetIdpProfiles gets a reference to the given map[string]IdpProfile and assigns it to the IdpProfiles field.
func (o *GatewayTemplate) SetIdpProfiles(v map[string]IdpProfile) {
	o.IdpProfiles = &v
}

// GetIpConfigs returns the IpConfigs field value if set, zero value otherwise.
func (o *GatewayTemplate) GetIpConfigs() map[string]GatewayTemplateIpConfig {
	if o == nil || IsNil(o.IpConfigs) {
		var ret map[string]GatewayTemplateIpConfig
		return ret
	}
	return *o.IpConfigs
}

// GetIpConfigsOk returns a tuple with the IpConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetIpConfigsOk() (*map[string]GatewayTemplateIpConfig, bool) {
	if o == nil || IsNil(o.IpConfigs) {
		return nil, false
	}
	return o.IpConfigs, true
}

// HasIpConfigs returns a boolean if a field has been set.
func (o *GatewayTemplate) HasIpConfigs() bool {
	if o != nil && !IsNil(o.IpConfigs) {
		return true
	}

	return false
}

// SetIpConfigs gets a reference to the given map[string]GatewayTemplateIpConfig and assigns it to the IpConfigs field.
func (o *GatewayTemplate) SetIpConfigs(v map[string]GatewayTemplateIpConfig) {
	o.IpConfigs = &v
}

// GetModifiedTime returns the ModifiedTime field value if set, zero value otherwise.
func (o *GatewayTemplate) GetModifiedTime() float32 {
	if o == nil || IsNil(o.ModifiedTime) {
		var ret float32
		return ret
	}
	return *o.ModifiedTime
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetModifiedTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.ModifiedTime) {
		return nil, false
	}
	return o.ModifiedTime, true
}

// HasModifiedTime returns a boolean if a field has been set.
func (o *GatewayTemplate) HasModifiedTime() bool {
	if o != nil && !IsNil(o.ModifiedTime) {
		return true
	}

	return false
}

// SetModifiedTime gets a reference to the given float32 and assigns it to the ModifiedTime field.
func (o *GatewayTemplate) SetModifiedTime(v float32) {
	o.ModifiedTime = &v
}

// GetName returns the Name field value
func (o *GatewayTemplate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GatewayTemplate) SetName(v string) {
	o.Name = v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *GatewayTemplate) GetNetworks() []Network {
	if o == nil || IsNil(o.Networks) {
		var ret []Network
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetNetworksOk() ([]Network, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *GatewayTemplate) HasNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []Network and assigns it to the Networks field.
func (o *GatewayTemplate) SetNetworks(v []Network) {
	o.Networks = v
}

// GetNtpOverride returns the NtpOverride field value if set, zero value otherwise.
func (o *GatewayTemplate) GetNtpOverride() bool {
	if o == nil || IsNil(o.NtpOverride) {
		var ret bool
		return ret
	}
	return *o.NtpOverride
}

// GetNtpOverrideOk returns a tuple with the NtpOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetNtpOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.NtpOverride) {
		return nil, false
	}
	return o.NtpOverride, true
}

// HasNtpOverride returns a boolean if a field has been set.
func (o *GatewayTemplate) HasNtpOverride() bool {
	if o != nil && !IsNil(o.NtpOverride) {
		return true
	}

	return false
}

// SetNtpOverride gets a reference to the given bool and assigns it to the NtpOverride field.
func (o *GatewayTemplate) SetNtpOverride(v bool) {
	o.NtpOverride = &v
}

// GetNtpServers returns the NtpServers field value if set, zero value otherwise.
func (o *GatewayTemplate) GetNtpServers() []string {
	if o == nil || IsNil(o.NtpServers) {
		var ret []string
		return ret
	}
	return o.NtpServers
}

// GetNtpServersOk returns a tuple with the NtpServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetNtpServersOk() ([]string, bool) {
	if o == nil || IsNil(o.NtpServers) {
		return nil, false
	}
	return o.NtpServers, true
}

// HasNtpServers returns a boolean if a field has been set.
func (o *GatewayTemplate) HasNtpServers() bool {
	if o != nil && !IsNil(o.NtpServers) {
		return true
	}

	return false
}

// SetNtpServers gets a reference to the given []string and assigns it to the NtpServers field.
func (o *GatewayTemplate) SetNtpServers(v []string) {
	o.NtpServers = v
}

// GetOobIpConfig returns the OobIpConfig field value if set, zero value otherwise.
func (o *GatewayTemplate) GetOobIpConfig() JunosOobIpConfigs {
	if o == nil || IsNil(o.OobIpConfig) {
		var ret JunosOobIpConfigs
		return ret
	}
	return *o.OobIpConfig
}

// GetOobIpConfigOk returns a tuple with the OobIpConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetOobIpConfigOk() (*JunosOobIpConfigs, bool) {
	if o == nil || IsNil(o.OobIpConfig) {
		return nil, false
	}
	return o.OobIpConfig, true
}

// HasOobIpConfig returns a boolean if a field has been set.
func (o *GatewayTemplate) HasOobIpConfig() bool {
	if o != nil && !IsNil(o.OobIpConfig) {
		return true
	}

	return false
}

// SetOobIpConfig gets a reference to the given JunosOobIpConfigs and assigns it to the OobIpConfig field.
func (o *GatewayTemplate) SetOobIpConfig(v JunosOobIpConfigs) {
	o.OobIpConfig = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *GatewayTemplate) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *GatewayTemplate) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *GatewayTemplate) SetOrgId(v string) {
	o.OrgId = &v
}

// GetPathPreferences returns the PathPreferences field value if set, zero value otherwise.
func (o *GatewayTemplate) GetPathPreferences() map[string]GatewayTemplatePathPreferences {
	if o == nil || IsNil(o.PathPreferences) {
		var ret map[string]GatewayTemplatePathPreferences
		return ret
	}
	return *o.PathPreferences
}

// GetPathPreferencesOk returns a tuple with the PathPreferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetPathPreferencesOk() (*map[string]GatewayTemplatePathPreferences, bool) {
	if o == nil || IsNil(o.PathPreferences) {
		return nil, false
	}
	return o.PathPreferences, true
}

// HasPathPreferences returns a boolean if a field has been set.
func (o *GatewayTemplate) HasPathPreferences() bool {
	if o != nil && !IsNil(o.PathPreferences) {
		return true
	}

	return false
}

// SetPathPreferences gets a reference to the given map[string]GatewayTemplatePathPreferences and assigns it to the PathPreferences field.
func (o *GatewayTemplate) SetPathPreferences(v map[string]GatewayTemplatePathPreferences) {
	o.PathPreferences = &v
}

// GetPortConfig returns the PortConfig field value if set, zero value otherwise.
func (o *GatewayTemplate) GetPortConfig() map[string]GatewayPortConfig {
	if o == nil || IsNil(o.PortConfig) {
		var ret map[string]GatewayPortConfig
		return ret
	}
	return *o.PortConfig
}

// GetPortConfigOk returns a tuple with the PortConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetPortConfigOk() (*map[string]GatewayPortConfig, bool) {
	if o == nil || IsNil(o.PortConfig) {
		return nil, false
	}
	return o.PortConfig, true
}

// HasPortConfig returns a boolean if a field has been set.
func (o *GatewayTemplate) HasPortConfig() bool {
	if o != nil && !IsNil(o.PortConfig) {
		return true
	}

	return false
}

// SetPortConfig gets a reference to the given map[string]GatewayPortConfig and assigns it to the PortConfig field.
func (o *GatewayTemplate) SetPortConfig(v map[string]GatewayPortConfig) {
	o.PortConfig = &v
}

// GetRouterId returns the RouterId field value if set, zero value otherwise.
func (o *GatewayTemplate) GetRouterId() string {
	if o == nil || IsNil(o.RouterId) {
		var ret string
		return ret
	}
	return *o.RouterId
}

// GetRouterIdOk returns a tuple with the RouterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetRouterIdOk() (*string, bool) {
	if o == nil || IsNil(o.RouterId) {
		return nil, false
	}
	return o.RouterId, true
}

// HasRouterId returns a boolean if a field has been set.
func (o *GatewayTemplate) HasRouterId() bool {
	if o != nil && !IsNil(o.RouterId) {
		return true
	}

	return false
}

// SetRouterId gets a reference to the given string and assigns it to the RouterId field.
func (o *GatewayTemplate) SetRouterId(v string) {
	o.RouterId = &v
}

// GetRoutingPolicies returns the RoutingPolicies field value if set, zero value otherwise.
func (o *GatewayTemplate) GetRoutingPolicies() map[string]RoutingPolicy {
	if o == nil || IsNil(o.RoutingPolicies) {
		var ret map[string]RoutingPolicy
		return ret
	}
	return *o.RoutingPolicies
}

// GetRoutingPoliciesOk returns a tuple with the RoutingPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetRoutingPoliciesOk() (*map[string]RoutingPolicy, bool) {
	if o == nil || IsNil(o.RoutingPolicies) {
		return nil, false
	}
	return o.RoutingPolicies, true
}

// HasRoutingPolicies returns a boolean if a field has been set.
func (o *GatewayTemplate) HasRoutingPolicies() bool {
	if o != nil && !IsNil(o.RoutingPolicies) {
		return true
	}

	return false
}

// SetRoutingPolicies gets a reference to the given map[string]RoutingPolicy and assigns it to the RoutingPolicies field.
func (o *GatewayTemplate) SetRoutingPolicies(v map[string]RoutingPolicy) {
	o.RoutingPolicies = &v
}

// GetServicePolicies returns the ServicePolicies field value if set, zero value otherwise.
func (o *GatewayTemplate) GetServicePolicies() []ServicePolicy {
	if o == nil || IsNil(o.ServicePolicies) {
		var ret []ServicePolicy
		return ret
	}
	return o.ServicePolicies
}

// GetServicePoliciesOk returns a tuple with the ServicePolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetServicePoliciesOk() ([]ServicePolicy, bool) {
	if o == nil || IsNil(o.ServicePolicies) {
		return nil, false
	}
	return o.ServicePolicies, true
}

// HasServicePolicies returns a boolean if a field has been set.
func (o *GatewayTemplate) HasServicePolicies() bool {
	if o != nil && !IsNil(o.ServicePolicies) {
		return true
	}

	return false
}

// SetServicePolicies gets a reference to the given []ServicePolicy and assigns it to the ServicePolicies field.
func (o *GatewayTemplate) SetServicePolicies(v []ServicePolicy) {
	o.ServicePolicies = v
}

// GetTunnelConfigs returns the TunnelConfigs field value if set, zero value otherwise.
func (o *GatewayTemplate) GetTunnelConfigs() map[string]TunnelConfigs {
	if o == nil || IsNil(o.TunnelConfigs) {
		var ret map[string]TunnelConfigs
		return ret
	}
	return *o.TunnelConfigs
}

// GetTunnelConfigsOk returns a tuple with the TunnelConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetTunnelConfigsOk() (*map[string]TunnelConfigs, bool) {
	if o == nil || IsNil(o.TunnelConfigs) {
		return nil, false
	}
	return o.TunnelConfigs, true
}

// HasTunnelConfigs returns a boolean if a field has been set.
func (o *GatewayTemplate) HasTunnelConfigs() bool {
	if o != nil && !IsNil(o.TunnelConfigs) {
		return true
	}

	return false
}

// SetTunnelConfigs gets a reference to the given map[string]TunnelConfigs and assigns it to the TunnelConfigs field.
func (o *GatewayTemplate) SetTunnelConfigs(v map[string]TunnelConfigs) {
	o.TunnelConfigs = &v
}

// GetTunnelProviderOptions returns the TunnelProviderOptions field value if set, zero value otherwise.
func (o *GatewayTemplate) GetTunnelProviderOptions() TunnelProviderOptions {
	if o == nil || IsNil(o.TunnelProviderOptions) {
		var ret TunnelProviderOptions
		return ret
	}
	return *o.TunnelProviderOptions
}

// GetTunnelProviderOptionsOk returns a tuple with the TunnelProviderOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetTunnelProviderOptionsOk() (*TunnelProviderOptions, bool) {
	if o == nil || IsNil(o.TunnelProviderOptions) {
		return nil, false
	}
	return o.TunnelProviderOptions, true
}

// HasTunnelProviderOptions returns a boolean if a field has been set.
func (o *GatewayTemplate) HasTunnelProviderOptions() bool {
	if o != nil && !IsNil(o.TunnelProviderOptions) {
		return true
	}

	return false
}

// SetTunnelProviderOptions gets a reference to the given TunnelProviderOptions and assigns it to the TunnelProviderOptions field.
func (o *GatewayTemplate) SetTunnelProviderOptions(v TunnelProviderOptions) {
	o.TunnelProviderOptions = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GatewayTemplate) GetType() GatewayTemplateType {
	if o == nil || IsNil(o.Type) {
		var ret GatewayTemplateType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplate) GetTypeOk() (*GatewayTemplateType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GatewayTemplate) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given GatewayTemplateType and assigns it to the Type field.
func (o *GatewayTemplate) SetType(v GatewayTemplateType) {
	o.Type = &v
}

func (o GatewayTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalConfigCmds) {
		toSerialize["additional_config_cmds"] = o.AdditionalConfigCmds
	}
	if !IsNil(o.BgpConfig) {
		toSerialize["bgp_config"] = o.BgpConfig
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.DhcpdConfig) {
		toSerialize["dhcpd_config"] = o.DhcpdConfig
	}
	if !IsNil(o.DnsOverride) {
		toSerialize["dnsOverride"] = o.DnsOverride
	}
	if !IsNil(o.DnsServers) {
		toSerialize["dns_servers"] = o.DnsServers
	}
	if !IsNil(o.DnsSuffix) {
		toSerialize["dns_suffix"] = o.DnsSuffix
	}
	if !IsNil(o.ExtraRoutes) {
		toSerialize["extra_routes"] = o.ExtraRoutes
	}
	if !IsNil(o.GatewayMatching) {
		toSerialize["gateway_matching"] = o.GatewayMatching
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IdpProfiles) {
		toSerialize["idp_profiles"] = o.IdpProfiles
	}
	if !IsNil(o.IpConfigs) {
		toSerialize["ip_configs"] = o.IpConfigs
	}
	if !IsNil(o.ModifiedTime) {
		toSerialize["modified_time"] = o.ModifiedTime
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	if !IsNil(o.NtpOverride) {
		toSerialize["ntpOverride"] = o.NtpOverride
	}
	if !IsNil(o.NtpServers) {
		toSerialize["ntp_servers"] = o.NtpServers
	}
	if !IsNil(o.OobIpConfig) {
		toSerialize["oob_ip_config"] = o.OobIpConfig
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.PathPreferences) {
		toSerialize["path_preferences"] = o.PathPreferences
	}
	if !IsNil(o.PortConfig) {
		toSerialize["port_config"] = o.PortConfig
	}
	if !IsNil(o.RouterId) {
		toSerialize["router_id"] = o.RouterId
	}
	if !IsNil(o.RoutingPolicies) {
		toSerialize["routing_policies"] = o.RoutingPolicies
	}
	if !IsNil(o.ServicePolicies) {
		toSerialize["service_policies"] = o.ServicePolicies
	}
	if !IsNil(o.TunnelConfigs) {
		toSerialize["tunnel_configs"] = o.TunnelConfigs
	}
	if !IsNil(o.TunnelProviderOptions) {
		toSerialize["tunnel_provider_options"] = o.TunnelProviderOptions
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayTemplate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGatewayTemplate := _GatewayTemplate{}

	err = json.Unmarshal(data, &varGatewayTemplate)

	if err != nil {
		return err
	}

	*o = GatewayTemplate(varGatewayTemplate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "additional_config_cmds")
		delete(additionalProperties, "bgp_config")
		delete(additionalProperties, "created_time")
		delete(additionalProperties, "dhcpd_config")
		delete(additionalProperties, "dnsOverride")
		delete(additionalProperties, "dns_servers")
		delete(additionalProperties, "dns_suffix")
		delete(additionalProperties, "extra_routes")
		delete(additionalProperties, "gateway_matching")
		delete(additionalProperties, "id")
		delete(additionalProperties, "idp_profiles")
		delete(additionalProperties, "ip_configs")
		delete(additionalProperties, "modified_time")
		delete(additionalProperties, "name")
		delete(additionalProperties, "networks")
		delete(additionalProperties, "ntpOverride")
		delete(additionalProperties, "ntp_servers")
		delete(additionalProperties, "oob_ip_config")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "path_preferences")
		delete(additionalProperties, "port_config")
		delete(additionalProperties, "router_id")
		delete(additionalProperties, "routing_policies")
		delete(additionalProperties, "service_policies")
		delete(additionalProperties, "tunnel_configs")
		delete(additionalProperties, "tunnel_provider_options")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayTemplate struct {
	value *GatewayTemplate
	isSet bool
}

func (v NullableGatewayTemplate) Get() *GatewayTemplate {
	return v.value
}

func (v *NullableGatewayTemplate) Set(val *GatewayTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayTemplate(val *GatewayTemplate) *NullableGatewayTemplate {
	return &NullableGatewayTemplate{value: val, isSet: true}
}

func (v NullableGatewayTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


