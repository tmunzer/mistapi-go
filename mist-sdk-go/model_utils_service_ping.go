/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the UtilsServicePing type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UtilsServicePing{}

// UtilsServicePing struct for UtilsServicePing
type UtilsServicePing struct {
	Count *int32 `json:"count,omitempty"`
	Host string `json:"host"`
	// ping packet takes the same path as the service
	Service string `json:"service"`
	Size *int32 `json:"size,omitempty"`
	// tenant context in which the packet is sent
	Tenant *string `json:"tenant,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UtilsServicePing UtilsServicePing

// NewUtilsServicePing instantiates a new UtilsServicePing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUtilsServicePing(host string, service string) *UtilsServicePing {
	this := UtilsServicePing{}
	var count int32 = 10
	this.Count = &count
	this.Host = host
	this.Service = service
	var size int32 = 56
	this.Size = &size
	return &this
}

// NewUtilsServicePingWithDefaults instantiates a new UtilsServicePing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUtilsServicePingWithDefaults() *UtilsServicePing {
	this := UtilsServicePing{}
	var count int32 = 10
	this.Count = &count
	var size int32 = 56
	this.Size = &size
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *UtilsServicePing) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsServicePing) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *UtilsServicePing) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *UtilsServicePing) SetCount(v int32) {
	o.Count = &v
}

// GetHost returns the Host field value
func (o *UtilsServicePing) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *UtilsServicePing) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *UtilsServicePing) SetHost(v string) {
	o.Host = v
}

// GetService returns the Service field value
func (o *UtilsServicePing) GetService() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *UtilsServicePing) GetServiceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *UtilsServicePing) SetService(v string) {
	o.Service = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *UtilsServicePing) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsServicePing) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *UtilsServicePing) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *UtilsServicePing) SetSize(v int32) {
	o.Size = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *UtilsServicePing) GetTenant() string {
	if o == nil || IsNil(o.Tenant) {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsServicePing) GetTenantOk() (*string, bool) {
	if o == nil || IsNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *UtilsServicePing) HasTenant() bool {
	if o != nil && !IsNil(o.Tenant) {
		return true
	}

	return false
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *UtilsServicePing) SetTenant(v string) {
	o.Tenant = &v
}

func (o UtilsServicePing) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UtilsServicePing) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	toSerialize["host"] = o.Host
	toSerialize["service"] = o.Service
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Tenant) {
		toSerialize["tenant"] = o.Tenant
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UtilsServicePing) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"host",
		"service",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUtilsServicePing := _UtilsServicePing{}

	err = json.Unmarshal(data, &varUtilsServicePing)

	if err != nil {
		return err
	}

	*o = UtilsServicePing(varUtilsServicePing)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "count")
		delete(additionalProperties, "host")
		delete(additionalProperties, "service")
		delete(additionalProperties, "size")
		delete(additionalProperties, "tenant")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUtilsServicePing struct {
	value *UtilsServicePing
	isSet bool
}

func (v NullableUtilsServicePing) Get() *UtilsServicePing {
	return v.value
}

func (v *NullableUtilsServicePing) Set(val *UtilsServicePing) {
	v.value = val
	v.isSet = true
}

func (v NullableUtilsServicePing) IsSet() bool {
	return v.isSet
}

func (v *NullableUtilsServicePing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUtilsServicePing(val *UtilsServicePing) *NullableUtilsServicePing {
	return &NullableUtilsServicePing{value: val, isSet: true}
}

func (v NullableUtilsServicePing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUtilsServicePing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


