/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ReponseRouter128tRegisterCmd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReponseRouter128tRegisterCmd{}

// ReponseRouter128tRegisterCmd struct for ReponseRouter128tRegisterCmd
type ReponseRouter128tRegisterCmd struct {
	ConductorCmd *string `json:"conductor_cmd,omitempty"`
	RegistrationCode *string `json:"registration_code,omitempty"`
	RouterShellCmd *string `json:"router_shell_cmd,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ReponseRouter128tRegisterCmd ReponseRouter128tRegisterCmd

// NewReponseRouter128tRegisterCmd instantiates a new ReponseRouter128tRegisterCmd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReponseRouter128tRegisterCmd() *ReponseRouter128tRegisterCmd {
	this := ReponseRouter128tRegisterCmd{}
	return &this
}

// NewReponseRouter128tRegisterCmdWithDefaults instantiates a new ReponseRouter128tRegisterCmd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReponseRouter128tRegisterCmdWithDefaults() *ReponseRouter128tRegisterCmd {
	this := ReponseRouter128tRegisterCmd{}
	return &this
}

// GetConductorCmd returns the ConductorCmd field value if set, zero value otherwise.
func (o *ReponseRouter128tRegisterCmd) GetConductorCmd() string {
	if o == nil || IsNil(o.ConductorCmd) {
		var ret string
		return ret
	}
	return *o.ConductorCmd
}

// GetConductorCmdOk returns a tuple with the ConductorCmd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReponseRouter128tRegisterCmd) GetConductorCmdOk() (*string, bool) {
	if o == nil || IsNil(o.ConductorCmd) {
		return nil, false
	}
	return o.ConductorCmd, true
}

// HasConductorCmd returns a boolean if a field has been set.
func (o *ReponseRouter128tRegisterCmd) HasConductorCmd() bool {
	if o != nil && !IsNil(o.ConductorCmd) {
		return true
	}

	return false
}

// SetConductorCmd gets a reference to the given string and assigns it to the ConductorCmd field.
func (o *ReponseRouter128tRegisterCmd) SetConductorCmd(v string) {
	o.ConductorCmd = &v
}

// GetRegistrationCode returns the RegistrationCode field value if set, zero value otherwise.
func (o *ReponseRouter128tRegisterCmd) GetRegistrationCode() string {
	if o == nil || IsNil(o.RegistrationCode) {
		var ret string
		return ret
	}
	return *o.RegistrationCode
}

// GetRegistrationCodeOk returns a tuple with the RegistrationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReponseRouter128tRegisterCmd) GetRegistrationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationCode) {
		return nil, false
	}
	return o.RegistrationCode, true
}

// HasRegistrationCode returns a boolean if a field has been set.
func (o *ReponseRouter128tRegisterCmd) HasRegistrationCode() bool {
	if o != nil && !IsNil(o.RegistrationCode) {
		return true
	}

	return false
}

// SetRegistrationCode gets a reference to the given string and assigns it to the RegistrationCode field.
func (o *ReponseRouter128tRegisterCmd) SetRegistrationCode(v string) {
	o.RegistrationCode = &v
}

// GetRouterShellCmd returns the RouterShellCmd field value if set, zero value otherwise.
func (o *ReponseRouter128tRegisterCmd) GetRouterShellCmd() string {
	if o == nil || IsNil(o.RouterShellCmd) {
		var ret string
		return ret
	}
	return *o.RouterShellCmd
}

// GetRouterShellCmdOk returns a tuple with the RouterShellCmd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReponseRouter128tRegisterCmd) GetRouterShellCmdOk() (*string, bool) {
	if o == nil || IsNil(o.RouterShellCmd) {
		return nil, false
	}
	return o.RouterShellCmd, true
}

// HasRouterShellCmd returns a boolean if a field has been set.
func (o *ReponseRouter128tRegisterCmd) HasRouterShellCmd() bool {
	if o != nil && !IsNil(o.RouterShellCmd) {
		return true
	}

	return false
}

// SetRouterShellCmd gets a reference to the given string and assigns it to the RouterShellCmd field.
func (o *ReponseRouter128tRegisterCmd) SetRouterShellCmd(v string) {
	o.RouterShellCmd = &v
}

func (o ReponseRouter128tRegisterCmd) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReponseRouter128tRegisterCmd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConductorCmd) {
		toSerialize["conductor_cmd"] = o.ConductorCmd
	}
	if !IsNil(o.RegistrationCode) {
		toSerialize["registration_code"] = o.RegistrationCode
	}
	if !IsNil(o.RouterShellCmd) {
		toSerialize["router_shell_cmd"] = o.RouterShellCmd
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ReponseRouter128tRegisterCmd) UnmarshalJSON(data []byte) (err error) {
	varReponseRouter128tRegisterCmd := _ReponseRouter128tRegisterCmd{}

	err = json.Unmarshal(data, &varReponseRouter128tRegisterCmd)

	if err != nil {
		return err
	}

	*o = ReponseRouter128tRegisterCmd(varReponseRouter128tRegisterCmd)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "conductor_cmd")
		delete(additionalProperties, "registration_code")
		delete(additionalProperties, "router_shell_cmd")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableReponseRouter128tRegisterCmd struct {
	value *ReponseRouter128tRegisterCmd
	isSet bool
}

func (v NullableReponseRouter128tRegisterCmd) Get() *ReponseRouter128tRegisterCmd {
	return v.value
}

func (v *NullableReponseRouter128tRegisterCmd) Set(val *ReponseRouter128tRegisterCmd) {
	v.value = val
	v.isSet = true
}

func (v NullableReponseRouter128tRegisterCmd) IsSet() bool {
	return v.isSet
}

func (v *NullableReponseRouter128tRegisterCmd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReponseRouter128tRegisterCmd(val *ReponseRouter128tRegisterCmd) *NullableReponseRouter128tRegisterCmd {
	return &NullableReponseRouter128tRegisterCmd{value: val, isSet: true}
}

func (v NullableReponseRouter128tRegisterCmd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReponseRouter128tRegisterCmd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


