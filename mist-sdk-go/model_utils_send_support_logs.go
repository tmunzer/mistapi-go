/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the UtilsSendSupportLogs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UtilsSendSupportLogs{}

// UtilsSendSupportLogs struct for UtilsSendSupportLogs
type UtilsSendSupportLogs struct {
	Info *UtilsSendSupportLogsInfo `json:"info,omitempty"`
	// optional: for SSR, if node is not present, both nodes support files are uploaded
	Node *string `json:"node,omitempty"`
	// optional: number of most recent messages files to upload.
	NumMessagesFiles *int32 `json:"num_messages_files,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UtilsSendSupportLogs UtilsSendSupportLogs

// NewUtilsSendSupportLogs instantiates a new UtilsSendSupportLogs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUtilsSendSupportLogs() *UtilsSendSupportLogs {
	this := UtilsSendSupportLogs{}
	var info UtilsSendSupportLogsInfo = UTILSSENDSUPPORTLOGSINFO_FULL
	this.Info = &info
	var numMessagesFiles int32 = 1
	this.NumMessagesFiles = &numMessagesFiles
	return &this
}

// NewUtilsSendSupportLogsWithDefaults instantiates a new UtilsSendSupportLogs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUtilsSendSupportLogsWithDefaults() *UtilsSendSupportLogs {
	this := UtilsSendSupportLogs{}
	var info UtilsSendSupportLogsInfo = UTILSSENDSUPPORTLOGSINFO_FULL
	this.Info = &info
	var numMessagesFiles int32 = 1
	this.NumMessagesFiles = &numMessagesFiles
	return &this
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *UtilsSendSupportLogs) GetInfo() UtilsSendSupportLogsInfo {
	if o == nil || IsNil(o.Info) {
		var ret UtilsSendSupportLogsInfo
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSendSupportLogs) GetInfoOk() (*UtilsSendSupportLogsInfo, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *UtilsSendSupportLogs) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given UtilsSendSupportLogsInfo and assigns it to the Info field.
func (o *UtilsSendSupportLogs) SetInfo(v UtilsSendSupportLogsInfo) {
	o.Info = &v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *UtilsSendSupportLogs) GetNode() string {
	if o == nil || IsNil(o.Node) {
		var ret string
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSendSupportLogs) GetNodeOk() (*string, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *UtilsSendSupportLogs) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given string and assigns it to the Node field.
func (o *UtilsSendSupportLogs) SetNode(v string) {
	o.Node = &v
}

// GetNumMessagesFiles returns the NumMessagesFiles field value if set, zero value otherwise.
func (o *UtilsSendSupportLogs) GetNumMessagesFiles() int32 {
	if o == nil || IsNil(o.NumMessagesFiles) {
		var ret int32
		return ret
	}
	return *o.NumMessagesFiles
}

// GetNumMessagesFilesOk returns a tuple with the NumMessagesFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilsSendSupportLogs) GetNumMessagesFilesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumMessagesFiles) {
		return nil, false
	}
	return o.NumMessagesFiles, true
}

// HasNumMessagesFiles returns a boolean if a field has been set.
func (o *UtilsSendSupportLogs) HasNumMessagesFiles() bool {
	if o != nil && !IsNil(o.NumMessagesFiles) {
		return true
	}

	return false
}

// SetNumMessagesFiles gets a reference to the given int32 and assigns it to the NumMessagesFiles field.
func (o *UtilsSendSupportLogs) SetNumMessagesFiles(v int32) {
	o.NumMessagesFiles = &v
}

func (o UtilsSendSupportLogs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UtilsSendSupportLogs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	if !IsNil(o.NumMessagesFiles) {
		toSerialize["num_messages_files"] = o.NumMessagesFiles
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UtilsSendSupportLogs) UnmarshalJSON(data []byte) (err error) {
	varUtilsSendSupportLogs := _UtilsSendSupportLogs{}

	err = json.Unmarshal(data, &varUtilsSendSupportLogs)

	if err != nil {
		return err
	}

	*o = UtilsSendSupportLogs(varUtilsSendSupportLogs)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "info")
		delete(additionalProperties, "node")
		delete(additionalProperties, "num_messages_files")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUtilsSendSupportLogs struct {
	value *UtilsSendSupportLogs
	isSet bool
}

func (v NullableUtilsSendSupportLogs) Get() *UtilsSendSupportLogs {
	return v.value
}

func (v *NullableUtilsSendSupportLogs) Set(val *UtilsSendSupportLogs) {
	v.value = val
	v.isSet = true
}

func (v NullableUtilsSendSupportLogs) IsSet() bool {
	return v.isSet
}

func (v *NullableUtilsSendSupportLogs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUtilsSendSupportLogs(val *UtilsSendSupportLogs) *NullableUtilsSendSupportLogs {
	return &NullableUtilsSendSupportLogs{value: val, isSet: true}
}

func (v NullableUtilsSendSupportLogs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUtilsSendSupportLogs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


