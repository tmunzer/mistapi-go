/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the RfTemplateModelSpecificProperty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RfTemplateModelSpecificProperty{}

// RfTemplateModelSpecificProperty struct for RfTemplateModelSpecificProperty
type RfTemplateModelSpecificProperty struct {
	AntGain24 *int32 `json:"ant_gain_24,omitempty"`
	AntGain5 *int32 `json:"ant_gain_5,omitempty"`
	AntGain6 *int32 `json:"ant_gain_6,omitempty"`
	Band24 *RftemplateRadioBand24 `json:"band_24,omitempty"`
	Band24Usage *RadioBand24Usage `json:"band_24_usage,omitempty"`
	Band5 *RftemplateRadioBand5 `json:"band_5,omitempty"`
	Band5On24Radio *RftemplateRadioBand5 `json:"band_5_on_24_radio,omitempty"`
	Band6 *RftemplateRadioBand6 `json:"band_6,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RfTemplateModelSpecificProperty RfTemplateModelSpecificProperty

// NewRfTemplateModelSpecificProperty instantiates a new RfTemplateModelSpecificProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRfTemplateModelSpecificProperty() *RfTemplateModelSpecificProperty {
	this := RfTemplateModelSpecificProperty{}
	return &this
}

// NewRfTemplateModelSpecificPropertyWithDefaults instantiates a new RfTemplateModelSpecificProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRfTemplateModelSpecificPropertyWithDefaults() *RfTemplateModelSpecificProperty {
	this := RfTemplateModelSpecificProperty{}
	return &this
}

// GetAntGain24 returns the AntGain24 field value if set, zero value otherwise.
func (o *RfTemplateModelSpecificProperty) GetAntGain24() int32 {
	if o == nil || IsNil(o.AntGain24) {
		var ret int32
		return ret
	}
	return *o.AntGain24
}

// GetAntGain24Ok returns a tuple with the AntGain24 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RfTemplateModelSpecificProperty) GetAntGain24Ok() (*int32, bool) {
	if o == nil || IsNil(o.AntGain24) {
		return nil, false
	}
	return o.AntGain24, true
}

// HasAntGain24 returns a boolean if a field has been set.
func (o *RfTemplateModelSpecificProperty) HasAntGain24() bool {
	if o != nil && !IsNil(o.AntGain24) {
		return true
	}

	return false
}

// SetAntGain24 gets a reference to the given int32 and assigns it to the AntGain24 field.
func (o *RfTemplateModelSpecificProperty) SetAntGain24(v int32) {
	o.AntGain24 = &v
}

// GetAntGain5 returns the AntGain5 field value if set, zero value otherwise.
func (o *RfTemplateModelSpecificProperty) GetAntGain5() int32 {
	if o == nil || IsNil(o.AntGain5) {
		var ret int32
		return ret
	}
	return *o.AntGain5
}

// GetAntGain5Ok returns a tuple with the AntGain5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RfTemplateModelSpecificProperty) GetAntGain5Ok() (*int32, bool) {
	if o == nil || IsNil(o.AntGain5) {
		return nil, false
	}
	return o.AntGain5, true
}

// HasAntGain5 returns a boolean if a field has been set.
func (o *RfTemplateModelSpecificProperty) HasAntGain5() bool {
	if o != nil && !IsNil(o.AntGain5) {
		return true
	}

	return false
}

// SetAntGain5 gets a reference to the given int32 and assigns it to the AntGain5 field.
func (o *RfTemplateModelSpecificProperty) SetAntGain5(v int32) {
	o.AntGain5 = &v
}

// GetAntGain6 returns the AntGain6 field value if set, zero value otherwise.
func (o *RfTemplateModelSpecificProperty) GetAntGain6() int32 {
	if o == nil || IsNil(o.AntGain6) {
		var ret int32
		return ret
	}
	return *o.AntGain6
}

// GetAntGain6Ok returns a tuple with the AntGain6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RfTemplateModelSpecificProperty) GetAntGain6Ok() (*int32, bool) {
	if o == nil || IsNil(o.AntGain6) {
		return nil, false
	}
	return o.AntGain6, true
}

// HasAntGain6 returns a boolean if a field has been set.
func (o *RfTemplateModelSpecificProperty) HasAntGain6() bool {
	if o != nil && !IsNil(o.AntGain6) {
		return true
	}

	return false
}

// SetAntGain6 gets a reference to the given int32 and assigns it to the AntGain6 field.
func (o *RfTemplateModelSpecificProperty) SetAntGain6(v int32) {
	o.AntGain6 = &v
}

// GetBand24 returns the Band24 field value if set, zero value otherwise.
func (o *RfTemplateModelSpecificProperty) GetBand24() RftemplateRadioBand24 {
	if o == nil || IsNil(o.Band24) {
		var ret RftemplateRadioBand24
		return ret
	}
	return *o.Band24
}

// GetBand24Ok returns a tuple with the Band24 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RfTemplateModelSpecificProperty) GetBand24Ok() (*RftemplateRadioBand24, bool) {
	if o == nil || IsNil(o.Band24) {
		return nil, false
	}
	return o.Band24, true
}

// HasBand24 returns a boolean if a field has been set.
func (o *RfTemplateModelSpecificProperty) HasBand24() bool {
	if o != nil && !IsNil(o.Band24) {
		return true
	}

	return false
}

// SetBand24 gets a reference to the given RftemplateRadioBand24 and assigns it to the Band24 field.
func (o *RfTemplateModelSpecificProperty) SetBand24(v RftemplateRadioBand24) {
	o.Band24 = &v
}

// GetBand24Usage returns the Band24Usage field value if set, zero value otherwise.
func (o *RfTemplateModelSpecificProperty) GetBand24Usage() RadioBand24Usage {
	if o == nil || IsNil(o.Band24Usage) {
		var ret RadioBand24Usage
		return ret
	}
	return *o.Band24Usage
}

// GetBand24UsageOk returns a tuple with the Band24Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RfTemplateModelSpecificProperty) GetBand24UsageOk() (*RadioBand24Usage, bool) {
	if o == nil || IsNil(o.Band24Usage) {
		return nil, false
	}
	return o.Band24Usage, true
}

// HasBand24Usage returns a boolean if a field has been set.
func (o *RfTemplateModelSpecificProperty) HasBand24Usage() bool {
	if o != nil && !IsNil(o.Band24Usage) {
		return true
	}

	return false
}

// SetBand24Usage gets a reference to the given RadioBand24Usage and assigns it to the Band24Usage field.
func (o *RfTemplateModelSpecificProperty) SetBand24Usage(v RadioBand24Usage) {
	o.Band24Usage = &v
}

// GetBand5 returns the Band5 field value if set, zero value otherwise.
func (o *RfTemplateModelSpecificProperty) GetBand5() RftemplateRadioBand5 {
	if o == nil || IsNil(o.Band5) {
		var ret RftemplateRadioBand5
		return ret
	}
	return *o.Band5
}

// GetBand5Ok returns a tuple with the Band5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RfTemplateModelSpecificProperty) GetBand5Ok() (*RftemplateRadioBand5, bool) {
	if o == nil || IsNil(o.Band5) {
		return nil, false
	}
	return o.Band5, true
}

// HasBand5 returns a boolean if a field has been set.
func (o *RfTemplateModelSpecificProperty) HasBand5() bool {
	if o != nil && !IsNil(o.Band5) {
		return true
	}

	return false
}

// SetBand5 gets a reference to the given RftemplateRadioBand5 and assigns it to the Band5 field.
func (o *RfTemplateModelSpecificProperty) SetBand5(v RftemplateRadioBand5) {
	o.Band5 = &v
}

// GetBand5On24Radio returns the Band5On24Radio field value if set, zero value otherwise.
func (o *RfTemplateModelSpecificProperty) GetBand5On24Radio() RftemplateRadioBand5 {
	if o == nil || IsNil(o.Band5On24Radio) {
		var ret RftemplateRadioBand5
		return ret
	}
	return *o.Band5On24Radio
}

// GetBand5On24RadioOk returns a tuple with the Band5On24Radio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RfTemplateModelSpecificProperty) GetBand5On24RadioOk() (*RftemplateRadioBand5, bool) {
	if o == nil || IsNil(o.Band5On24Radio) {
		return nil, false
	}
	return o.Band5On24Radio, true
}

// HasBand5On24Radio returns a boolean if a field has been set.
func (o *RfTemplateModelSpecificProperty) HasBand5On24Radio() bool {
	if o != nil && !IsNil(o.Band5On24Radio) {
		return true
	}

	return false
}

// SetBand5On24Radio gets a reference to the given RftemplateRadioBand5 and assigns it to the Band5On24Radio field.
func (o *RfTemplateModelSpecificProperty) SetBand5On24Radio(v RftemplateRadioBand5) {
	o.Band5On24Radio = &v
}

// GetBand6 returns the Band6 field value if set, zero value otherwise.
func (o *RfTemplateModelSpecificProperty) GetBand6() RftemplateRadioBand6 {
	if o == nil || IsNil(o.Band6) {
		var ret RftemplateRadioBand6
		return ret
	}
	return *o.Band6
}

// GetBand6Ok returns a tuple with the Band6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RfTemplateModelSpecificProperty) GetBand6Ok() (*RftemplateRadioBand6, bool) {
	if o == nil || IsNil(o.Band6) {
		return nil, false
	}
	return o.Band6, true
}

// HasBand6 returns a boolean if a field has been set.
func (o *RfTemplateModelSpecificProperty) HasBand6() bool {
	if o != nil && !IsNil(o.Band6) {
		return true
	}

	return false
}

// SetBand6 gets a reference to the given RftemplateRadioBand6 and assigns it to the Band6 field.
func (o *RfTemplateModelSpecificProperty) SetBand6(v RftemplateRadioBand6) {
	o.Band6 = &v
}

func (o RfTemplateModelSpecificProperty) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RfTemplateModelSpecificProperty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AntGain24) {
		toSerialize["ant_gain_24"] = o.AntGain24
	}
	if !IsNil(o.AntGain5) {
		toSerialize["ant_gain_5"] = o.AntGain5
	}
	if !IsNil(o.AntGain6) {
		toSerialize["ant_gain_6"] = o.AntGain6
	}
	if !IsNil(o.Band24) {
		toSerialize["band_24"] = o.Band24
	}
	if !IsNil(o.Band24Usage) {
		toSerialize["band_24_usage"] = o.Band24Usage
	}
	if !IsNil(o.Band5) {
		toSerialize["band_5"] = o.Band5
	}
	if !IsNil(o.Band5On24Radio) {
		toSerialize["band_5_on_24_radio"] = o.Band5On24Radio
	}
	if !IsNil(o.Band6) {
		toSerialize["band_6"] = o.Band6
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RfTemplateModelSpecificProperty) UnmarshalJSON(data []byte) (err error) {
	varRfTemplateModelSpecificProperty := _RfTemplateModelSpecificProperty{}

	err = json.Unmarshal(data, &varRfTemplateModelSpecificProperty)

	if err != nil {
		return err
	}

	*o = RfTemplateModelSpecificProperty(varRfTemplateModelSpecificProperty)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ant_gain_24")
		delete(additionalProperties, "ant_gain_5")
		delete(additionalProperties, "ant_gain_6")
		delete(additionalProperties, "band_24")
		delete(additionalProperties, "band_24_usage")
		delete(additionalProperties, "band_5")
		delete(additionalProperties, "band_5_on_24_radio")
		delete(additionalProperties, "band_6")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRfTemplateModelSpecificProperty struct {
	value *RfTemplateModelSpecificProperty
	isSet bool
}

func (v NullableRfTemplateModelSpecificProperty) Get() *RfTemplateModelSpecificProperty {
	return v.value
}

func (v *NullableRfTemplateModelSpecificProperty) Set(val *RfTemplateModelSpecificProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableRfTemplateModelSpecificProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableRfTemplateModelSpecificProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRfTemplateModelSpecificProperty(val *RfTemplateModelSpecificProperty) *NullableRfTemplateModelSpecificProperty {
	return &NullableRfTemplateModelSpecificProperty{value: val, isSet: true}
}

func (v NullableRfTemplateModelSpecificProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRfTemplateModelSpecificProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


