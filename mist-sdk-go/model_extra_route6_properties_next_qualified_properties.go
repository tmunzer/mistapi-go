/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ExtraRoute6PropertiesNextQualifiedProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtraRoute6PropertiesNextQualifiedProperties{}

// ExtraRoute6PropertiesNextQualifiedProperties struct for ExtraRoute6PropertiesNextQualifiedProperties
type ExtraRoute6PropertiesNextQualifiedProperties struct {
	Metric NullableInt32 `json:"metric,omitempty"`
	Preference NullableInt32 `json:"preference,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExtraRoute6PropertiesNextQualifiedProperties ExtraRoute6PropertiesNextQualifiedProperties

// NewExtraRoute6PropertiesNextQualifiedProperties instantiates a new ExtraRoute6PropertiesNextQualifiedProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtraRoute6PropertiesNextQualifiedProperties() *ExtraRoute6PropertiesNextQualifiedProperties {
	this := ExtraRoute6PropertiesNextQualifiedProperties{}
	return &this
}

// NewExtraRoute6PropertiesNextQualifiedPropertiesWithDefaults instantiates a new ExtraRoute6PropertiesNextQualifiedProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtraRoute6PropertiesNextQualifiedPropertiesWithDefaults() *ExtraRoute6PropertiesNextQualifiedProperties {
	this := ExtraRoute6PropertiesNextQualifiedProperties{}
	return &this
}

// GetMetric returns the Metric field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtraRoute6PropertiesNextQualifiedProperties) GetMetric() int32 {
	if o == nil || IsNil(o.Metric.Get()) {
		var ret int32
		return ret
	}
	return *o.Metric.Get()
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtraRoute6PropertiesNextQualifiedProperties) GetMetricOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Metric.Get(), o.Metric.IsSet()
}

// HasMetric returns a boolean if a field has been set.
func (o *ExtraRoute6PropertiesNextQualifiedProperties) HasMetric() bool {
	if o != nil && o.Metric.IsSet() {
		return true
	}

	return false
}

// SetMetric gets a reference to the given NullableInt32 and assigns it to the Metric field.
func (o *ExtraRoute6PropertiesNextQualifiedProperties) SetMetric(v int32) {
	o.Metric.Set(&v)
}
// SetMetricNil sets the value for Metric to be an explicit nil
func (o *ExtraRoute6PropertiesNextQualifiedProperties) SetMetricNil() {
	o.Metric.Set(nil)
}

// UnsetMetric ensures that no value is present for Metric, not even an explicit nil
func (o *ExtraRoute6PropertiesNextQualifiedProperties) UnsetMetric() {
	o.Metric.Unset()
}

// GetPreference returns the Preference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtraRoute6PropertiesNextQualifiedProperties) GetPreference() int32 {
	if o == nil || IsNil(o.Preference.Get()) {
		var ret int32
		return ret
	}
	return *o.Preference.Get()
}

// GetPreferenceOk returns a tuple with the Preference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtraRoute6PropertiesNextQualifiedProperties) GetPreferenceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Preference.Get(), o.Preference.IsSet()
}

// HasPreference returns a boolean if a field has been set.
func (o *ExtraRoute6PropertiesNextQualifiedProperties) HasPreference() bool {
	if o != nil && o.Preference.IsSet() {
		return true
	}

	return false
}

// SetPreference gets a reference to the given NullableInt32 and assigns it to the Preference field.
func (o *ExtraRoute6PropertiesNextQualifiedProperties) SetPreference(v int32) {
	o.Preference.Set(&v)
}
// SetPreferenceNil sets the value for Preference to be an explicit nil
func (o *ExtraRoute6PropertiesNextQualifiedProperties) SetPreferenceNil() {
	o.Preference.Set(nil)
}

// UnsetPreference ensures that no value is present for Preference, not even an explicit nil
func (o *ExtraRoute6PropertiesNextQualifiedProperties) UnsetPreference() {
	o.Preference.Unset()
}

func (o ExtraRoute6PropertiesNextQualifiedProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtraRoute6PropertiesNextQualifiedProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Metric.IsSet() {
		toSerialize["metric"] = o.Metric.Get()
	}
	if o.Preference.IsSet() {
		toSerialize["preference"] = o.Preference.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExtraRoute6PropertiesNextQualifiedProperties) UnmarshalJSON(data []byte) (err error) {
	varExtraRoute6PropertiesNextQualifiedProperties := _ExtraRoute6PropertiesNextQualifiedProperties{}

	err = json.Unmarshal(data, &varExtraRoute6PropertiesNextQualifiedProperties)

	if err != nil {
		return err
	}

	*o = ExtraRoute6PropertiesNextQualifiedProperties(varExtraRoute6PropertiesNextQualifiedProperties)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "metric")
		delete(additionalProperties, "preference")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExtraRoute6PropertiesNextQualifiedProperties struct {
	value *ExtraRoute6PropertiesNextQualifiedProperties
	isSet bool
}

func (v NullableExtraRoute6PropertiesNextQualifiedProperties) Get() *ExtraRoute6PropertiesNextQualifiedProperties {
	return v.value
}

func (v *NullableExtraRoute6PropertiesNextQualifiedProperties) Set(val *ExtraRoute6PropertiesNextQualifiedProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableExtraRoute6PropertiesNextQualifiedProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableExtraRoute6PropertiesNextQualifiedProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtraRoute6PropertiesNextQualifiedProperties(val *ExtraRoute6PropertiesNextQualifiedProperties) *NullableExtraRoute6PropertiesNextQualifiedProperties {
	return &NullableExtraRoute6PropertiesNextQualifiedProperties{value: val, isSet: true}
}

func (v NullableExtraRoute6PropertiesNextQualifiedProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtraRoute6PropertiesNextQualifiedProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


