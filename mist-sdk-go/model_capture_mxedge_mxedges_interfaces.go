/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the CaptureMxedgeMxedgesInterfaces type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CaptureMxedgeMxedgesInterfaces{}

// CaptureMxedgeMxedgesInterfaces Property key is the Port name (e.g. \"port1\")
type CaptureMxedgeMxedgesInterfaces struct {
	// tcpdump expression common for wired,radiotap
	TcpdumpExpression *string `json:"tcpdump_expression,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CaptureMxedgeMxedgesInterfaces CaptureMxedgeMxedgesInterfaces

// NewCaptureMxedgeMxedgesInterfaces instantiates a new CaptureMxedgeMxedgesInterfaces object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaptureMxedgeMxedgesInterfaces() *CaptureMxedgeMxedgesInterfaces {
	this := CaptureMxedgeMxedgesInterfaces{}
	return &this
}

// NewCaptureMxedgeMxedgesInterfacesWithDefaults instantiates a new CaptureMxedgeMxedgesInterfaces object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaptureMxedgeMxedgesInterfacesWithDefaults() *CaptureMxedgeMxedgesInterfaces {
	this := CaptureMxedgeMxedgesInterfaces{}
	return &this
}

// GetTcpdumpExpression returns the TcpdumpExpression field value if set, zero value otherwise.
func (o *CaptureMxedgeMxedgesInterfaces) GetTcpdumpExpression() string {
	if o == nil || IsNil(o.TcpdumpExpression) {
		var ret string
		return ret
	}
	return *o.TcpdumpExpression
}

// GetTcpdumpExpressionOk returns a tuple with the TcpdumpExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaptureMxedgeMxedgesInterfaces) GetTcpdumpExpressionOk() (*string, bool) {
	if o == nil || IsNil(o.TcpdumpExpression) {
		return nil, false
	}
	return o.TcpdumpExpression, true
}

// HasTcpdumpExpression returns a boolean if a field has been set.
func (o *CaptureMxedgeMxedgesInterfaces) HasTcpdumpExpression() bool {
	if o != nil && !IsNil(o.TcpdumpExpression) {
		return true
	}

	return false
}

// SetTcpdumpExpression gets a reference to the given string and assigns it to the TcpdumpExpression field.
func (o *CaptureMxedgeMxedgesInterfaces) SetTcpdumpExpression(v string) {
	o.TcpdumpExpression = &v
}

func (o CaptureMxedgeMxedgesInterfaces) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CaptureMxedgeMxedgesInterfaces) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TcpdumpExpression) {
		toSerialize["tcpdump_expression"] = o.TcpdumpExpression
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CaptureMxedgeMxedgesInterfaces) UnmarshalJSON(data []byte) (err error) {
	varCaptureMxedgeMxedgesInterfaces := _CaptureMxedgeMxedgesInterfaces{}

	err = json.Unmarshal(data, &varCaptureMxedgeMxedgesInterfaces)

	if err != nil {
		return err
	}

	*o = CaptureMxedgeMxedgesInterfaces(varCaptureMxedgeMxedgesInterfaces)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tcpdump_expression")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCaptureMxedgeMxedgesInterfaces struct {
	value *CaptureMxedgeMxedgesInterfaces
	isSet bool
}

func (v NullableCaptureMxedgeMxedgesInterfaces) Get() *CaptureMxedgeMxedgesInterfaces {
	return v.value
}

func (v *NullableCaptureMxedgeMxedgesInterfaces) Set(val *CaptureMxedgeMxedgesInterfaces) {
	v.value = val
	v.isSet = true
}

func (v NullableCaptureMxedgeMxedgesInterfaces) IsSet() bool {
	return v.isSet
}

func (v *NullableCaptureMxedgeMxedgesInterfaces) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaptureMxedgeMxedgesInterfaces(val *CaptureMxedgeMxedgesInterfaces) *NullableCaptureMxedgeMxedgesInterfaces {
	return &NullableCaptureMxedgeMxedgesInterfaces{value: val, isSet: true}
}

func (v NullableCaptureMxedgeMxedgesInterfaces) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaptureMxedgeMxedgesInterfaces) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


