/*
Mist API

> Version: **2406.1.3** > > Date: **June 26, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.3
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ConstDeviceAp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConstDeviceAp{}

// ConstDeviceAp struct for ConstDeviceAp
type ConstDeviceAp struct {
	ApType *string `json:"ap_type,omitempty"`
	Band24 *ConstDeviceApBand24 `json:"band24,omitempty"`
	Band24Usages []string `json:"band24_usages,omitempty"`
	Band5 *ConstDeviceApBand5 `json:"band5,omitempty"`
	Band6 *ConstDeviceApBand6 `json:"band6,omitempty"`
	CeDfsOk *bool `json:"ce_dfs_ok,omitempty"`
	CiscoPace *bool `json:"cisco_pace,omitempty"`
	Description *string `json:"description,omitempty"`
	// Property key is a list of country codes (e.g. \"GB, DE\")
	DisallowedChannels *map[string]map[string][]int32 `json:"disallowed_channels,omitempty"`
	Display *string `json:"display,omitempty"`
	// Property key is the GPIO port name (e.g. \"D0\", \"A1\")
	Extio *map[string]ConstDeviceApExtios `json:"extio,omitempty"`
	FccDfsOk *bool `json:"fcc_dfs_ok,omitempty"`
	Has11ax *bool `json:"has_11ax,omitempty"`
	HasCompass *bool `json:"has_compass,omitempty"`
	HasExtAnt *bool `json:"has_ext_ant,omitempty"`
	HasExtio *bool `json:"has_extio,omitempty"`
	HasHeight *bool `json:"has_height,omitempty"`
	HasModulePort *bool `json:"has_module_port,omitempty"`
	HasPoeOut *bool `json:"has_poe_out,omitempty"`
	HasScanningRadio *bool `json:"has_scanning_radio,omitempty"`
	HasSelectableRadio *bool `json:"has_selectable_radio,omitempty"`
	HasUsb *bool `json:"has_usb,omitempty"`
	HasVble *bool `json:"has_vble,omitempty"`
	HasWifiBand24 *bool `json:"has_wifi_band24,omitempty"`
	HasWifiBand5 *bool `json:"has_wifi_band5,omitempty"`
	HasWifiBand6 *bool `json:"has_wifi_band6,omitempty"`
	MaxPoeOut *int32 `json:"max_poe_out,omitempty"`
	MaxWlans *int32 `json:"max_wlans,omitempty"`
	Model *string `json:"model,omitempty"`
	OtherDfsOk *bool `json:"other_dfs_ok,omitempty"`
	Outdoor *bool `json:"outdoor,omitempty"`
	// Property key is the radio number (e.g. r0, r1, ...). Property value is the RF band (e.g. \"24\", \"5\", ...)
	Radios *map[string]string `json:"radios,omitempty"`
	SharedScanningRadio *bool `json:"shared_scanning_radio,omitempty"`
	Type *string `json:"type,omitempty"`
	Unmanaged *bool `json:"unmanaged,omitempty"`
	Vble *ConstDeviceApVble `json:"vble,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConstDeviceAp ConstDeviceAp

// NewConstDeviceAp instantiates a new ConstDeviceAp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConstDeviceAp() *ConstDeviceAp {
	this := ConstDeviceAp{}
	var type_ string = "ap"
	this.Type = &type_
	return &this
}

// NewConstDeviceApWithDefaults instantiates a new ConstDeviceAp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConstDeviceApWithDefaults() *ConstDeviceAp {
	this := ConstDeviceAp{}
	var type_ string = "ap"
	this.Type = &type_
	return &this
}

// GetApType returns the ApType field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetApType() string {
	if o == nil || IsNil(o.ApType) {
		var ret string
		return ret
	}
	return *o.ApType
}

// GetApTypeOk returns a tuple with the ApType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetApTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ApType) {
		return nil, false
	}
	return o.ApType, true
}

// HasApType returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasApType() bool {
	if o != nil && !IsNil(o.ApType) {
		return true
	}

	return false
}

// SetApType gets a reference to the given string and assigns it to the ApType field.
func (o *ConstDeviceAp) SetApType(v string) {
	o.ApType = &v
}

// GetBand24 returns the Band24 field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetBand24() ConstDeviceApBand24 {
	if o == nil || IsNil(o.Band24) {
		var ret ConstDeviceApBand24
		return ret
	}
	return *o.Band24
}

// GetBand24Ok returns a tuple with the Band24 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetBand24Ok() (*ConstDeviceApBand24, bool) {
	if o == nil || IsNil(o.Band24) {
		return nil, false
	}
	return o.Band24, true
}

// HasBand24 returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasBand24() bool {
	if o != nil && !IsNil(o.Band24) {
		return true
	}

	return false
}

// SetBand24 gets a reference to the given ConstDeviceApBand24 and assigns it to the Band24 field.
func (o *ConstDeviceAp) SetBand24(v ConstDeviceApBand24) {
	o.Band24 = &v
}

// GetBand24Usages returns the Band24Usages field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetBand24Usages() []string {
	if o == nil || IsNil(o.Band24Usages) {
		var ret []string
		return ret
	}
	return o.Band24Usages
}

// GetBand24UsagesOk returns a tuple with the Band24Usages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetBand24UsagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Band24Usages) {
		return nil, false
	}
	return o.Band24Usages, true
}

// HasBand24Usages returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasBand24Usages() bool {
	if o != nil && !IsNil(o.Band24Usages) {
		return true
	}

	return false
}

// SetBand24Usages gets a reference to the given []string and assigns it to the Band24Usages field.
func (o *ConstDeviceAp) SetBand24Usages(v []string) {
	o.Band24Usages = v
}

// GetBand5 returns the Band5 field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetBand5() ConstDeviceApBand5 {
	if o == nil || IsNil(o.Band5) {
		var ret ConstDeviceApBand5
		return ret
	}
	return *o.Band5
}

// GetBand5Ok returns a tuple with the Band5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetBand5Ok() (*ConstDeviceApBand5, bool) {
	if o == nil || IsNil(o.Band5) {
		return nil, false
	}
	return o.Band5, true
}

// HasBand5 returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasBand5() bool {
	if o != nil && !IsNil(o.Band5) {
		return true
	}

	return false
}

// SetBand5 gets a reference to the given ConstDeviceApBand5 and assigns it to the Band5 field.
func (o *ConstDeviceAp) SetBand5(v ConstDeviceApBand5) {
	o.Band5 = &v
}

// GetBand6 returns the Band6 field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetBand6() ConstDeviceApBand6 {
	if o == nil || IsNil(o.Band6) {
		var ret ConstDeviceApBand6
		return ret
	}
	return *o.Band6
}

// GetBand6Ok returns a tuple with the Band6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetBand6Ok() (*ConstDeviceApBand6, bool) {
	if o == nil || IsNil(o.Band6) {
		return nil, false
	}
	return o.Band6, true
}

// HasBand6 returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasBand6() bool {
	if o != nil && !IsNil(o.Band6) {
		return true
	}

	return false
}

// SetBand6 gets a reference to the given ConstDeviceApBand6 and assigns it to the Band6 field.
func (o *ConstDeviceAp) SetBand6(v ConstDeviceApBand6) {
	o.Band6 = &v
}

// GetCeDfsOk returns the CeDfsOk field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetCeDfsOk() bool {
	if o == nil || IsNil(o.CeDfsOk) {
		var ret bool
		return ret
	}
	return *o.CeDfsOk
}

// GetCeDfsOkOk returns a tuple with the CeDfsOk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetCeDfsOkOk() (*bool, bool) {
	if o == nil || IsNil(o.CeDfsOk) {
		return nil, false
	}
	return o.CeDfsOk, true
}

// HasCeDfsOk returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasCeDfsOk() bool {
	if o != nil && !IsNil(o.CeDfsOk) {
		return true
	}

	return false
}

// SetCeDfsOk gets a reference to the given bool and assigns it to the CeDfsOk field.
func (o *ConstDeviceAp) SetCeDfsOk(v bool) {
	o.CeDfsOk = &v
}

// GetCiscoPace returns the CiscoPace field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetCiscoPace() bool {
	if o == nil || IsNil(o.CiscoPace) {
		var ret bool
		return ret
	}
	return *o.CiscoPace
}

// GetCiscoPaceOk returns a tuple with the CiscoPace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetCiscoPaceOk() (*bool, bool) {
	if o == nil || IsNil(o.CiscoPace) {
		return nil, false
	}
	return o.CiscoPace, true
}

// HasCiscoPace returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasCiscoPace() bool {
	if o != nil && !IsNil(o.CiscoPace) {
		return true
	}

	return false
}

// SetCiscoPace gets a reference to the given bool and assigns it to the CiscoPace field.
func (o *ConstDeviceAp) SetCiscoPace(v bool) {
	o.CiscoPace = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ConstDeviceAp) SetDescription(v string) {
	o.Description = &v
}

// GetDisallowedChannels returns the DisallowedChannels field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetDisallowedChannels() map[string]map[string][]int32 {
	if o == nil || IsNil(o.DisallowedChannels) {
		var ret map[string]map[string][]int32
		return ret
	}
	return *o.DisallowedChannels
}

// GetDisallowedChannelsOk returns a tuple with the DisallowedChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetDisallowedChannelsOk() (*map[string]map[string][]int32, bool) {
	if o == nil || IsNil(o.DisallowedChannels) {
		return nil, false
	}
	return o.DisallowedChannels, true
}

// HasDisallowedChannels returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasDisallowedChannels() bool {
	if o != nil && !IsNil(o.DisallowedChannels) {
		return true
	}

	return false
}

// SetDisallowedChannels gets a reference to the given map[string]map[string][]int32 and assigns it to the DisallowedChannels field.
func (o *ConstDeviceAp) SetDisallowedChannels(v map[string]map[string][]int32) {
	o.DisallowedChannels = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetDisplay() string {
	if o == nil || IsNil(o.Display) {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetDisplayOk() (*string, bool) {
	if o == nil || IsNil(o.Display) {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasDisplay() bool {
	if o != nil && !IsNil(o.Display) {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *ConstDeviceAp) SetDisplay(v string) {
	o.Display = &v
}

// GetExtio returns the Extio field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetExtio() map[string]ConstDeviceApExtios {
	if o == nil || IsNil(o.Extio) {
		var ret map[string]ConstDeviceApExtios
		return ret
	}
	return *o.Extio
}

// GetExtioOk returns a tuple with the Extio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetExtioOk() (*map[string]ConstDeviceApExtios, bool) {
	if o == nil || IsNil(o.Extio) {
		return nil, false
	}
	return o.Extio, true
}

// SetExtio gets a reference to the given map[string]ConstDeviceApExtios and assigns it to the Extio field.
func (o *ConstDeviceAp) SetExtio(v map[string]ConstDeviceApExtios) {
	o.Extio = &v
}

// GetFccDfsOk returns the FccDfsOk field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetFccDfsOk() bool {
	if o == nil || IsNil(o.FccDfsOk) {
		var ret bool
		return ret
	}
	return *o.FccDfsOk
}

// GetFccDfsOkOk returns a tuple with the FccDfsOk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetFccDfsOkOk() (*bool, bool) {
	if o == nil || IsNil(o.FccDfsOk) {
		return nil, false
	}
	return o.FccDfsOk, true
}

// HasFccDfsOk returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasFccDfsOk() bool {
	if o != nil && !IsNil(o.FccDfsOk) {
		return true
	}

	return false
}

// SetFccDfsOk gets a reference to the given bool and assigns it to the FccDfsOk field.
func (o *ConstDeviceAp) SetFccDfsOk(v bool) {
	o.FccDfsOk = &v
}

// GetHas11ax returns the Has11ax field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHas11ax() bool {
	if o == nil || IsNil(o.Has11ax) {
		var ret bool
		return ret
	}
	return *o.Has11ax
}

// GetHas11axOk returns a tuple with the Has11ax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHas11axOk() (*bool, bool) {
	if o == nil || IsNil(o.Has11ax) {
		return nil, false
	}
	return o.Has11ax, true
}

// HasHas11ax returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHas11ax() bool {
	if o != nil && !IsNil(o.Has11ax) {
		return true
	}

	return false
}

// SetHas11ax gets a reference to the given bool and assigns it to the Has11ax field.
func (o *ConstDeviceAp) SetHas11ax(v bool) {
	o.Has11ax = &v
}

// GetHasCompass returns the HasCompass field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHasCompass() bool {
	if o == nil || IsNil(o.HasCompass) {
		var ret bool
		return ret
	}
	return *o.HasCompass
}

// GetHasCompassOk returns a tuple with the HasCompass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHasCompassOk() (*bool, bool) {
	if o == nil || IsNil(o.HasCompass) {
		return nil, false
	}
	return o.HasCompass, true
}

// HasHasCompass returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHasCompass() bool {
	if o != nil && !IsNil(o.HasCompass) {
		return true
	}

	return false
}

// SetHasCompass gets a reference to the given bool and assigns it to the HasCompass field.
func (o *ConstDeviceAp) SetHasCompass(v bool) {
	o.HasCompass = &v
}

// GetHasExtAnt returns the HasExtAnt field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHasExtAnt() bool {
	if o == nil || IsNil(o.HasExtAnt) {
		var ret bool
		return ret
	}
	return *o.HasExtAnt
}

// GetHasExtAntOk returns a tuple with the HasExtAnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHasExtAntOk() (*bool, bool) {
	if o == nil || IsNil(o.HasExtAnt) {
		return nil, false
	}
	return o.HasExtAnt, true
}

// HasHasExtAnt returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHasExtAnt() bool {
	if o != nil && !IsNil(o.HasExtAnt) {
		return true
	}

	return false
}

// SetHasExtAnt gets a reference to the given bool and assigns it to the HasExtAnt field.
func (o *ConstDeviceAp) SetHasExtAnt(v bool) {
	o.HasExtAnt = &v
}

// GetHasExtio returns the HasExtio field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHasExtio() bool {
	if o == nil || IsNil(o.HasExtio) {
		var ret bool
		return ret
	}
	return *o.HasExtio
}

// GetHasExtioOk returns a tuple with the HasExtio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHasExtioOk() (*bool, bool) {
	if o == nil || IsNil(o.HasExtio) {
		return nil, false
	}
	return o.HasExtio, true
}

// HasHasExtio returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHasExtio() bool {
	if o != nil && !IsNil(o.HasExtio) {
		return true
	}

	return false
}

// SetHasExtio gets a reference to the given bool and assigns it to the HasExtio field.
func (o *ConstDeviceAp) SetHasExtio(v bool) {
	o.HasExtio = &v
}

// GetHasHeight returns the HasHeight field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHasHeight() bool {
	if o == nil || IsNil(o.HasHeight) {
		var ret bool
		return ret
	}
	return *o.HasHeight
}

// GetHasHeightOk returns a tuple with the HasHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHasHeightOk() (*bool, bool) {
	if o == nil || IsNil(o.HasHeight) {
		return nil, false
	}
	return o.HasHeight, true
}

// HasHasHeight returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHasHeight() bool {
	if o != nil && !IsNil(o.HasHeight) {
		return true
	}

	return false
}

// SetHasHeight gets a reference to the given bool and assigns it to the HasHeight field.
func (o *ConstDeviceAp) SetHasHeight(v bool) {
	o.HasHeight = &v
}

// GetHasModulePort returns the HasModulePort field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHasModulePort() bool {
	if o == nil || IsNil(o.HasModulePort) {
		var ret bool
		return ret
	}
	return *o.HasModulePort
}

// GetHasModulePortOk returns a tuple with the HasModulePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHasModulePortOk() (*bool, bool) {
	if o == nil || IsNil(o.HasModulePort) {
		return nil, false
	}
	return o.HasModulePort, true
}

// HasHasModulePort returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHasModulePort() bool {
	if o != nil && !IsNil(o.HasModulePort) {
		return true
	}

	return false
}

// SetHasModulePort gets a reference to the given bool and assigns it to the HasModulePort field.
func (o *ConstDeviceAp) SetHasModulePort(v bool) {
	o.HasModulePort = &v
}

// GetHasPoeOut returns the HasPoeOut field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHasPoeOut() bool {
	if o == nil || IsNil(o.HasPoeOut) {
		var ret bool
		return ret
	}
	return *o.HasPoeOut
}

// GetHasPoeOutOk returns a tuple with the HasPoeOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHasPoeOutOk() (*bool, bool) {
	if o == nil || IsNil(o.HasPoeOut) {
		return nil, false
	}
	return o.HasPoeOut, true
}

// HasHasPoeOut returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHasPoeOut() bool {
	if o != nil && !IsNil(o.HasPoeOut) {
		return true
	}

	return false
}

// SetHasPoeOut gets a reference to the given bool and assigns it to the HasPoeOut field.
func (o *ConstDeviceAp) SetHasPoeOut(v bool) {
	o.HasPoeOut = &v
}

// GetHasScanningRadio returns the HasScanningRadio field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHasScanningRadio() bool {
	if o == nil || IsNil(o.HasScanningRadio) {
		var ret bool
		return ret
	}
	return *o.HasScanningRadio
}

// GetHasScanningRadioOk returns a tuple with the HasScanningRadio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHasScanningRadioOk() (*bool, bool) {
	if o == nil || IsNil(o.HasScanningRadio) {
		return nil, false
	}
	return o.HasScanningRadio, true
}

// HasHasScanningRadio returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHasScanningRadio() bool {
	if o != nil && !IsNil(o.HasScanningRadio) {
		return true
	}

	return false
}

// SetHasScanningRadio gets a reference to the given bool and assigns it to the HasScanningRadio field.
func (o *ConstDeviceAp) SetHasScanningRadio(v bool) {
	o.HasScanningRadio = &v
}

// GetHasSelectableRadio returns the HasSelectableRadio field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHasSelectableRadio() bool {
	if o == nil || IsNil(o.HasSelectableRadio) {
		var ret bool
		return ret
	}
	return *o.HasSelectableRadio
}

// GetHasSelectableRadioOk returns a tuple with the HasSelectableRadio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHasSelectableRadioOk() (*bool, bool) {
	if o == nil || IsNil(o.HasSelectableRadio) {
		return nil, false
	}
	return o.HasSelectableRadio, true
}

// HasHasSelectableRadio returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHasSelectableRadio() bool {
	if o != nil && !IsNil(o.HasSelectableRadio) {
		return true
	}

	return false
}

// SetHasSelectableRadio gets a reference to the given bool and assigns it to the HasSelectableRadio field.
func (o *ConstDeviceAp) SetHasSelectableRadio(v bool) {
	o.HasSelectableRadio = &v
}

// GetHasUsb returns the HasUsb field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHasUsb() bool {
	if o == nil || IsNil(o.HasUsb) {
		var ret bool
		return ret
	}
	return *o.HasUsb
}

// GetHasUsbOk returns a tuple with the HasUsb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHasUsbOk() (*bool, bool) {
	if o == nil || IsNil(o.HasUsb) {
		return nil, false
	}
	return o.HasUsb, true
}

// HasHasUsb returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHasUsb() bool {
	if o != nil && !IsNil(o.HasUsb) {
		return true
	}

	return false
}

// SetHasUsb gets a reference to the given bool and assigns it to the HasUsb field.
func (o *ConstDeviceAp) SetHasUsb(v bool) {
	o.HasUsb = &v
}

// GetHasVble returns the HasVble field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHasVble() bool {
	if o == nil || IsNil(o.HasVble) {
		var ret bool
		return ret
	}
	return *o.HasVble
}

// GetHasVbleOk returns a tuple with the HasVble field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHasVbleOk() (*bool, bool) {
	if o == nil || IsNil(o.HasVble) {
		return nil, false
	}
	return o.HasVble, true
}

// HasHasVble returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHasVble() bool {
	if o != nil && !IsNil(o.HasVble) {
		return true
	}

	return false
}

// SetHasVble gets a reference to the given bool and assigns it to the HasVble field.
func (o *ConstDeviceAp) SetHasVble(v bool) {
	o.HasVble = &v
}

// GetHasWifiBand24 returns the HasWifiBand24 field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHasWifiBand24() bool {
	if o == nil || IsNil(o.HasWifiBand24) {
		var ret bool
		return ret
	}
	return *o.HasWifiBand24
}

// GetHasWifiBand24Ok returns a tuple with the HasWifiBand24 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHasWifiBand24Ok() (*bool, bool) {
	if o == nil || IsNil(o.HasWifiBand24) {
		return nil, false
	}
	return o.HasWifiBand24, true
}

// HasHasWifiBand24 returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHasWifiBand24() bool {
	if o != nil && !IsNil(o.HasWifiBand24) {
		return true
	}

	return false
}

// SetHasWifiBand24 gets a reference to the given bool and assigns it to the HasWifiBand24 field.
func (o *ConstDeviceAp) SetHasWifiBand24(v bool) {
	o.HasWifiBand24 = &v
}

// GetHasWifiBand5 returns the HasWifiBand5 field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHasWifiBand5() bool {
	if o == nil || IsNil(o.HasWifiBand5) {
		var ret bool
		return ret
	}
	return *o.HasWifiBand5
}

// GetHasWifiBand5Ok returns a tuple with the HasWifiBand5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHasWifiBand5Ok() (*bool, bool) {
	if o == nil || IsNil(o.HasWifiBand5) {
		return nil, false
	}
	return o.HasWifiBand5, true
}

// HasHasWifiBand5 returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHasWifiBand5() bool {
	if o != nil && !IsNil(o.HasWifiBand5) {
		return true
	}

	return false
}

// SetHasWifiBand5 gets a reference to the given bool and assigns it to the HasWifiBand5 field.
func (o *ConstDeviceAp) SetHasWifiBand5(v bool) {
	o.HasWifiBand5 = &v
}

// GetHasWifiBand6 returns the HasWifiBand6 field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetHasWifiBand6() bool {
	if o == nil || IsNil(o.HasWifiBand6) {
		var ret bool
		return ret
	}
	return *o.HasWifiBand6
}

// GetHasWifiBand6Ok returns a tuple with the HasWifiBand6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetHasWifiBand6Ok() (*bool, bool) {
	if o == nil || IsNil(o.HasWifiBand6) {
		return nil, false
	}
	return o.HasWifiBand6, true
}

// HasHasWifiBand6 returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasHasWifiBand6() bool {
	if o != nil && !IsNil(o.HasWifiBand6) {
		return true
	}

	return false
}

// SetHasWifiBand6 gets a reference to the given bool and assigns it to the HasWifiBand6 field.
func (o *ConstDeviceAp) SetHasWifiBand6(v bool) {
	o.HasWifiBand6 = &v
}

// GetMaxPoeOut returns the MaxPoeOut field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetMaxPoeOut() int32 {
	if o == nil || IsNil(o.MaxPoeOut) {
		var ret int32
		return ret
	}
	return *o.MaxPoeOut
}

// GetMaxPoeOutOk returns a tuple with the MaxPoeOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetMaxPoeOutOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxPoeOut) {
		return nil, false
	}
	return o.MaxPoeOut, true
}

// HasMaxPoeOut returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasMaxPoeOut() bool {
	if o != nil && !IsNil(o.MaxPoeOut) {
		return true
	}

	return false
}

// SetMaxPoeOut gets a reference to the given int32 and assigns it to the MaxPoeOut field.
func (o *ConstDeviceAp) SetMaxPoeOut(v int32) {
	o.MaxPoeOut = &v
}

// GetMaxWlans returns the MaxWlans field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetMaxWlans() int32 {
	if o == nil || IsNil(o.MaxWlans) {
		var ret int32
		return ret
	}
	return *o.MaxWlans
}

// GetMaxWlansOk returns a tuple with the MaxWlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetMaxWlansOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxWlans) {
		return nil, false
	}
	return o.MaxWlans, true
}

// HasMaxWlans returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasMaxWlans() bool {
	if o != nil && !IsNil(o.MaxWlans) {
		return true
	}

	return false
}

// SetMaxWlans gets a reference to the given int32 and assigns it to the MaxWlans field.
func (o *ConstDeviceAp) SetMaxWlans(v int32) {
	o.MaxWlans = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *ConstDeviceAp) SetModel(v string) {
	o.Model = &v
}

// GetOtherDfsOk returns the OtherDfsOk field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetOtherDfsOk() bool {
	if o == nil || IsNil(o.OtherDfsOk) {
		var ret bool
		return ret
	}
	return *o.OtherDfsOk
}

// GetOtherDfsOkOk returns a tuple with the OtherDfsOk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetOtherDfsOkOk() (*bool, bool) {
	if o == nil || IsNil(o.OtherDfsOk) {
		return nil, false
	}
	return o.OtherDfsOk, true
}

// HasOtherDfsOk returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasOtherDfsOk() bool {
	if o != nil && !IsNil(o.OtherDfsOk) {
		return true
	}

	return false
}

// SetOtherDfsOk gets a reference to the given bool and assigns it to the OtherDfsOk field.
func (o *ConstDeviceAp) SetOtherDfsOk(v bool) {
	o.OtherDfsOk = &v
}

// GetOutdoor returns the Outdoor field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetOutdoor() bool {
	if o == nil || IsNil(o.Outdoor) {
		var ret bool
		return ret
	}
	return *o.Outdoor
}

// GetOutdoorOk returns a tuple with the Outdoor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetOutdoorOk() (*bool, bool) {
	if o == nil || IsNil(o.Outdoor) {
		return nil, false
	}
	return o.Outdoor, true
}

// HasOutdoor returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasOutdoor() bool {
	if o != nil && !IsNil(o.Outdoor) {
		return true
	}

	return false
}

// SetOutdoor gets a reference to the given bool and assigns it to the Outdoor field.
func (o *ConstDeviceAp) SetOutdoor(v bool) {
	o.Outdoor = &v
}

// GetRadios returns the Radios field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetRadios() map[string]string {
	if o == nil || IsNil(o.Radios) {
		var ret map[string]string
		return ret
	}
	return *o.Radios
}

// GetRadiosOk returns a tuple with the Radios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetRadiosOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Radios) {
		return nil, false
	}
	return o.Radios, true
}

// HasRadios returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasRadios() bool {
	if o != nil && !IsNil(o.Radios) {
		return true
	}

	return false
}

// SetRadios gets a reference to the given map[string]string and assigns it to the Radios field.
func (o *ConstDeviceAp) SetRadios(v map[string]string) {
	o.Radios = &v
}

// GetSharedScanningRadio returns the SharedScanningRadio field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetSharedScanningRadio() bool {
	if o == nil || IsNil(o.SharedScanningRadio) {
		var ret bool
		return ret
	}
	return *o.SharedScanningRadio
}

// GetSharedScanningRadioOk returns a tuple with the SharedScanningRadio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetSharedScanningRadioOk() (*bool, bool) {
	if o == nil || IsNil(o.SharedScanningRadio) {
		return nil, false
	}
	return o.SharedScanningRadio, true
}

// HasSharedScanningRadio returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasSharedScanningRadio() bool {
	if o != nil && !IsNil(o.SharedScanningRadio) {
		return true
	}

	return false
}

// SetSharedScanningRadio gets a reference to the given bool and assigns it to the SharedScanningRadio field.
func (o *ConstDeviceAp) SetSharedScanningRadio(v bool) {
	o.SharedScanningRadio = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ConstDeviceAp) SetType(v string) {
	o.Type = &v
}

// GetUnmanaged returns the Unmanaged field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetUnmanaged() bool {
	if o == nil || IsNil(o.Unmanaged) {
		var ret bool
		return ret
	}
	return *o.Unmanaged
}

// GetUnmanagedOk returns a tuple with the Unmanaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetUnmanagedOk() (*bool, bool) {
	if o == nil || IsNil(o.Unmanaged) {
		return nil, false
	}
	return o.Unmanaged, true
}

// HasUnmanaged returns a boolean if a field has been set.
func (o *ConstDeviceAp) HasUnmanaged() bool {
	if o != nil && !IsNil(o.Unmanaged) {
		return true
	}

	return false
}

// SetUnmanaged gets a reference to the given bool and assigns it to the Unmanaged field.
func (o *ConstDeviceAp) SetUnmanaged(v bool) {
	o.Unmanaged = &v
}

// GetVble returns the Vble field value if set, zero value otherwise.
func (o *ConstDeviceAp) GetVble() ConstDeviceApVble {
	if o == nil || IsNil(o.Vble) {
		var ret ConstDeviceApVble
		return ret
	}
	return *o.Vble
}

// GetVbleOk returns a tuple with the Vble field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceAp) GetVbleOk() (*ConstDeviceApVble, bool) {
	if o == nil || IsNil(o.Vble) {
		return nil, false
	}
	return o.Vble, true
}

// SetVble gets a reference to the given ConstDeviceApVble and assigns it to the Vble field.
func (o *ConstDeviceAp) SetVble(v ConstDeviceApVble) {
	o.Vble = &v
}

func (o ConstDeviceAp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConstDeviceAp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApType) {
		toSerialize["ap_type"] = o.ApType
	}
	if !IsNil(o.Band24) {
		toSerialize["band24"] = o.Band24
	}
	if !IsNil(o.Band24Usages) {
		toSerialize["band24_usages"] = o.Band24Usages
	}
	if !IsNil(o.Band5) {
		toSerialize["band5"] = o.Band5
	}
	if !IsNil(o.Band6) {
		toSerialize["band6"] = o.Band6
	}
	if !IsNil(o.CeDfsOk) {
		toSerialize["ce_dfs_ok"] = o.CeDfsOk
	}
	if !IsNil(o.CiscoPace) {
		toSerialize["cisco_pace"] = o.CiscoPace
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisallowedChannels) {
		toSerialize["disallowed_channels"] = o.DisallowedChannels
	}
	if !IsNil(o.Display) {
		toSerialize["display"] = o.Display
	}
	if !IsNil(o.Extio) {
		toSerialize["extio"] = o.Extio
	}
	if !IsNil(o.FccDfsOk) {
		toSerialize["fcc_dfs_ok"] = o.FccDfsOk
	}
	if !IsNil(o.Has11ax) {
		toSerialize["has_11ax"] = o.Has11ax
	}
	if !IsNil(o.HasCompass) {
		toSerialize["has_compass"] = o.HasCompass
	}
	if !IsNil(o.HasExtAnt) {
		toSerialize["has_ext_ant"] = o.HasExtAnt
	}
	if !IsNil(o.HasExtio) {
		toSerialize["has_extio"] = o.HasExtio
	}
	if !IsNil(o.HasHeight) {
		toSerialize["has_height"] = o.HasHeight
	}
	if !IsNil(o.HasModulePort) {
		toSerialize["has_module_port"] = o.HasModulePort
	}
	if !IsNil(o.HasPoeOut) {
		toSerialize["has_poe_out"] = o.HasPoeOut
	}
	if !IsNil(o.HasScanningRadio) {
		toSerialize["has_scanning_radio"] = o.HasScanningRadio
	}
	if !IsNil(o.HasSelectableRadio) {
		toSerialize["has_selectable_radio"] = o.HasSelectableRadio
	}
	if !IsNil(o.HasUsb) {
		toSerialize["has_usb"] = o.HasUsb
	}
	if !IsNil(o.HasVble) {
		toSerialize["has_vble"] = o.HasVble
	}
	if !IsNil(o.HasWifiBand24) {
		toSerialize["has_wifi_band24"] = o.HasWifiBand24
	}
	if !IsNil(o.HasWifiBand5) {
		toSerialize["has_wifi_band5"] = o.HasWifiBand5
	}
	if !IsNil(o.HasWifiBand6) {
		toSerialize["has_wifi_band6"] = o.HasWifiBand6
	}
	if !IsNil(o.MaxPoeOut) {
		toSerialize["max_poe_out"] = o.MaxPoeOut
	}
	if !IsNil(o.MaxWlans) {
		toSerialize["max_wlans"] = o.MaxWlans
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.OtherDfsOk) {
		toSerialize["other_dfs_ok"] = o.OtherDfsOk
	}
	if !IsNil(o.Outdoor) {
		toSerialize["outdoor"] = o.Outdoor
	}
	if !IsNil(o.Radios) {
		toSerialize["radios"] = o.Radios
	}
	if !IsNil(o.SharedScanningRadio) {
		toSerialize["shared_scanning_radio"] = o.SharedScanningRadio
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Unmanaged) {
		toSerialize["unmanaged"] = o.Unmanaged
	}
	if !IsNil(o.Vble) {
		toSerialize["vble"] = o.Vble
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConstDeviceAp) UnmarshalJSON(data []byte) (err error) {
	varConstDeviceAp := _ConstDeviceAp{}

	err = json.Unmarshal(data, &varConstDeviceAp)

	if err != nil {
		return err
	}

	*o = ConstDeviceAp(varConstDeviceAp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ap_type")
		delete(additionalProperties, "band24")
		delete(additionalProperties, "band24_usages")
		delete(additionalProperties, "band5")
		delete(additionalProperties, "band6")
		delete(additionalProperties, "ce_dfs_ok")
		delete(additionalProperties, "cisco_pace")
		delete(additionalProperties, "description")
		delete(additionalProperties, "disallowed_channels")
		delete(additionalProperties, "display")
		delete(additionalProperties, "extio")
		delete(additionalProperties, "fcc_dfs_ok")
		delete(additionalProperties, "has_11ax")
		delete(additionalProperties, "has_compass")
		delete(additionalProperties, "has_ext_ant")
		delete(additionalProperties, "has_extio")
		delete(additionalProperties, "has_height")
		delete(additionalProperties, "has_module_port")
		delete(additionalProperties, "has_poe_out")
		delete(additionalProperties, "has_scanning_radio")
		delete(additionalProperties, "has_selectable_radio")
		delete(additionalProperties, "has_usb")
		delete(additionalProperties, "has_vble")
		delete(additionalProperties, "has_wifi_band24")
		delete(additionalProperties, "has_wifi_band5")
		delete(additionalProperties, "has_wifi_band6")
		delete(additionalProperties, "max_poe_out")
		delete(additionalProperties, "max_wlans")
		delete(additionalProperties, "model")
		delete(additionalProperties, "other_dfs_ok")
		delete(additionalProperties, "outdoor")
		delete(additionalProperties, "radios")
		delete(additionalProperties, "shared_scanning_radio")
		delete(additionalProperties, "type")
		delete(additionalProperties, "unmanaged")
		delete(additionalProperties, "vble")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConstDeviceAp struct {
	value *ConstDeviceAp
	isSet bool
}

func (v NullableConstDeviceAp) Get() *ConstDeviceAp {
	return v.value
}

func (v *NullableConstDeviceAp) Set(val *ConstDeviceAp) {
	v.value = val
	v.isSet = true
}

func (v NullableConstDeviceAp) IsSet() bool {
	return v.isSet
}

func (v *NullableConstDeviceAp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConstDeviceAp(val *ConstDeviceAp) *NullableConstDeviceAp {
	return &NullableConstDeviceAp{value: val, isSet: true}
}

func (v NullableConstDeviceAp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConstDeviceAp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


