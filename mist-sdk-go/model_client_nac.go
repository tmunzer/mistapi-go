/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ClientNac type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientNac{}

// ClientNac struct for ClientNac
type ClientNac struct {
	Ap []string `json:"ap,omitempty"`
	AuthType *string `json:"auth_type,omitempty"`
	CertCn []string `json:"cert_cn,omitempty"`
	CertIssuer []string `json:"cert_issuer,omitempty"`
	IdpId *string `json:"idp_id,omitempty"`
	IdpRole []string `json:"idp_role,omitempty"`
	LastAp *string `json:"last_ap,omitempty"`
	LastCertCn *string `json:"last_cert_cn,omitempty"`
	LastCertExpiry *int32 `json:"last_cert_expiry,omitempty"`
	LastCertIssuer *string `json:"last_cert_issuer,omitempty"`
	LastNacruleId *string `json:"last_nacrule_id,omitempty"`
	LastNacruleName *string `json:"last_nacrule_name,omitempty"`
	LastNasVendor *string `json:"last_nas_vendor,omitempty"`
	LastSsid *string `json:"last_ssid,omitempty"`
	LastStatus *string `json:"last_status,omitempty"`
	Mac *string `json:"mac,omitempty"`
	NacruleId []string `json:"nacrule_id,omitempty"`
	NacruleMatched *bool `json:"nacrule_matched,omitempty"`
	NacruleName []string `json:"nacrule_name,omitempty"`
	NasVendor []string `json:"nas_vendor,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	RandomMac *bool `json:"random_mac,omitempty"`
	SiteId *string `json:"site_id,omitempty"`
	Ssid []string `json:"ssid,omitempty"`
	Timestamp *float32 `json:"timestamp,omitempty"`
	Type *string `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClientNac ClientNac

// NewClientNac instantiates a new ClientNac object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientNac() *ClientNac {
	this := ClientNac{}
	return &this
}

// NewClientNacWithDefaults instantiates a new ClientNac object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientNacWithDefaults() *ClientNac {
	this := ClientNac{}
	return &this
}

// GetAp returns the Ap field value if set, zero value otherwise.
func (o *ClientNac) GetAp() []string {
	if o == nil || IsNil(o.Ap) {
		var ret []string
		return ret
	}
	return o.Ap
}

// GetApOk returns a tuple with the Ap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetApOk() ([]string, bool) {
	if o == nil || IsNil(o.Ap) {
		return nil, false
	}
	return o.Ap, true
}

// HasAp returns a boolean if a field has been set.
func (o *ClientNac) HasAp() bool {
	if o != nil && !IsNil(o.Ap) {
		return true
	}

	return false
}

// SetAp gets a reference to the given []string and assigns it to the Ap field.
func (o *ClientNac) SetAp(v []string) {
	o.Ap = v
}

// GetAuthType returns the AuthType field value if set, zero value otherwise.
func (o *ClientNac) GetAuthType() string {
	if o == nil || IsNil(o.AuthType) {
		var ret string
		return ret
	}
	return *o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetAuthTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthType) {
		return nil, false
	}
	return o.AuthType, true
}

// HasAuthType returns a boolean if a field has been set.
func (o *ClientNac) HasAuthType() bool {
	if o != nil && !IsNil(o.AuthType) {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given string and assigns it to the AuthType field.
func (o *ClientNac) SetAuthType(v string) {
	o.AuthType = &v
}

// GetCertCn returns the CertCn field value if set, zero value otherwise.
func (o *ClientNac) GetCertCn() []string {
	if o == nil || IsNil(o.CertCn) {
		var ret []string
		return ret
	}
	return o.CertCn
}

// GetCertCnOk returns a tuple with the CertCn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetCertCnOk() ([]string, bool) {
	if o == nil || IsNil(o.CertCn) {
		return nil, false
	}
	return o.CertCn, true
}

// HasCertCn returns a boolean if a field has been set.
func (o *ClientNac) HasCertCn() bool {
	if o != nil && !IsNil(o.CertCn) {
		return true
	}

	return false
}

// SetCertCn gets a reference to the given []string and assigns it to the CertCn field.
func (o *ClientNac) SetCertCn(v []string) {
	o.CertCn = v
}

// GetCertIssuer returns the CertIssuer field value if set, zero value otherwise.
func (o *ClientNac) GetCertIssuer() []string {
	if o == nil || IsNil(o.CertIssuer) {
		var ret []string
		return ret
	}
	return o.CertIssuer
}

// GetCertIssuerOk returns a tuple with the CertIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetCertIssuerOk() ([]string, bool) {
	if o == nil || IsNil(o.CertIssuer) {
		return nil, false
	}
	return o.CertIssuer, true
}

// HasCertIssuer returns a boolean if a field has been set.
func (o *ClientNac) HasCertIssuer() bool {
	if o != nil && !IsNil(o.CertIssuer) {
		return true
	}

	return false
}

// SetCertIssuer gets a reference to the given []string and assigns it to the CertIssuer field.
func (o *ClientNac) SetCertIssuer(v []string) {
	o.CertIssuer = v
}

// GetIdpId returns the IdpId field value if set, zero value otherwise.
func (o *ClientNac) GetIdpId() string {
	if o == nil || IsNil(o.IdpId) {
		var ret string
		return ret
	}
	return *o.IdpId
}

// GetIdpIdOk returns a tuple with the IdpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetIdpIdOk() (*string, bool) {
	if o == nil || IsNil(o.IdpId) {
		return nil, false
	}
	return o.IdpId, true
}

// HasIdpId returns a boolean if a field has been set.
func (o *ClientNac) HasIdpId() bool {
	if o != nil && !IsNil(o.IdpId) {
		return true
	}

	return false
}

// SetIdpId gets a reference to the given string and assigns it to the IdpId field.
func (o *ClientNac) SetIdpId(v string) {
	o.IdpId = &v
}

// GetIdpRole returns the IdpRole field value if set, zero value otherwise.
func (o *ClientNac) GetIdpRole() []string {
	if o == nil || IsNil(o.IdpRole) {
		var ret []string
		return ret
	}
	return o.IdpRole
}

// GetIdpRoleOk returns a tuple with the IdpRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetIdpRoleOk() ([]string, bool) {
	if o == nil || IsNil(o.IdpRole) {
		return nil, false
	}
	return o.IdpRole, true
}

// HasIdpRole returns a boolean if a field has been set.
func (o *ClientNac) HasIdpRole() bool {
	if o != nil && !IsNil(o.IdpRole) {
		return true
	}

	return false
}

// SetIdpRole gets a reference to the given []string and assigns it to the IdpRole field.
func (o *ClientNac) SetIdpRole(v []string) {
	o.IdpRole = v
}

// GetLastAp returns the LastAp field value if set, zero value otherwise.
func (o *ClientNac) GetLastAp() string {
	if o == nil || IsNil(o.LastAp) {
		var ret string
		return ret
	}
	return *o.LastAp
}

// GetLastApOk returns a tuple with the LastAp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetLastApOk() (*string, bool) {
	if o == nil || IsNil(o.LastAp) {
		return nil, false
	}
	return o.LastAp, true
}

// HasLastAp returns a boolean if a field has been set.
func (o *ClientNac) HasLastAp() bool {
	if o != nil && !IsNil(o.LastAp) {
		return true
	}

	return false
}

// SetLastAp gets a reference to the given string and assigns it to the LastAp field.
func (o *ClientNac) SetLastAp(v string) {
	o.LastAp = &v
}

// GetLastCertCn returns the LastCertCn field value if set, zero value otherwise.
func (o *ClientNac) GetLastCertCn() string {
	if o == nil || IsNil(o.LastCertCn) {
		var ret string
		return ret
	}
	return *o.LastCertCn
}

// GetLastCertCnOk returns a tuple with the LastCertCn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetLastCertCnOk() (*string, bool) {
	if o == nil || IsNil(o.LastCertCn) {
		return nil, false
	}
	return o.LastCertCn, true
}

// HasLastCertCn returns a boolean if a field has been set.
func (o *ClientNac) HasLastCertCn() bool {
	if o != nil && !IsNil(o.LastCertCn) {
		return true
	}

	return false
}

// SetLastCertCn gets a reference to the given string and assigns it to the LastCertCn field.
func (o *ClientNac) SetLastCertCn(v string) {
	o.LastCertCn = &v
}

// GetLastCertExpiry returns the LastCertExpiry field value if set, zero value otherwise.
func (o *ClientNac) GetLastCertExpiry() int32 {
	if o == nil || IsNil(o.LastCertExpiry) {
		var ret int32
		return ret
	}
	return *o.LastCertExpiry
}

// GetLastCertExpiryOk returns a tuple with the LastCertExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetLastCertExpiryOk() (*int32, bool) {
	if o == nil || IsNil(o.LastCertExpiry) {
		return nil, false
	}
	return o.LastCertExpiry, true
}

// HasLastCertExpiry returns a boolean if a field has been set.
func (o *ClientNac) HasLastCertExpiry() bool {
	if o != nil && !IsNil(o.LastCertExpiry) {
		return true
	}

	return false
}

// SetLastCertExpiry gets a reference to the given int32 and assigns it to the LastCertExpiry field.
func (o *ClientNac) SetLastCertExpiry(v int32) {
	o.LastCertExpiry = &v
}

// GetLastCertIssuer returns the LastCertIssuer field value if set, zero value otherwise.
func (o *ClientNac) GetLastCertIssuer() string {
	if o == nil || IsNil(o.LastCertIssuer) {
		var ret string
		return ret
	}
	return *o.LastCertIssuer
}

// GetLastCertIssuerOk returns a tuple with the LastCertIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetLastCertIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.LastCertIssuer) {
		return nil, false
	}
	return o.LastCertIssuer, true
}

// HasLastCertIssuer returns a boolean if a field has been set.
func (o *ClientNac) HasLastCertIssuer() bool {
	if o != nil && !IsNil(o.LastCertIssuer) {
		return true
	}

	return false
}

// SetLastCertIssuer gets a reference to the given string and assigns it to the LastCertIssuer field.
func (o *ClientNac) SetLastCertIssuer(v string) {
	o.LastCertIssuer = &v
}

// GetLastNacruleId returns the LastNacruleId field value if set, zero value otherwise.
func (o *ClientNac) GetLastNacruleId() string {
	if o == nil || IsNil(o.LastNacruleId) {
		var ret string
		return ret
	}
	return *o.LastNacruleId
}

// GetLastNacruleIdOk returns a tuple with the LastNacruleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetLastNacruleIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastNacruleId) {
		return nil, false
	}
	return o.LastNacruleId, true
}

// HasLastNacruleId returns a boolean if a field has been set.
func (o *ClientNac) HasLastNacruleId() bool {
	if o != nil && !IsNil(o.LastNacruleId) {
		return true
	}

	return false
}

// SetLastNacruleId gets a reference to the given string and assigns it to the LastNacruleId field.
func (o *ClientNac) SetLastNacruleId(v string) {
	o.LastNacruleId = &v
}

// GetLastNacruleName returns the LastNacruleName field value if set, zero value otherwise.
func (o *ClientNac) GetLastNacruleName() string {
	if o == nil || IsNil(o.LastNacruleName) {
		var ret string
		return ret
	}
	return *o.LastNacruleName
}

// GetLastNacruleNameOk returns a tuple with the LastNacruleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetLastNacruleNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastNacruleName) {
		return nil, false
	}
	return o.LastNacruleName, true
}

// HasLastNacruleName returns a boolean if a field has been set.
func (o *ClientNac) HasLastNacruleName() bool {
	if o != nil && !IsNil(o.LastNacruleName) {
		return true
	}

	return false
}

// SetLastNacruleName gets a reference to the given string and assigns it to the LastNacruleName field.
func (o *ClientNac) SetLastNacruleName(v string) {
	o.LastNacruleName = &v
}

// GetLastNasVendor returns the LastNasVendor field value if set, zero value otherwise.
func (o *ClientNac) GetLastNasVendor() string {
	if o == nil || IsNil(o.LastNasVendor) {
		var ret string
		return ret
	}
	return *o.LastNasVendor
}

// GetLastNasVendorOk returns a tuple with the LastNasVendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetLastNasVendorOk() (*string, bool) {
	if o == nil || IsNil(o.LastNasVendor) {
		return nil, false
	}
	return o.LastNasVendor, true
}

// HasLastNasVendor returns a boolean if a field has been set.
func (o *ClientNac) HasLastNasVendor() bool {
	if o != nil && !IsNil(o.LastNasVendor) {
		return true
	}

	return false
}

// SetLastNasVendor gets a reference to the given string and assigns it to the LastNasVendor field.
func (o *ClientNac) SetLastNasVendor(v string) {
	o.LastNasVendor = &v
}

// GetLastSsid returns the LastSsid field value if set, zero value otherwise.
func (o *ClientNac) GetLastSsid() string {
	if o == nil || IsNil(o.LastSsid) {
		var ret string
		return ret
	}
	return *o.LastSsid
}

// GetLastSsidOk returns a tuple with the LastSsid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetLastSsidOk() (*string, bool) {
	if o == nil || IsNil(o.LastSsid) {
		return nil, false
	}
	return o.LastSsid, true
}

// HasLastSsid returns a boolean if a field has been set.
func (o *ClientNac) HasLastSsid() bool {
	if o != nil && !IsNil(o.LastSsid) {
		return true
	}

	return false
}

// SetLastSsid gets a reference to the given string and assigns it to the LastSsid field.
func (o *ClientNac) SetLastSsid(v string) {
	o.LastSsid = &v
}

// GetLastStatus returns the LastStatus field value if set, zero value otherwise.
func (o *ClientNac) GetLastStatus() string {
	if o == nil || IsNil(o.LastStatus) {
		var ret string
		return ret
	}
	return *o.LastStatus
}

// GetLastStatusOk returns a tuple with the LastStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetLastStatusOk() (*string, bool) {
	if o == nil || IsNil(o.LastStatus) {
		return nil, false
	}
	return o.LastStatus, true
}

// HasLastStatus returns a boolean if a field has been set.
func (o *ClientNac) HasLastStatus() bool {
	if o != nil && !IsNil(o.LastStatus) {
		return true
	}

	return false
}

// SetLastStatus gets a reference to the given string and assigns it to the LastStatus field.
func (o *ClientNac) SetLastStatus(v string) {
	o.LastStatus = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *ClientNac) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *ClientNac) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *ClientNac) SetMac(v string) {
	o.Mac = &v
}

// GetNacruleId returns the NacruleId field value if set, zero value otherwise.
func (o *ClientNac) GetNacruleId() []string {
	if o == nil || IsNil(o.NacruleId) {
		var ret []string
		return ret
	}
	return o.NacruleId
}

// GetNacruleIdOk returns a tuple with the NacruleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetNacruleIdOk() ([]string, bool) {
	if o == nil || IsNil(o.NacruleId) {
		return nil, false
	}
	return o.NacruleId, true
}

// HasNacruleId returns a boolean if a field has been set.
func (o *ClientNac) HasNacruleId() bool {
	if o != nil && !IsNil(o.NacruleId) {
		return true
	}

	return false
}

// SetNacruleId gets a reference to the given []string and assigns it to the NacruleId field.
func (o *ClientNac) SetNacruleId(v []string) {
	o.NacruleId = v
}

// GetNacruleMatched returns the NacruleMatched field value if set, zero value otherwise.
func (o *ClientNac) GetNacruleMatched() bool {
	if o == nil || IsNil(o.NacruleMatched) {
		var ret bool
		return ret
	}
	return *o.NacruleMatched
}

// GetNacruleMatchedOk returns a tuple with the NacruleMatched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetNacruleMatchedOk() (*bool, bool) {
	if o == nil || IsNil(o.NacruleMatched) {
		return nil, false
	}
	return o.NacruleMatched, true
}

// HasNacruleMatched returns a boolean if a field has been set.
func (o *ClientNac) HasNacruleMatched() bool {
	if o != nil && !IsNil(o.NacruleMatched) {
		return true
	}

	return false
}

// SetNacruleMatched gets a reference to the given bool and assigns it to the NacruleMatched field.
func (o *ClientNac) SetNacruleMatched(v bool) {
	o.NacruleMatched = &v
}

// GetNacruleName returns the NacruleName field value if set, zero value otherwise.
func (o *ClientNac) GetNacruleName() []string {
	if o == nil || IsNil(o.NacruleName) {
		var ret []string
		return ret
	}
	return o.NacruleName
}

// GetNacruleNameOk returns a tuple with the NacruleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetNacruleNameOk() ([]string, bool) {
	if o == nil || IsNil(o.NacruleName) {
		return nil, false
	}
	return o.NacruleName, true
}

// HasNacruleName returns a boolean if a field has been set.
func (o *ClientNac) HasNacruleName() bool {
	if o != nil && !IsNil(o.NacruleName) {
		return true
	}

	return false
}

// SetNacruleName gets a reference to the given []string and assigns it to the NacruleName field.
func (o *ClientNac) SetNacruleName(v []string) {
	o.NacruleName = v
}

// GetNasVendor returns the NasVendor field value if set, zero value otherwise.
func (o *ClientNac) GetNasVendor() []string {
	if o == nil || IsNil(o.NasVendor) {
		var ret []string
		return ret
	}
	return o.NasVendor
}

// GetNasVendorOk returns a tuple with the NasVendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetNasVendorOk() ([]string, bool) {
	if o == nil || IsNil(o.NasVendor) {
		return nil, false
	}
	return o.NasVendor, true
}

// HasNasVendor returns a boolean if a field has been set.
func (o *ClientNac) HasNasVendor() bool {
	if o != nil && !IsNil(o.NasVendor) {
		return true
	}

	return false
}

// SetNasVendor gets a reference to the given []string and assigns it to the NasVendor field.
func (o *ClientNac) SetNasVendor(v []string) {
	o.NasVendor = v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ClientNac) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ClientNac) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *ClientNac) SetOrgId(v string) {
	o.OrgId = &v
}

// GetRandomMac returns the RandomMac field value if set, zero value otherwise.
func (o *ClientNac) GetRandomMac() bool {
	if o == nil || IsNil(o.RandomMac) {
		var ret bool
		return ret
	}
	return *o.RandomMac
}

// GetRandomMacOk returns a tuple with the RandomMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetRandomMacOk() (*bool, bool) {
	if o == nil || IsNil(o.RandomMac) {
		return nil, false
	}
	return o.RandomMac, true
}

// HasRandomMac returns a boolean if a field has been set.
func (o *ClientNac) HasRandomMac() bool {
	if o != nil && !IsNil(o.RandomMac) {
		return true
	}

	return false
}

// SetRandomMac gets a reference to the given bool and assigns it to the RandomMac field.
func (o *ClientNac) SetRandomMac(v bool) {
	o.RandomMac = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *ClientNac) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *ClientNac) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *ClientNac) SetSiteId(v string) {
	o.SiteId = &v
}

// GetSsid returns the Ssid field value if set, zero value otherwise.
func (o *ClientNac) GetSsid() []string {
	if o == nil || IsNil(o.Ssid) {
		var ret []string
		return ret
	}
	return o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetSsidOk() ([]string, bool) {
	if o == nil || IsNil(o.Ssid) {
		return nil, false
	}
	return o.Ssid, true
}

// HasSsid returns a boolean if a field has been set.
func (o *ClientNac) HasSsid() bool {
	if o != nil && !IsNil(o.Ssid) {
		return true
	}

	return false
}

// SetSsid gets a reference to the given []string and assigns it to the Ssid field.
func (o *ClientNac) SetSsid(v []string) {
	o.Ssid = v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ClientNac) GetTimestamp() float32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret float32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ClientNac) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given float32 and assigns it to the Timestamp field.
func (o *ClientNac) SetTimestamp(v float32) {
	o.Timestamp = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ClientNac) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientNac) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ClientNac) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ClientNac) SetType(v string) {
	o.Type = &v
}

func (o ClientNac) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientNac) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ap) {
		toSerialize["ap"] = o.Ap
	}
	if !IsNil(o.AuthType) {
		toSerialize["auth_type"] = o.AuthType
	}
	if !IsNil(o.CertCn) {
		toSerialize["cert_cn"] = o.CertCn
	}
	if !IsNil(o.CertIssuer) {
		toSerialize["cert_issuer"] = o.CertIssuer
	}
	if !IsNil(o.IdpId) {
		toSerialize["idp_id"] = o.IdpId
	}
	if !IsNil(o.IdpRole) {
		toSerialize["idp_role"] = o.IdpRole
	}
	if !IsNil(o.LastAp) {
		toSerialize["last_ap"] = o.LastAp
	}
	if !IsNil(o.LastCertCn) {
		toSerialize["last_cert_cn"] = o.LastCertCn
	}
	if !IsNil(o.LastCertExpiry) {
		toSerialize["last_cert_expiry"] = o.LastCertExpiry
	}
	if !IsNil(o.LastCertIssuer) {
		toSerialize["last_cert_issuer"] = o.LastCertIssuer
	}
	if !IsNil(o.LastNacruleId) {
		toSerialize["last_nacrule_id"] = o.LastNacruleId
	}
	if !IsNil(o.LastNacruleName) {
		toSerialize["last_nacrule_name"] = o.LastNacruleName
	}
	if !IsNil(o.LastNasVendor) {
		toSerialize["last_nas_vendor"] = o.LastNasVendor
	}
	if !IsNil(o.LastSsid) {
		toSerialize["last_ssid"] = o.LastSsid
	}
	if !IsNil(o.LastStatus) {
		toSerialize["last_status"] = o.LastStatus
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.NacruleId) {
		toSerialize["nacrule_id"] = o.NacruleId
	}
	if !IsNil(o.NacruleMatched) {
		toSerialize["nacrule_matched"] = o.NacruleMatched
	}
	if !IsNil(o.NacruleName) {
		toSerialize["nacrule_name"] = o.NacruleName
	}
	if !IsNil(o.NasVendor) {
		toSerialize["nas_vendor"] = o.NasVendor
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.RandomMac) {
		toSerialize["random_mac"] = o.RandomMac
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.Ssid) {
		toSerialize["ssid"] = o.Ssid
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientNac) UnmarshalJSON(data []byte) (err error) {
	varClientNac := _ClientNac{}

	err = json.Unmarshal(data, &varClientNac)

	if err != nil {
		return err
	}

	*o = ClientNac(varClientNac)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ap")
		delete(additionalProperties, "auth_type")
		delete(additionalProperties, "cert_cn")
		delete(additionalProperties, "cert_issuer")
		delete(additionalProperties, "idp_id")
		delete(additionalProperties, "idp_role")
		delete(additionalProperties, "last_ap")
		delete(additionalProperties, "last_cert_cn")
		delete(additionalProperties, "last_cert_expiry")
		delete(additionalProperties, "last_cert_issuer")
		delete(additionalProperties, "last_nacrule_id")
		delete(additionalProperties, "last_nacrule_name")
		delete(additionalProperties, "last_nas_vendor")
		delete(additionalProperties, "last_ssid")
		delete(additionalProperties, "last_status")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "nacrule_id")
		delete(additionalProperties, "nacrule_matched")
		delete(additionalProperties, "nacrule_name")
		delete(additionalProperties, "nas_vendor")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "random_mac")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "ssid")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientNac struct {
	value *ClientNac
	isSet bool
}

func (v NullableClientNac) Get() *ClientNac {
	return v.value
}

func (v *NullableClientNac) Set(val *ClientNac) {
	v.value = val
	v.isSet = true
}

func (v NullableClientNac) IsSet() bool {
	return v.isSet
}

func (v *NullableClientNac) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientNac(val *ClientNac) *NullableClientNac {
	return &NullableClientNac{value: val, isSet: true}
}

func (v NullableClientNac) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientNac) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


