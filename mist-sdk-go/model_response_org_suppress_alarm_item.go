/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ResponseOrgSuppressAlarmItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseOrgSuppressAlarmItem{}

// ResponseOrgSuppressAlarmItem struct for ResponseOrgSuppressAlarmItem
type ResponseOrgSuppressAlarmItem struct {
	// duration, in seconds. Maximum duration is 86400 * 14 (14 days). 0 is to un-suppress alarms.
	Duration *int32 `json:"duration,omitempty"`
	SiteId *string `json:"site_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResponseOrgSuppressAlarmItem ResponseOrgSuppressAlarmItem

// NewResponseOrgSuppressAlarmItem instantiates a new ResponseOrgSuppressAlarmItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseOrgSuppressAlarmItem() *ResponseOrgSuppressAlarmItem {
	this := ResponseOrgSuppressAlarmItem{}
	return &this
}

// NewResponseOrgSuppressAlarmItemWithDefaults instantiates a new ResponseOrgSuppressAlarmItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseOrgSuppressAlarmItemWithDefaults() *ResponseOrgSuppressAlarmItem {
	this := ResponseOrgSuppressAlarmItem{}
	return &this
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *ResponseOrgSuppressAlarmItem) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSuppressAlarmItem) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *ResponseOrgSuppressAlarmItem) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *ResponseOrgSuppressAlarmItem) SetDuration(v int32) {
	o.Duration = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *ResponseOrgSuppressAlarmItem) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSuppressAlarmItem) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *ResponseOrgSuppressAlarmItem) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *ResponseOrgSuppressAlarmItem) SetSiteId(v string) {
	o.SiteId = &v
}

func (o ResponseOrgSuppressAlarmItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseOrgSuppressAlarmItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResponseOrgSuppressAlarmItem) UnmarshalJSON(data []byte) (err error) {
	varResponseOrgSuppressAlarmItem := _ResponseOrgSuppressAlarmItem{}

	err = json.Unmarshal(data, &varResponseOrgSuppressAlarmItem)

	if err != nil {
		return err
	}

	*o = ResponseOrgSuppressAlarmItem(varResponseOrgSuppressAlarmItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "duration")
		delete(additionalProperties, "site_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResponseOrgSuppressAlarmItem struct {
	value *ResponseOrgSuppressAlarmItem
	isSet bool
}

func (v NullableResponseOrgSuppressAlarmItem) Get() *ResponseOrgSuppressAlarmItem {
	return v.value
}

func (v *NullableResponseOrgSuppressAlarmItem) Set(val *ResponseOrgSuppressAlarmItem) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseOrgSuppressAlarmItem) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseOrgSuppressAlarmItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseOrgSuppressAlarmItem(val *ResponseOrgSuppressAlarmItem) *NullableResponseOrgSuppressAlarmItem {
	return &NullableResponseOrgSuppressAlarmItem{value: val, isSet: true}
}

func (v NullableResponseOrgSuppressAlarmItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseOrgSuppressAlarmItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


