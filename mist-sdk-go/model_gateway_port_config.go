/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the GatewayPortConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayPortConfig{}

// GatewayPortConfig Gateway port config
type GatewayPortConfig struct {
	Description *string `json:"description,omitempty"`
	DisableAutoneg *bool `json:"disable_autoneg,omitempty"`
	// port admin up (true) / down (false)
	Disabled *bool `json:"disabled,omitempty"`
	DslType *GatewayPortDslType `json:"dsl_type,omitempty"`
	// if `wan_type`==`dsl` 16 bit int
	DslVci *int32 `json:"dsl_vci,omitempty"`
	// if `wan_type`==`dsl` 8 bit int
	DslVpi *int32 `json:"dsl_vpi,omitempty"`
	Duplex *GatewayPortDuplex `json:"duplex,omitempty"`
	IpConfig *GatewayIpConfig `json:"ip_config,omitempty"`
	// if `wan_type`==`lte`
	LteApn *string `json:"lte_apn,omitempty"`
	LteAuth *GatewayPortLteAuth `json:"lte_auth,omitempty"`
	LteBackup *bool `json:"lte_backup,omitempty"`
	// if `wan_type`==`lte`
	LtePassword *string `json:"lte_password,omitempty"`
	// if `wan_type`==`lte`
	LteUsername *string `json:"lte_username,omitempty"`
	Mtu *int32 `json:"mtu,omitempty"`
	// name that we'll use to derive config
	Name *string `json:"name,omitempty"`
	// if `usage`==`lan`
	Networks []string `json:"networks,omitempty"`
	// for Q-in-Q
	OuterVlanId *int32 `json:"outer_vlan_id,omitempty"`
	PoeDisabled *bool `json:"poe_disabled,omitempty"`
	// if `usage`==`lan`
	PortNetwork *string `json:"port_network,omitempty"`
	// whether to preserve dscp when sending traffic over VPN (SSR-only)
	PreserveDscp *bool `json:"preserve_dscp,omitempty"`
	// if HA mode
	Redundant *bool `json:"redundant,omitempty"`
	// if HA mode
	RethIdx *int32 `json:"reth_idx,omitempty"`
	// if HA mode
	RethNode *string `json:"reth_node,omitempty"`
	// SSR only - supporting vlan-based redundancy (matching the size of `networks`)
	RethNodes []string `json:"reth_nodes,omitempty"`
	Speed *string `json:"speed,omitempty"`
	// when SSR is running as VM, this is required on certain hosting platforms
	SsrNoVirtualMac *bool `json:"ssr_no_virtual_mac,omitempty"`
	// for SSR only
	SvrPortRange *string `json:"svr_port_range,omitempty"`
	TrafficShaping *GatewayTrafficShaping `json:"traffic_shaping,omitempty"`
	Usage GatewayPortUsage `json:"usage"`
	// if WAN interface is on a VLAN
	VlanId *int32 `json:"vlan_id,omitempty"`
	VpnPaths *map[string]GatewayPortVpnPath `json:"vpn_paths,omitempty"`
	WanArpPolicer *GatewayPortWanArpPolicer `json:"wan_arp_policer,omitempty"`
	// optional, if spoke should reach this port by a different IP
	WanExtIp *string `json:"wan_ext_ip,omitempty"`
	WanSourceNat *GatewayPortWanSourceNat `json:"wan_source_nat,omitempty"`
	WanType *GatewayPortWanType `json:"wan_type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayPortConfig GatewayPortConfig

// NewGatewayPortConfig instantiates a new GatewayPortConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayPortConfig(usage GatewayPortUsage) *GatewayPortConfig {
	this := GatewayPortConfig{}
	var disableAutoneg bool = false
	this.DisableAutoneg = &disableAutoneg
	var disabled bool = false
	this.Disabled = &disabled
	var dslType GatewayPortDslType = GATEWAYPORTDSLTYPE_VDSL
	this.DslType = &dslType
	var dslVci int32 = 35
	this.DslVci = &dslVci
	var dslVpi int32 = 0
	this.DslVpi = &dslVpi
	var duplex GatewayPortDuplex = GATEWAYPORTDUPLEX_AUTO
	this.Duplex = &duplex
	var lteAuth GatewayPortLteAuth = GATEWAYPORTLTEAUTH_NONE
	this.LteAuth = &lteAuth
	var poeDisabled bool = false
	this.PoeDisabled = &poeDisabled
	var preserveDscp bool = true
	this.PreserveDscp = &preserveDscp
	var speed string = "auto"
	this.Speed = &speed
	var ssrNoVirtualMac bool = false
	this.SsrNoVirtualMac = &ssrNoVirtualMac
	var svrPortRange string = "none"
	this.SvrPortRange = &svrPortRange
	this.Usage = usage
	var wanArpPolicer GatewayPortWanArpPolicer = GATEWAYPORTWANARPPOLICER_RECOMMENDED
	this.WanArpPolicer = &wanArpPolicer
	var wanType GatewayPortWanType = GATEWAYPORTWANTYPE_BROADBAND
	this.WanType = &wanType
	return &this
}

// NewGatewayPortConfigWithDefaults instantiates a new GatewayPortConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayPortConfigWithDefaults() *GatewayPortConfig {
	this := GatewayPortConfig{}
	var disableAutoneg bool = false
	this.DisableAutoneg = &disableAutoneg
	var disabled bool = false
	this.Disabled = &disabled
	var dslType GatewayPortDslType = GATEWAYPORTDSLTYPE_VDSL
	this.DslType = &dslType
	var dslVci int32 = 35
	this.DslVci = &dslVci
	var dslVpi int32 = 0
	this.DslVpi = &dslVpi
	var duplex GatewayPortDuplex = GATEWAYPORTDUPLEX_AUTO
	this.Duplex = &duplex
	var lteAuth GatewayPortLteAuth = GATEWAYPORTLTEAUTH_NONE
	this.LteAuth = &lteAuth
	var poeDisabled bool = false
	this.PoeDisabled = &poeDisabled
	var preserveDscp bool = true
	this.PreserveDscp = &preserveDscp
	var speed string = "auto"
	this.Speed = &speed
	var ssrNoVirtualMac bool = false
	this.SsrNoVirtualMac = &ssrNoVirtualMac
	var svrPortRange string = "none"
	this.SvrPortRange = &svrPortRange
	var wanArpPolicer GatewayPortWanArpPolicer = GATEWAYPORTWANARPPOLICER_RECOMMENDED
	this.WanArpPolicer = &wanArpPolicer
	var wanType GatewayPortWanType = GATEWAYPORTWANTYPE_BROADBAND
	this.WanType = &wanType
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GatewayPortConfig) SetDescription(v string) {
	o.Description = &v
}

// GetDisableAutoneg returns the DisableAutoneg field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetDisableAutoneg() bool {
	if o == nil || IsNil(o.DisableAutoneg) {
		var ret bool
		return ret
	}
	return *o.DisableAutoneg
}

// GetDisableAutonegOk returns a tuple with the DisableAutoneg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetDisableAutonegOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAutoneg) {
		return nil, false
	}
	return o.DisableAutoneg, true
}

// HasDisableAutoneg returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasDisableAutoneg() bool {
	if o != nil && !IsNil(o.DisableAutoneg) {
		return true
	}

	return false
}

// SetDisableAutoneg gets a reference to the given bool and assigns it to the DisableAutoneg field.
func (o *GatewayPortConfig) SetDisableAutoneg(v bool) {
	o.DisableAutoneg = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *GatewayPortConfig) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetDslType returns the DslType field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetDslType() GatewayPortDslType {
	if o == nil || IsNil(o.DslType) {
		var ret GatewayPortDslType
		return ret
	}
	return *o.DslType
}

// GetDslTypeOk returns a tuple with the DslType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetDslTypeOk() (*GatewayPortDslType, bool) {
	if o == nil || IsNil(o.DslType) {
		return nil, false
	}
	return o.DslType, true
}

// HasDslType returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasDslType() bool {
	if o != nil && !IsNil(o.DslType) {
		return true
	}

	return false
}

// SetDslType gets a reference to the given GatewayPortDslType and assigns it to the DslType field.
func (o *GatewayPortConfig) SetDslType(v GatewayPortDslType) {
	o.DslType = &v
}

// GetDslVci returns the DslVci field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetDslVci() int32 {
	if o == nil || IsNil(o.DslVci) {
		var ret int32
		return ret
	}
	return *o.DslVci
}

// GetDslVciOk returns a tuple with the DslVci field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetDslVciOk() (*int32, bool) {
	if o == nil || IsNil(o.DslVci) {
		return nil, false
	}
	return o.DslVci, true
}

// HasDslVci returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasDslVci() bool {
	if o != nil && !IsNil(o.DslVci) {
		return true
	}

	return false
}

// SetDslVci gets a reference to the given int32 and assigns it to the DslVci field.
func (o *GatewayPortConfig) SetDslVci(v int32) {
	o.DslVci = &v
}

// GetDslVpi returns the DslVpi field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetDslVpi() int32 {
	if o == nil || IsNil(o.DslVpi) {
		var ret int32
		return ret
	}
	return *o.DslVpi
}

// GetDslVpiOk returns a tuple with the DslVpi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetDslVpiOk() (*int32, bool) {
	if o == nil || IsNil(o.DslVpi) {
		return nil, false
	}
	return o.DslVpi, true
}

// HasDslVpi returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasDslVpi() bool {
	if o != nil && !IsNil(o.DslVpi) {
		return true
	}

	return false
}

// SetDslVpi gets a reference to the given int32 and assigns it to the DslVpi field.
func (o *GatewayPortConfig) SetDslVpi(v int32) {
	o.DslVpi = &v
}

// GetDuplex returns the Duplex field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetDuplex() GatewayPortDuplex {
	if o == nil || IsNil(o.Duplex) {
		var ret GatewayPortDuplex
		return ret
	}
	return *o.Duplex
}

// GetDuplexOk returns a tuple with the Duplex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetDuplexOk() (*GatewayPortDuplex, bool) {
	if o == nil || IsNil(o.Duplex) {
		return nil, false
	}
	return o.Duplex, true
}

// HasDuplex returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasDuplex() bool {
	if o != nil && !IsNil(o.Duplex) {
		return true
	}

	return false
}

// SetDuplex gets a reference to the given GatewayPortDuplex and assigns it to the Duplex field.
func (o *GatewayPortConfig) SetDuplex(v GatewayPortDuplex) {
	o.Duplex = &v
}

// GetIpConfig returns the IpConfig field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetIpConfig() GatewayIpConfig {
	if o == nil || IsNil(o.IpConfig) {
		var ret GatewayIpConfig
		return ret
	}
	return *o.IpConfig
}

// GetIpConfigOk returns a tuple with the IpConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetIpConfigOk() (*GatewayIpConfig, bool) {
	if o == nil || IsNil(o.IpConfig) {
		return nil, false
	}
	return o.IpConfig, true
}

// HasIpConfig returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasIpConfig() bool {
	if o != nil && !IsNil(o.IpConfig) {
		return true
	}

	return false
}

// SetIpConfig gets a reference to the given GatewayIpConfig and assigns it to the IpConfig field.
func (o *GatewayPortConfig) SetIpConfig(v GatewayIpConfig) {
	o.IpConfig = &v
}

// GetLteApn returns the LteApn field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetLteApn() string {
	if o == nil || IsNil(o.LteApn) {
		var ret string
		return ret
	}
	return *o.LteApn
}

// GetLteApnOk returns a tuple with the LteApn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetLteApnOk() (*string, bool) {
	if o == nil || IsNil(o.LteApn) {
		return nil, false
	}
	return o.LteApn, true
}

// HasLteApn returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasLteApn() bool {
	if o != nil && !IsNil(o.LteApn) {
		return true
	}

	return false
}

// SetLteApn gets a reference to the given string and assigns it to the LteApn field.
func (o *GatewayPortConfig) SetLteApn(v string) {
	o.LteApn = &v
}

// GetLteAuth returns the LteAuth field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetLteAuth() GatewayPortLteAuth {
	if o == nil || IsNil(o.LteAuth) {
		var ret GatewayPortLteAuth
		return ret
	}
	return *o.LteAuth
}

// GetLteAuthOk returns a tuple with the LteAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetLteAuthOk() (*GatewayPortLteAuth, bool) {
	if o == nil || IsNil(o.LteAuth) {
		return nil, false
	}
	return o.LteAuth, true
}

// HasLteAuth returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasLteAuth() bool {
	if o != nil && !IsNil(o.LteAuth) {
		return true
	}

	return false
}

// SetLteAuth gets a reference to the given GatewayPortLteAuth and assigns it to the LteAuth field.
func (o *GatewayPortConfig) SetLteAuth(v GatewayPortLteAuth) {
	o.LteAuth = &v
}

// GetLteBackup returns the LteBackup field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetLteBackup() bool {
	if o == nil || IsNil(o.LteBackup) {
		var ret bool
		return ret
	}
	return *o.LteBackup
}

// GetLteBackupOk returns a tuple with the LteBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetLteBackupOk() (*bool, bool) {
	if o == nil || IsNil(o.LteBackup) {
		return nil, false
	}
	return o.LteBackup, true
}

// HasLteBackup returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasLteBackup() bool {
	if o != nil && !IsNil(o.LteBackup) {
		return true
	}

	return false
}

// SetLteBackup gets a reference to the given bool and assigns it to the LteBackup field.
func (o *GatewayPortConfig) SetLteBackup(v bool) {
	o.LteBackup = &v
}

// GetLtePassword returns the LtePassword field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetLtePassword() string {
	if o == nil || IsNil(o.LtePassword) {
		var ret string
		return ret
	}
	return *o.LtePassword
}

// GetLtePasswordOk returns a tuple with the LtePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetLtePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.LtePassword) {
		return nil, false
	}
	return o.LtePassword, true
}

// HasLtePassword returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasLtePassword() bool {
	if o != nil && !IsNil(o.LtePassword) {
		return true
	}

	return false
}

// SetLtePassword gets a reference to the given string and assigns it to the LtePassword field.
func (o *GatewayPortConfig) SetLtePassword(v string) {
	o.LtePassword = &v
}

// GetLteUsername returns the LteUsername field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetLteUsername() string {
	if o == nil || IsNil(o.LteUsername) {
		var ret string
		return ret
	}
	return *o.LteUsername
}

// GetLteUsernameOk returns a tuple with the LteUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetLteUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.LteUsername) {
		return nil, false
	}
	return o.LteUsername, true
}

// HasLteUsername returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasLteUsername() bool {
	if o != nil && !IsNil(o.LteUsername) {
		return true
	}

	return false
}

// SetLteUsername gets a reference to the given string and assigns it to the LteUsername field.
func (o *GatewayPortConfig) SetLteUsername(v string) {
	o.LteUsername = &v
}

// GetMtu returns the Mtu field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetMtu() int32 {
	if o == nil || IsNil(o.Mtu) {
		var ret int32
		return ret
	}
	return *o.Mtu
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetMtuOk() (*int32, bool) {
	if o == nil || IsNil(o.Mtu) {
		return nil, false
	}
	return o.Mtu, true
}

// HasMtu returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasMtu() bool {
	if o != nil && !IsNil(o.Mtu) {
		return true
	}

	return false
}

// SetMtu gets a reference to the given int32 and assigns it to the Mtu field.
func (o *GatewayPortConfig) SetMtu(v int32) {
	o.Mtu = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GatewayPortConfig) SetName(v string) {
	o.Name = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetNetworks() []string {
	if o == nil || IsNil(o.Networks) {
		var ret []string
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetNetworksOk() ([]string, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []string and assigns it to the Networks field.
func (o *GatewayPortConfig) SetNetworks(v []string) {
	o.Networks = v
}

// GetOuterVlanId returns the OuterVlanId field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetOuterVlanId() int32 {
	if o == nil || IsNil(o.OuterVlanId) {
		var ret int32
		return ret
	}
	return *o.OuterVlanId
}

// GetOuterVlanIdOk returns a tuple with the OuterVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetOuterVlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OuterVlanId) {
		return nil, false
	}
	return o.OuterVlanId, true
}

// HasOuterVlanId returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasOuterVlanId() bool {
	if o != nil && !IsNil(o.OuterVlanId) {
		return true
	}

	return false
}

// SetOuterVlanId gets a reference to the given int32 and assigns it to the OuterVlanId field.
func (o *GatewayPortConfig) SetOuterVlanId(v int32) {
	o.OuterVlanId = &v
}

// GetPoeDisabled returns the PoeDisabled field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetPoeDisabled() bool {
	if o == nil || IsNil(o.PoeDisabled) {
		var ret bool
		return ret
	}
	return *o.PoeDisabled
}

// GetPoeDisabledOk returns a tuple with the PoeDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetPoeDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PoeDisabled) {
		return nil, false
	}
	return o.PoeDisabled, true
}

// HasPoeDisabled returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasPoeDisabled() bool {
	if o != nil && !IsNil(o.PoeDisabled) {
		return true
	}

	return false
}

// SetPoeDisabled gets a reference to the given bool and assigns it to the PoeDisabled field.
func (o *GatewayPortConfig) SetPoeDisabled(v bool) {
	o.PoeDisabled = &v
}

// GetPortNetwork returns the PortNetwork field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetPortNetwork() string {
	if o == nil || IsNil(o.PortNetwork) {
		var ret string
		return ret
	}
	return *o.PortNetwork
}

// GetPortNetworkOk returns a tuple with the PortNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetPortNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.PortNetwork) {
		return nil, false
	}
	return o.PortNetwork, true
}

// HasPortNetwork returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasPortNetwork() bool {
	if o != nil && !IsNil(o.PortNetwork) {
		return true
	}

	return false
}

// SetPortNetwork gets a reference to the given string and assigns it to the PortNetwork field.
func (o *GatewayPortConfig) SetPortNetwork(v string) {
	o.PortNetwork = &v
}

// GetPreserveDscp returns the PreserveDscp field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetPreserveDscp() bool {
	if o == nil || IsNil(o.PreserveDscp) {
		var ret bool
		return ret
	}
	return *o.PreserveDscp
}

// GetPreserveDscpOk returns a tuple with the PreserveDscp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetPreserveDscpOk() (*bool, bool) {
	if o == nil || IsNil(o.PreserveDscp) {
		return nil, false
	}
	return o.PreserveDscp, true
}

// HasPreserveDscp returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasPreserveDscp() bool {
	if o != nil && !IsNil(o.PreserveDscp) {
		return true
	}

	return false
}

// SetPreserveDscp gets a reference to the given bool and assigns it to the PreserveDscp field.
func (o *GatewayPortConfig) SetPreserveDscp(v bool) {
	o.PreserveDscp = &v
}

// GetRedundant returns the Redundant field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetRedundant() bool {
	if o == nil || IsNil(o.Redundant) {
		var ret bool
		return ret
	}
	return *o.Redundant
}

// GetRedundantOk returns a tuple with the Redundant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetRedundantOk() (*bool, bool) {
	if o == nil || IsNil(o.Redundant) {
		return nil, false
	}
	return o.Redundant, true
}

// HasRedundant returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasRedundant() bool {
	if o != nil && !IsNil(o.Redundant) {
		return true
	}

	return false
}

// SetRedundant gets a reference to the given bool and assigns it to the Redundant field.
func (o *GatewayPortConfig) SetRedundant(v bool) {
	o.Redundant = &v
}

// GetRethIdx returns the RethIdx field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetRethIdx() int32 {
	if o == nil || IsNil(o.RethIdx) {
		var ret int32
		return ret
	}
	return *o.RethIdx
}

// GetRethIdxOk returns a tuple with the RethIdx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetRethIdxOk() (*int32, bool) {
	if o == nil || IsNil(o.RethIdx) {
		return nil, false
	}
	return o.RethIdx, true
}

// HasRethIdx returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasRethIdx() bool {
	if o != nil && !IsNil(o.RethIdx) {
		return true
	}

	return false
}

// SetRethIdx gets a reference to the given int32 and assigns it to the RethIdx field.
func (o *GatewayPortConfig) SetRethIdx(v int32) {
	o.RethIdx = &v
}

// GetRethNode returns the RethNode field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetRethNode() string {
	if o == nil || IsNil(o.RethNode) {
		var ret string
		return ret
	}
	return *o.RethNode
}

// GetRethNodeOk returns a tuple with the RethNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetRethNodeOk() (*string, bool) {
	if o == nil || IsNil(o.RethNode) {
		return nil, false
	}
	return o.RethNode, true
}

// HasRethNode returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasRethNode() bool {
	if o != nil && !IsNil(o.RethNode) {
		return true
	}

	return false
}

// SetRethNode gets a reference to the given string and assigns it to the RethNode field.
func (o *GatewayPortConfig) SetRethNode(v string) {
	o.RethNode = &v
}

// GetRethNodes returns the RethNodes field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetRethNodes() []string {
	if o == nil || IsNil(o.RethNodes) {
		var ret []string
		return ret
	}
	return o.RethNodes
}

// GetRethNodesOk returns a tuple with the RethNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetRethNodesOk() ([]string, bool) {
	if o == nil || IsNil(o.RethNodes) {
		return nil, false
	}
	return o.RethNodes, true
}

// HasRethNodes returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasRethNodes() bool {
	if o != nil && !IsNil(o.RethNodes) {
		return true
	}

	return false
}

// SetRethNodes gets a reference to the given []string and assigns it to the RethNodes field.
func (o *GatewayPortConfig) SetRethNodes(v []string) {
	o.RethNodes = v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetSpeed() string {
	if o == nil || IsNil(o.Speed) {
		var ret string
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetSpeedOk() (*string, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given string and assigns it to the Speed field.
func (o *GatewayPortConfig) SetSpeed(v string) {
	o.Speed = &v
}

// GetSsrNoVirtualMac returns the SsrNoVirtualMac field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetSsrNoVirtualMac() bool {
	if o == nil || IsNil(o.SsrNoVirtualMac) {
		var ret bool
		return ret
	}
	return *o.SsrNoVirtualMac
}

// GetSsrNoVirtualMacOk returns a tuple with the SsrNoVirtualMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetSsrNoVirtualMacOk() (*bool, bool) {
	if o == nil || IsNil(o.SsrNoVirtualMac) {
		return nil, false
	}
	return o.SsrNoVirtualMac, true
}

// HasSsrNoVirtualMac returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasSsrNoVirtualMac() bool {
	if o != nil && !IsNil(o.SsrNoVirtualMac) {
		return true
	}

	return false
}

// SetSsrNoVirtualMac gets a reference to the given bool and assigns it to the SsrNoVirtualMac field.
func (o *GatewayPortConfig) SetSsrNoVirtualMac(v bool) {
	o.SsrNoVirtualMac = &v
}

// GetSvrPortRange returns the SvrPortRange field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetSvrPortRange() string {
	if o == nil || IsNil(o.SvrPortRange) {
		var ret string
		return ret
	}
	return *o.SvrPortRange
}

// GetSvrPortRangeOk returns a tuple with the SvrPortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetSvrPortRangeOk() (*string, bool) {
	if o == nil || IsNil(o.SvrPortRange) {
		return nil, false
	}
	return o.SvrPortRange, true
}

// HasSvrPortRange returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasSvrPortRange() bool {
	if o != nil && !IsNil(o.SvrPortRange) {
		return true
	}

	return false
}

// SetSvrPortRange gets a reference to the given string and assigns it to the SvrPortRange field.
func (o *GatewayPortConfig) SetSvrPortRange(v string) {
	o.SvrPortRange = &v
}

// GetTrafficShaping returns the TrafficShaping field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetTrafficShaping() GatewayTrafficShaping {
	if o == nil || IsNil(o.TrafficShaping) {
		var ret GatewayTrafficShaping
		return ret
	}
	return *o.TrafficShaping
}

// GetTrafficShapingOk returns a tuple with the TrafficShaping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetTrafficShapingOk() (*GatewayTrafficShaping, bool) {
	if o == nil || IsNil(o.TrafficShaping) {
		return nil, false
	}
	return o.TrafficShaping, true
}

// HasTrafficShaping returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasTrafficShaping() bool {
	if o != nil && !IsNil(o.TrafficShaping) {
		return true
	}

	return false
}

// SetTrafficShaping gets a reference to the given GatewayTrafficShaping and assigns it to the TrafficShaping field.
func (o *GatewayPortConfig) SetTrafficShaping(v GatewayTrafficShaping) {
	o.TrafficShaping = &v
}

// GetUsage returns the Usage field value
func (o *GatewayPortConfig) GetUsage() GatewayPortUsage {
	if o == nil {
		var ret GatewayPortUsage
		return ret
	}

	return o.Usage
}

// GetUsageOk returns a tuple with the Usage field value
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetUsageOk() (*GatewayPortUsage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Usage, true
}

// SetUsage sets field value
func (o *GatewayPortConfig) SetUsage(v GatewayPortUsage) {
	o.Usage = v
}

// GetVlanId returns the VlanId field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetVlanId() int32 {
	if o == nil || IsNil(o.VlanId) {
		var ret int32
		return ret
	}
	return *o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetVlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanId) {
		return nil, false
	}
	return o.VlanId, true
}

// HasVlanId returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasVlanId() bool {
	if o != nil && !IsNil(o.VlanId) {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given int32 and assigns it to the VlanId field.
func (o *GatewayPortConfig) SetVlanId(v int32) {
	o.VlanId = &v
}

// GetVpnPaths returns the VpnPaths field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetVpnPaths() map[string]GatewayPortVpnPath {
	if o == nil || IsNil(o.VpnPaths) {
		var ret map[string]GatewayPortVpnPath
		return ret
	}
	return *o.VpnPaths
}

// GetVpnPathsOk returns a tuple with the VpnPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetVpnPathsOk() (*map[string]GatewayPortVpnPath, bool) {
	if o == nil || IsNil(o.VpnPaths) {
		return nil, false
	}
	return o.VpnPaths, true
}

// HasVpnPaths returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasVpnPaths() bool {
	if o != nil && !IsNil(o.VpnPaths) {
		return true
	}

	return false
}

// SetVpnPaths gets a reference to the given map[string]GatewayPortVpnPath and assigns it to the VpnPaths field.
func (o *GatewayPortConfig) SetVpnPaths(v map[string]GatewayPortVpnPath) {
	o.VpnPaths = &v
}

// GetWanArpPolicer returns the WanArpPolicer field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetWanArpPolicer() GatewayPortWanArpPolicer {
	if o == nil || IsNil(o.WanArpPolicer) {
		var ret GatewayPortWanArpPolicer
		return ret
	}
	return *o.WanArpPolicer
}

// GetWanArpPolicerOk returns a tuple with the WanArpPolicer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetWanArpPolicerOk() (*GatewayPortWanArpPolicer, bool) {
	if o == nil || IsNil(o.WanArpPolicer) {
		return nil, false
	}
	return o.WanArpPolicer, true
}

// HasWanArpPolicer returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasWanArpPolicer() bool {
	if o != nil && !IsNil(o.WanArpPolicer) {
		return true
	}

	return false
}

// SetWanArpPolicer gets a reference to the given GatewayPortWanArpPolicer and assigns it to the WanArpPolicer field.
func (o *GatewayPortConfig) SetWanArpPolicer(v GatewayPortWanArpPolicer) {
	o.WanArpPolicer = &v
}

// GetWanExtIp returns the WanExtIp field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetWanExtIp() string {
	if o == nil || IsNil(o.WanExtIp) {
		var ret string
		return ret
	}
	return *o.WanExtIp
}

// GetWanExtIpOk returns a tuple with the WanExtIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetWanExtIpOk() (*string, bool) {
	if o == nil || IsNil(o.WanExtIp) {
		return nil, false
	}
	return o.WanExtIp, true
}

// HasWanExtIp returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasWanExtIp() bool {
	if o != nil && !IsNil(o.WanExtIp) {
		return true
	}

	return false
}

// SetWanExtIp gets a reference to the given string and assigns it to the WanExtIp field.
func (o *GatewayPortConfig) SetWanExtIp(v string) {
	o.WanExtIp = &v
}

// GetWanSourceNat returns the WanSourceNat field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetWanSourceNat() GatewayPortWanSourceNat {
	if o == nil || IsNil(o.WanSourceNat) {
		var ret GatewayPortWanSourceNat
		return ret
	}
	return *o.WanSourceNat
}

// GetWanSourceNatOk returns a tuple with the WanSourceNat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetWanSourceNatOk() (*GatewayPortWanSourceNat, bool) {
	if o == nil || IsNil(o.WanSourceNat) {
		return nil, false
	}
	return o.WanSourceNat, true
}

// HasWanSourceNat returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasWanSourceNat() bool {
	if o != nil && !IsNil(o.WanSourceNat) {
		return true
	}

	return false
}

// SetWanSourceNat gets a reference to the given GatewayPortWanSourceNat and assigns it to the WanSourceNat field.
func (o *GatewayPortConfig) SetWanSourceNat(v GatewayPortWanSourceNat) {
	o.WanSourceNat = &v
}

// GetWanType returns the WanType field value if set, zero value otherwise.
func (o *GatewayPortConfig) GetWanType() GatewayPortWanType {
	if o == nil || IsNil(o.WanType) {
		var ret GatewayPortWanType
		return ret
	}
	return *o.WanType
}

// GetWanTypeOk returns a tuple with the WanType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfig) GetWanTypeOk() (*GatewayPortWanType, bool) {
	if o == nil || IsNil(o.WanType) {
		return nil, false
	}
	return o.WanType, true
}

// HasWanType returns a boolean if a field has been set.
func (o *GatewayPortConfig) HasWanType() bool {
	if o != nil && !IsNil(o.WanType) {
		return true
	}

	return false
}

// SetWanType gets a reference to the given GatewayPortWanType and assigns it to the WanType field.
func (o *GatewayPortConfig) SetWanType(v GatewayPortWanType) {
	o.WanType = &v
}

func (o GatewayPortConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayPortConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisableAutoneg) {
		toSerialize["disable_autoneg"] = o.DisableAutoneg
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.DslType) {
		toSerialize["dsl_type"] = o.DslType
	}
	if !IsNil(o.DslVci) {
		toSerialize["dsl_vci"] = o.DslVci
	}
	if !IsNil(o.DslVpi) {
		toSerialize["dsl_vpi"] = o.DslVpi
	}
	if !IsNil(o.Duplex) {
		toSerialize["duplex"] = o.Duplex
	}
	if !IsNil(o.IpConfig) {
		toSerialize["ip_config"] = o.IpConfig
	}
	if !IsNil(o.LteApn) {
		toSerialize["lte_apn"] = o.LteApn
	}
	if !IsNil(o.LteAuth) {
		toSerialize["lte_auth"] = o.LteAuth
	}
	if !IsNil(o.LteBackup) {
		toSerialize["lte_backup"] = o.LteBackup
	}
	if !IsNil(o.LtePassword) {
		toSerialize["lte_password"] = o.LtePassword
	}
	if !IsNil(o.LteUsername) {
		toSerialize["lte_username"] = o.LteUsername
	}
	if !IsNil(o.Mtu) {
		toSerialize["mtu"] = o.Mtu
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	if !IsNil(o.OuterVlanId) {
		toSerialize["outer_vlan_id"] = o.OuterVlanId
	}
	if !IsNil(o.PoeDisabled) {
		toSerialize["poe_disabled"] = o.PoeDisabled
	}
	if !IsNil(o.PortNetwork) {
		toSerialize["port_network"] = o.PortNetwork
	}
	if !IsNil(o.PreserveDscp) {
		toSerialize["preserve_dscp"] = o.PreserveDscp
	}
	if !IsNil(o.Redundant) {
		toSerialize["redundant"] = o.Redundant
	}
	if !IsNil(o.RethIdx) {
		toSerialize["reth_idx"] = o.RethIdx
	}
	if !IsNil(o.RethNode) {
		toSerialize["reth_node"] = o.RethNode
	}
	if !IsNil(o.RethNodes) {
		toSerialize["reth_nodes"] = o.RethNodes
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.SsrNoVirtualMac) {
		toSerialize["ssr_no_virtual_mac"] = o.SsrNoVirtualMac
	}
	if !IsNil(o.SvrPortRange) {
		toSerialize["svr_port_range"] = o.SvrPortRange
	}
	if !IsNil(o.TrafficShaping) {
		toSerialize["traffic_shaping"] = o.TrafficShaping
	}
	toSerialize["usage"] = o.Usage
	if !IsNil(o.VlanId) {
		toSerialize["vlan_id"] = o.VlanId
	}
	if !IsNil(o.VpnPaths) {
		toSerialize["vpn_paths"] = o.VpnPaths
	}
	if !IsNil(o.WanArpPolicer) {
		toSerialize["wan_arp_policer"] = o.WanArpPolicer
	}
	if !IsNil(o.WanExtIp) {
		toSerialize["wan_ext_ip"] = o.WanExtIp
	}
	if !IsNil(o.WanSourceNat) {
		toSerialize["wan_source_nat"] = o.WanSourceNat
	}
	if !IsNil(o.WanType) {
		toSerialize["wan_type"] = o.WanType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayPortConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"usage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGatewayPortConfig := _GatewayPortConfig{}

	err = json.Unmarshal(data, &varGatewayPortConfig)

	if err != nil {
		return err
	}

	*o = GatewayPortConfig(varGatewayPortConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "disable_autoneg")
		delete(additionalProperties, "disabled")
		delete(additionalProperties, "dsl_type")
		delete(additionalProperties, "dsl_vci")
		delete(additionalProperties, "dsl_vpi")
		delete(additionalProperties, "duplex")
		delete(additionalProperties, "ip_config")
		delete(additionalProperties, "lte_apn")
		delete(additionalProperties, "lte_auth")
		delete(additionalProperties, "lte_backup")
		delete(additionalProperties, "lte_password")
		delete(additionalProperties, "lte_username")
		delete(additionalProperties, "mtu")
		delete(additionalProperties, "name")
		delete(additionalProperties, "networks")
		delete(additionalProperties, "outer_vlan_id")
		delete(additionalProperties, "poe_disabled")
		delete(additionalProperties, "port_network")
		delete(additionalProperties, "preserve_dscp")
		delete(additionalProperties, "redundant")
		delete(additionalProperties, "reth_idx")
		delete(additionalProperties, "reth_node")
		delete(additionalProperties, "reth_nodes")
		delete(additionalProperties, "speed")
		delete(additionalProperties, "ssr_no_virtual_mac")
		delete(additionalProperties, "svr_port_range")
		delete(additionalProperties, "traffic_shaping")
		delete(additionalProperties, "usage")
		delete(additionalProperties, "vlan_id")
		delete(additionalProperties, "vpn_paths")
		delete(additionalProperties, "wan_arp_policer")
		delete(additionalProperties, "wan_ext_ip")
		delete(additionalProperties, "wan_source_nat")
		delete(additionalProperties, "wan_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayPortConfig struct {
	value *GatewayPortConfig
	isSet bool
}

func (v NullableGatewayPortConfig) Get() *GatewayPortConfig {
	return v.value
}

func (v *NullableGatewayPortConfig) Set(val *GatewayPortConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayPortConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayPortConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayPortConfig(val *GatewayPortConfig) *NullableGatewayPortConfig {
	return &NullableGatewayPortConfig{value: val, isSet: true}
}

func (v NullableGatewayPortConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayPortConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


