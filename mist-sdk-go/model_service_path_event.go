/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ServicePathEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicePathEvent{}

// ServicePathEvent struct for ServicePathEvent
type ServicePathEvent struct {
	Mac *string `json:"mac,omitempty"`
	Model *string `json:"model,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	Policy *string `json:"policy,omitempty"`
	PortId *string `json:"port_id,omitempty"`
	SiteId *string `json:"site_id,omitempty"`
	Text *string `json:"text,omitempty"`
	Timestamp *float32 `json:"timestamp,omitempty"`
	Type *string `json:"type,omitempty"`
	Version *string `json:"version,omitempty"`
	VpnName *string `json:"vpn_name,omitempty"`
	VpnPath *string `json:"vpn_path,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServicePathEvent ServicePathEvent

// NewServicePathEvent instantiates a new ServicePathEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicePathEvent() *ServicePathEvent {
	this := ServicePathEvent{}
	return &this
}

// NewServicePathEventWithDefaults instantiates a new ServicePathEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicePathEventWithDefaults() *ServicePathEvent {
	this := ServicePathEvent{}
	return &this
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *ServicePathEvent) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePathEvent) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *ServicePathEvent) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *ServicePathEvent) SetMac(v string) {
	o.Mac = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *ServicePathEvent) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePathEvent) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *ServicePathEvent) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *ServicePathEvent) SetModel(v string) {
	o.Model = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ServicePathEvent) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePathEvent) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ServicePathEvent) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *ServicePathEvent) SetOrgId(v string) {
	o.OrgId = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *ServicePathEvent) GetPolicy() string {
	if o == nil || IsNil(o.Policy) {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePathEvent) GetPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *ServicePathEvent) HasPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *ServicePathEvent) SetPolicy(v string) {
	o.Policy = &v
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *ServicePathEvent) GetPortId() string {
	if o == nil || IsNil(o.PortId) {
		var ret string
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePathEvent) GetPortIdOk() (*string, bool) {
	if o == nil || IsNil(o.PortId) {
		return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *ServicePathEvent) HasPortId() bool {
	if o != nil && !IsNil(o.PortId) {
		return true
	}

	return false
}

// SetPortId gets a reference to the given string and assigns it to the PortId field.
func (o *ServicePathEvent) SetPortId(v string) {
	o.PortId = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *ServicePathEvent) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePathEvent) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *ServicePathEvent) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *ServicePathEvent) SetSiteId(v string) {
	o.SiteId = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *ServicePathEvent) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePathEvent) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *ServicePathEvent) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *ServicePathEvent) SetText(v string) {
	o.Text = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ServicePathEvent) GetTimestamp() float32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret float32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePathEvent) GetTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ServicePathEvent) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given float32 and assigns it to the Timestamp field.
func (o *ServicePathEvent) SetTimestamp(v float32) {
	o.Timestamp = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ServicePathEvent) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePathEvent) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ServicePathEvent) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ServicePathEvent) SetType(v string) {
	o.Type = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ServicePathEvent) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePathEvent) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ServicePathEvent) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ServicePathEvent) SetVersion(v string) {
	o.Version = &v
}

// GetVpnName returns the VpnName field value if set, zero value otherwise.
func (o *ServicePathEvent) GetVpnName() string {
	if o == nil || IsNil(o.VpnName) {
		var ret string
		return ret
	}
	return *o.VpnName
}

// GetVpnNameOk returns a tuple with the VpnName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePathEvent) GetVpnNameOk() (*string, bool) {
	if o == nil || IsNil(o.VpnName) {
		return nil, false
	}
	return o.VpnName, true
}

// HasVpnName returns a boolean if a field has been set.
func (o *ServicePathEvent) HasVpnName() bool {
	if o != nil && !IsNil(o.VpnName) {
		return true
	}

	return false
}

// SetVpnName gets a reference to the given string and assigns it to the VpnName field.
func (o *ServicePathEvent) SetVpnName(v string) {
	o.VpnName = &v
}

// GetVpnPath returns the VpnPath field value if set, zero value otherwise.
func (o *ServicePathEvent) GetVpnPath() string {
	if o == nil || IsNil(o.VpnPath) {
		var ret string
		return ret
	}
	return *o.VpnPath
}

// GetVpnPathOk returns a tuple with the VpnPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePathEvent) GetVpnPathOk() (*string, bool) {
	if o == nil || IsNil(o.VpnPath) {
		return nil, false
	}
	return o.VpnPath, true
}

// HasVpnPath returns a boolean if a field has been set.
func (o *ServicePathEvent) HasVpnPath() bool {
	if o != nil && !IsNil(o.VpnPath) {
		return true
	}

	return false
}

// SetVpnPath gets a reference to the given string and assigns it to the VpnPath field.
func (o *ServicePathEvent) SetVpnPath(v string) {
	o.VpnPath = &v
}

func (o ServicePathEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicePathEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	if !IsNil(o.PortId) {
		toSerialize["port_id"] = o.PortId
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.VpnName) {
		toSerialize["vpn_name"] = o.VpnName
	}
	if !IsNil(o.VpnPath) {
		toSerialize["vpn_path"] = o.VpnPath
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServicePathEvent) UnmarshalJSON(data []byte) (err error) {
	varServicePathEvent := _ServicePathEvent{}

	err = json.Unmarshal(data, &varServicePathEvent)

	if err != nil {
		return err
	}

	*o = ServicePathEvent(varServicePathEvent)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mac")
		delete(additionalProperties, "model")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "policy")
		delete(additionalProperties, "port_id")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "text")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "type")
		delete(additionalProperties, "version")
		delete(additionalProperties, "vpn_name")
		delete(additionalProperties, "vpn_path")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServicePathEvent struct {
	value *ServicePathEvent
	isSet bool
}

func (v NullableServicePathEvent) Get() *ServicePathEvent {
	return v.value
}

func (v *NullableServicePathEvent) Set(val *ServicePathEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableServicePathEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableServicePathEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicePathEvent(val *ServicePathEvent) *NullableServicePathEvent {
	return &NullableServicePathEvent{value: val, isSet: true}
}

func (v NullableServicePathEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicePathEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


