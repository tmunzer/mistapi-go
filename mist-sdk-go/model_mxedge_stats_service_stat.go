/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the MxedgeStatsServiceStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MxedgeStatsServiceStat{}

// MxedgeStatsServiceStat struct for MxedgeStatsServiceStat
type MxedgeStatsServiceStat struct {
	// external IP from ep-terminatorâ€™s point of view. valid only for service having its own cloud connection
	ExtIp *string `json:"ext_ip,omitempty"`
	// timestamp when the last stats is seen (cloud unix time, in second). valid only for service having its own stats or whole system (last among last_seen of all services)
	LastSeen *int32 `json:"last_seen,omitempty"`
	// package/service installation state.
	PackageState *string `json:"package_state,omitempty"`
	// package/service installation state.
	PackageVersion *string `json:"package_version,omitempty"`
	// service running state.
	RunningState *string `json:"running_state,omitempty"`
	// service uptime.
	Uptime *int32 `json:"uptime,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MxedgeStatsServiceStat MxedgeStatsServiceStat

// NewMxedgeStatsServiceStat instantiates a new MxedgeStatsServiceStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMxedgeStatsServiceStat() *MxedgeStatsServiceStat {
	this := MxedgeStatsServiceStat{}
	return &this
}

// NewMxedgeStatsServiceStatWithDefaults instantiates a new MxedgeStatsServiceStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMxedgeStatsServiceStatWithDefaults() *MxedgeStatsServiceStat {
	this := MxedgeStatsServiceStat{}
	return &this
}

// GetExtIp returns the ExtIp field value if set, zero value otherwise.
func (o *MxedgeStatsServiceStat) GetExtIp() string {
	if o == nil || IsNil(o.ExtIp) {
		var ret string
		return ret
	}
	return *o.ExtIp
}

// GetExtIpOk returns a tuple with the ExtIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStatsServiceStat) GetExtIpOk() (*string, bool) {
	if o == nil || IsNil(o.ExtIp) {
		return nil, false
	}
	return o.ExtIp, true
}

// HasExtIp returns a boolean if a field has been set.
func (o *MxedgeStatsServiceStat) HasExtIp() bool {
	if o != nil && !IsNil(o.ExtIp) {
		return true
	}

	return false
}

// SetExtIp gets a reference to the given string and assigns it to the ExtIp field.
func (o *MxedgeStatsServiceStat) SetExtIp(v string) {
	o.ExtIp = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *MxedgeStatsServiceStat) GetLastSeen() int32 {
	if o == nil || IsNil(o.LastSeen) {
		var ret int32
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStatsServiceStat) GetLastSeenOk() (*int32, bool) {
	if o == nil || IsNil(o.LastSeen) {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *MxedgeStatsServiceStat) HasLastSeen() bool {
	if o != nil && !IsNil(o.LastSeen) {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given int32 and assigns it to the LastSeen field.
func (o *MxedgeStatsServiceStat) SetLastSeen(v int32) {
	o.LastSeen = &v
}

// GetPackageState returns the PackageState field value if set, zero value otherwise.
func (o *MxedgeStatsServiceStat) GetPackageState() string {
	if o == nil || IsNil(o.PackageState) {
		var ret string
		return ret
	}
	return *o.PackageState
}

// GetPackageStateOk returns a tuple with the PackageState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStatsServiceStat) GetPackageStateOk() (*string, bool) {
	if o == nil || IsNil(o.PackageState) {
		return nil, false
	}
	return o.PackageState, true
}

// HasPackageState returns a boolean if a field has been set.
func (o *MxedgeStatsServiceStat) HasPackageState() bool {
	if o != nil && !IsNil(o.PackageState) {
		return true
	}

	return false
}

// SetPackageState gets a reference to the given string and assigns it to the PackageState field.
func (o *MxedgeStatsServiceStat) SetPackageState(v string) {
	o.PackageState = &v
}

// GetPackageVersion returns the PackageVersion field value if set, zero value otherwise.
func (o *MxedgeStatsServiceStat) GetPackageVersion() string {
	if o == nil || IsNil(o.PackageVersion) {
		var ret string
		return ret
	}
	return *o.PackageVersion
}

// GetPackageVersionOk returns a tuple with the PackageVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStatsServiceStat) GetPackageVersionOk() (*string, bool) {
	if o == nil || IsNil(o.PackageVersion) {
		return nil, false
	}
	return o.PackageVersion, true
}

// HasPackageVersion returns a boolean if a field has been set.
func (o *MxedgeStatsServiceStat) HasPackageVersion() bool {
	if o != nil && !IsNil(o.PackageVersion) {
		return true
	}

	return false
}

// SetPackageVersion gets a reference to the given string and assigns it to the PackageVersion field.
func (o *MxedgeStatsServiceStat) SetPackageVersion(v string) {
	o.PackageVersion = &v
}

// GetRunningState returns the RunningState field value if set, zero value otherwise.
func (o *MxedgeStatsServiceStat) GetRunningState() string {
	if o == nil || IsNil(o.RunningState) {
		var ret string
		return ret
	}
	return *o.RunningState
}

// GetRunningStateOk returns a tuple with the RunningState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStatsServiceStat) GetRunningStateOk() (*string, bool) {
	if o == nil || IsNil(o.RunningState) {
		return nil, false
	}
	return o.RunningState, true
}

// HasRunningState returns a boolean if a field has been set.
func (o *MxedgeStatsServiceStat) HasRunningState() bool {
	if o != nil && !IsNil(o.RunningState) {
		return true
	}

	return false
}

// SetRunningState gets a reference to the given string and assigns it to the RunningState field.
func (o *MxedgeStatsServiceStat) SetRunningState(v string) {
	o.RunningState = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *MxedgeStatsServiceStat) GetUptime() int32 {
	if o == nil || IsNil(o.Uptime) {
		var ret int32
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStatsServiceStat) GetUptimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Uptime) {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *MxedgeStatsServiceStat) HasUptime() bool {
	if o != nil && !IsNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given int32 and assigns it to the Uptime field.
func (o *MxedgeStatsServiceStat) SetUptime(v int32) {
	o.Uptime = &v
}

func (o MxedgeStatsServiceStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MxedgeStatsServiceStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExtIp) {
		toSerialize["ext_ip"] = o.ExtIp
	}
	if !IsNil(o.LastSeen) {
		toSerialize["last_seen"] = o.LastSeen
	}
	if !IsNil(o.PackageState) {
		toSerialize["package_state"] = o.PackageState
	}
	if !IsNil(o.PackageVersion) {
		toSerialize["package_version"] = o.PackageVersion
	}
	if !IsNil(o.RunningState) {
		toSerialize["running_state"] = o.RunningState
	}
	if !IsNil(o.Uptime) {
		toSerialize["uptime"] = o.Uptime
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MxedgeStatsServiceStat) UnmarshalJSON(data []byte) (err error) {
	varMxedgeStatsServiceStat := _MxedgeStatsServiceStat{}

	err = json.Unmarshal(data, &varMxedgeStatsServiceStat)

	if err != nil {
		return err
	}

	*o = MxedgeStatsServiceStat(varMxedgeStatsServiceStat)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ext_ip")
		delete(additionalProperties, "last_seen")
		delete(additionalProperties, "package_state")
		delete(additionalProperties, "package_version")
		delete(additionalProperties, "running_state")
		delete(additionalProperties, "uptime")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMxedgeStatsServiceStat struct {
	value *MxedgeStatsServiceStat
	isSet bool
}

func (v NullableMxedgeStatsServiceStat) Get() *MxedgeStatsServiceStat {
	return v.value
}

func (v *NullableMxedgeStatsServiceStat) Set(val *MxedgeStatsServiceStat) {
	v.value = val
	v.isSet = true
}

func (v NullableMxedgeStatsServiceStat) IsSet() bool {
	return v.isSet
}

func (v *NullableMxedgeStatsServiceStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMxedgeStatsServiceStat(val *MxedgeStatsServiceStat) *NullableMxedgeStatsServiceStat {
	return &NullableMxedgeStatsServiceStat{value: val, isSet: true}
}

func (v NullableMxedgeStatsServiceStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMxedgeStatsServiceStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


