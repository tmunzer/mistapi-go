/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the SleImpactSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SleImpactSummary{}

// SleImpactSummary struct for SleImpactSummary
type SleImpactSummary struct {
	Ap []SleImpactSummaryApItem `json:"ap"`
	Band []SleImpactSummaryBandItem `json:"band"`
	Classifier string `json:"classifier"`
	DeviceOs []SleImpactSummaryDeviceOsItem `json:"device_os"`
	DeviceType []SleImpactSummaryDeviceTypeItem `json:"device_type"`
	End float32 `json:"end"`
	Failure string `json:"failure"`
	Metric string `json:"metric"`
	Start float32 `json:"start"`
	Wlan []SleImpactSummaryWlanItem `json:"wlan"`
	AdditionalProperties map[string]interface{}
}

type _SleImpactSummary SleImpactSummary

// NewSleImpactSummary instantiates a new SleImpactSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSleImpactSummary(ap []SleImpactSummaryApItem, band []SleImpactSummaryBandItem, classifier string, deviceOs []SleImpactSummaryDeviceOsItem, deviceType []SleImpactSummaryDeviceTypeItem, end float32, failure string, metric string, start float32, wlan []SleImpactSummaryWlanItem) *SleImpactSummary {
	this := SleImpactSummary{}
	this.Ap = ap
	this.Band = band
	this.Classifier = classifier
	this.DeviceOs = deviceOs
	this.DeviceType = deviceType
	this.End = end
	this.Failure = failure
	this.Metric = metric
	this.Start = start
	this.Wlan = wlan
	return &this
}

// NewSleImpactSummaryWithDefaults instantiates a new SleImpactSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSleImpactSummaryWithDefaults() *SleImpactSummary {
	this := SleImpactSummary{}
	return &this
}

// GetAp returns the Ap field value
func (o *SleImpactSummary) GetAp() []SleImpactSummaryApItem {
	if o == nil {
		var ret []SleImpactSummaryApItem
		return ret
	}

	return o.Ap
}

// GetApOk returns a tuple with the Ap field value
// and a boolean to check if the value has been set.
func (o *SleImpactSummary) GetApOk() ([]SleImpactSummaryApItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ap, true
}

// SetAp sets field value
func (o *SleImpactSummary) SetAp(v []SleImpactSummaryApItem) {
	o.Ap = v
}

// GetBand returns the Band field value
func (o *SleImpactSummary) GetBand() []SleImpactSummaryBandItem {
	if o == nil {
		var ret []SleImpactSummaryBandItem
		return ret
	}

	return o.Band
}

// GetBandOk returns a tuple with the Band field value
// and a boolean to check if the value has been set.
func (o *SleImpactSummary) GetBandOk() ([]SleImpactSummaryBandItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Band, true
}

// SetBand sets field value
func (o *SleImpactSummary) SetBand(v []SleImpactSummaryBandItem) {
	o.Band = v
}

// GetClassifier returns the Classifier field value
func (o *SleImpactSummary) GetClassifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Classifier
}

// GetClassifierOk returns a tuple with the Classifier field value
// and a boolean to check if the value has been set.
func (o *SleImpactSummary) GetClassifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Classifier, true
}

// SetClassifier sets field value
func (o *SleImpactSummary) SetClassifier(v string) {
	o.Classifier = v
}

// GetDeviceOs returns the DeviceOs field value
func (o *SleImpactSummary) GetDeviceOs() []SleImpactSummaryDeviceOsItem {
	if o == nil {
		var ret []SleImpactSummaryDeviceOsItem
		return ret
	}

	return o.DeviceOs
}

// GetDeviceOsOk returns a tuple with the DeviceOs field value
// and a boolean to check if the value has been set.
func (o *SleImpactSummary) GetDeviceOsOk() ([]SleImpactSummaryDeviceOsItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceOs, true
}

// SetDeviceOs sets field value
func (o *SleImpactSummary) SetDeviceOs(v []SleImpactSummaryDeviceOsItem) {
	o.DeviceOs = v
}

// GetDeviceType returns the DeviceType field value
func (o *SleImpactSummary) GetDeviceType() []SleImpactSummaryDeviceTypeItem {
	if o == nil {
		var ret []SleImpactSummaryDeviceTypeItem
		return ret
	}

	return o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value
// and a boolean to check if the value has been set.
func (o *SleImpactSummary) GetDeviceTypeOk() ([]SleImpactSummaryDeviceTypeItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceType, true
}

// SetDeviceType sets field value
func (o *SleImpactSummary) SetDeviceType(v []SleImpactSummaryDeviceTypeItem) {
	o.DeviceType = v
}

// GetEnd returns the End field value
func (o *SleImpactSummary) GetEnd() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *SleImpactSummary) GetEndOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *SleImpactSummary) SetEnd(v float32) {
	o.End = v
}

// GetFailure returns the Failure field value
func (o *SleImpactSummary) GetFailure() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Failure
}

// GetFailureOk returns a tuple with the Failure field value
// and a boolean to check if the value has been set.
func (o *SleImpactSummary) GetFailureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Failure, true
}

// SetFailure sets field value
func (o *SleImpactSummary) SetFailure(v string) {
	o.Failure = v
}

// GetMetric returns the Metric field value
func (o *SleImpactSummary) GetMetric() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Metric
}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
func (o *SleImpactSummary) GetMetricOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metric, true
}

// SetMetric sets field value
func (o *SleImpactSummary) SetMetric(v string) {
	o.Metric = v
}

// GetStart returns the Start field value
func (o *SleImpactSummary) GetStart() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *SleImpactSummary) GetStartOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *SleImpactSummary) SetStart(v float32) {
	o.Start = v
}

// GetWlan returns the Wlan field value
func (o *SleImpactSummary) GetWlan() []SleImpactSummaryWlanItem {
	if o == nil {
		var ret []SleImpactSummaryWlanItem
		return ret
	}

	return o.Wlan
}

// GetWlanOk returns a tuple with the Wlan field value
// and a boolean to check if the value has been set.
func (o *SleImpactSummary) GetWlanOk() ([]SleImpactSummaryWlanItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Wlan, true
}

// SetWlan sets field value
func (o *SleImpactSummary) SetWlan(v []SleImpactSummaryWlanItem) {
	o.Wlan = v
}

func (o SleImpactSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SleImpactSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ap"] = o.Ap
	toSerialize["band"] = o.Band
	toSerialize["classifier"] = o.Classifier
	toSerialize["device_os"] = o.DeviceOs
	toSerialize["device_type"] = o.DeviceType
	toSerialize["end"] = o.End
	toSerialize["failure"] = o.Failure
	toSerialize["metric"] = o.Metric
	toSerialize["start"] = o.Start
	toSerialize["wlan"] = o.Wlan

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SleImpactSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ap",
		"band",
		"classifier",
		"device_os",
		"device_type",
		"end",
		"failure",
		"metric",
		"start",
		"wlan",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSleImpactSummary := _SleImpactSummary{}

	err = json.Unmarshal(data, &varSleImpactSummary)

	if err != nil {
		return err
	}

	*o = SleImpactSummary(varSleImpactSummary)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ap")
		delete(additionalProperties, "band")
		delete(additionalProperties, "classifier")
		delete(additionalProperties, "device_os")
		delete(additionalProperties, "device_type")
		delete(additionalProperties, "end")
		delete(additionalProperties, "failure")
		delete(additionalProperties, "metric")
		delete(additionalProperties, "start")
		delete(additionalProperties, "wlan")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSleImpactSummary struct {
	value *SleImpactSummary
	isSet bool
}

func (v NullableSleImpactSummary) Get() *SleImpactSummary {
	return v.value
}

func (v *NullableSleImpactSummary) Set(val *SleImpactSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableSleImpactSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableSleImpactSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSleImpactSummary(val *SleImpactSummary) *NullableSleImpactSummary {
	return &NullableSleImpactSummary{value: val, isSet: true}
}

func (v NullableSleImpactSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSleImpactSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


