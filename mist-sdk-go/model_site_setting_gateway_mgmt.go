/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the SiteSettingGatewayMgmt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SiteSettingGatewayMgmt{}

// SiteSettingGatewayMgmt Gateway Site settings
type SiteSettingGatewayMgmt struct {
	// for SSR only, as direct root access is not allowed
	AdminSshkeys []string `json:"admin_sshkeys,omitempty"`
	AppProbing *AppProbing `json:"app_probing,omitempty"`
	// consumes uplink bandwidth, requires WA license
	AppUsage *bool `json:"app_usage,omitempty"`
	AutoSignatureUpdate *SiteSettingGatewayMgmtAutoSignatureUpdate `json:"auto_signature_update,omitempty"`
	// he rollback timer for commit confirmed
	ConfigRevertTimer *float32 `json:"config_revert_timer,omitempty"`
	ProbeHosts []string `json:"probe_hosts,omitempty"`
	// for SRX only
	RootPassword *string `json:"root_password,omitempty"`
	SecurityLogSourceAddress *string `json:"security_log_source_address,omitempty"`
	SecurityLogSourceInterface *string `json:"security_log_source_interface,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SiteSettingGatewayMgmt SiteSettingGatewayMgmt

// NewSiteSettingGatewayMgmt instantiates a new SiteSettingGatewayMgmt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteSettingGatewayMgmt() *SiteSettingGatewayMgmt {
	this := SiteSettingGatewayMgmt{}
	var configRevertTimer float32 = 10
	this.ConfigRevertTimer = &configRevertTimer
	return &this
}

// NewSiteSettingGatewayMgmtWithDefaults instantiates a new SiteSettingGatewayMgmt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteSettingGatewayMgmtWithDefaults() *SiteSettingGatewayMgmt {
	this := SiteSettingGatewayMgmt{}
	var configRevertTimer float32 = 10
	this.ConfigRevertTimer = &configRevertTimer
	return &this
}

// GetAdminSshkeys returns the AdminSshkeys field value if set, zero value otherwise.
func (o *SiteSettingGatewayMgmt) GetAdminSshkeys() []string {
	if o == nil || IsNil(o.AdminSshkeys) {
		var ret []string
		return ret
	}
	return o.AdminSshkeys
}

// GetAdminSshkeysOk returns a tuple with the AdminSshkeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteSettingGatewayMgmt) GetAdminSshkeysOk() ([]string, bool) {
	if o == nil || IsNil(o.AdminSshkeys) {
		return nil, false
	}
	return o.AdminSshkeys, true
}

// HasAdminSshkeys returns a boolean if a field has been set.
func (o *SiteSettingGatewayMgmt) HasAdminSshkeys() bool {
	if o != nil && !IsNil(o.AdminSshkeys) {
		return true
	}

	return false
}

// SetAdminSshkeys gets a reference to the given []string and assigns it to the AdminSshkeys field.
func (o *SiteSettingGatewayMgmt) SetAdminSshkeys(v []string) {
	o.AdminSshkeys = v
}

// GetAppProbing returns the AppProbing field value if set, zero value otherwise.
func (o *SiteSettingGatewayMgmt) GetAppProbing() AppProbing {
	if o == nil || IsNil(o.AppProbing) {
		var ret AppProbing
		return ret
	}
	return *o.AppProbing
}

// GetAppProbingOk returns a tuple with the AppProbing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteSettingGatewayMgmt) GetAppProbingOk() (*AppProbing, bool) {
	if o == nil || IsNil(o.AppProbing) {
		return nil, false
	}
	return o.AppProbing, true
}

// HasAppProbing returns a boolean if a field has been set.
func (o *SiteSettingGatewayMgmt) HasAppProbing() bool {
	if o != nil && !IsNil(o.AppProbing) {
		return true
	}

	return false
}

// SetAppProbing gets a reference to the given AppProbing and assigns it to the AppProbing field.
func (o *SiteSettingGatewayMgmt) SetAppProbing(v AppProbing) {
	o.AppProbing = &v
}

// GetAppUsage returns the AppUsage field value if set, zero value otherwise.
func (o *SiteSettingGatewayMgmt) GetAppUsage() bool {
	if o == nil || IsNil(o.AppUsage) {
		var ret bool
		return ret
	}
	return *o.AppUsage
}

// GetAppUsageOk returns a tuple with the AppUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteSettingGatewayMgmt) GetAppUsageOk() (*bool, bool) {
	if o == nil || IsNil(o.AppUsage) {
		return nil, false
	}
	return o.AppUsage, true
}

// HasAppUsage returns a boolean if a field has been set.
func (o *SiteSettingGatewayMgmt) HasAppUsage() bool {
	if o != nil && !IsNil(o.AppUsage) {
		return true
	}

	return false
}

// SetAppUsage gets a reference to the given bool and assigns it to the AppUsage field.
func (o *SiteSettingGatewayMgmt) SetAppUsage(v bool) {
	o.AppUsage = &v
}

// GetAutoSignatureUpdate returns the AutoSignatureUpdate field value if set, zero value otherwise.
func (o *SiteSettingGatewayMgmt) GetAutoSignatureUpdate() SiteSettingGatewayMgmtAutoSignatureUpdate {
	if o == nil || IsNil(o.AutoSignatureUpdate) {
		var ret SiteSettingGatewayMgmtAutoSignatureUpdate
		return ret
	}
	return *o.AutoSignatureUpdate
}

// GetAutoSignatureUpdateOk returns a tuple with the AutoSignatureUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteSettingGatewayMgmt) GetAutoSignatureUpdateOk() (*SiteSettingGatewayMgmtAutoSignatureUpdate, bool) {
	if o == nil || IsNil(o.AutoSignatureUpdate) {
		return nil, false
	}
	return o.AutoSignatureUpdate, true
}

// HasAutoSignatureUpdate returns a boolean if a field has been set.
func (o *SiteSettingGatewayMgmt) HasAutoSignatureUpdate() bool {
	if o != nil && !IsNil(o.AutoSignatureUpdate) {
		return true
	}

	return false
}

// SetAutoSignatureUpdate gets a reference to the given SiteSettingGatewayMgmtAutoSignatureUpdate and assigns it to the AutoSignatureUpdate field.
func (o *SiteSettingGatewayMgmt) SetAutoSignatureUpdate(v SiteSettingGatewayMgmtAutoSignatureUpdate) {
	o.AutoSignatureUpdate = &v
}

// GetConfigRevertTimer returns the ConfigRevertTimer field value if set, zero value otherwise.
func (o *SiteSettingGatewayMgmt) GetConfigRevertTimer() float32 {
	if o == nil || IsNil(o.ConfigRevertTimer) {
		var ret float32
		return ret
	}
	return *o.ConfigRevertTimer
}

// GetConfigRevertTimerOk returns a tuple with the ConfigRevertTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteSettingGatewayMgmt) GetConfigRevertTimerOk() (*float32, bool) {
	if o == nil || IsNil(o.ConfigRevertTimer) {
		return nil, false
	}
	return o.ConfigRevertTimer, true
}

// HasConfigRevertTimer returns a boolean if a field has been set.
func (o *SiteSettingGatewayMgmt) HasConfigRevertTimer() bool {
	if o != nil && !IsNil(o.ConfigRevertTimer) {
		return true
	}

	return false
}

// SetConfigRevertTimer gets a reference to the given float32 and assigns it to the ConfigRevertTimer field.
func (o *SiteSettingGatewayMgmt) SetConfigRevertTimer(v float32) {
	o.ConfigRevertTimer = &v
}

// GetProbeHosts returns the ProbeHosts field value if set, zero value otherwise.
func (o *SiteSettingGatewayMgmt) GetProbeHosts() []string {
	if o == nil || IsNil(o.ProbeHosts) {
		var ret []string
		return ret
	}
	return o.ProbeHosts
}

// GetProbeHostsOk returns a tuple with the ProbeHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteSettingGatewayMgmt) GetProbeHostsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProbeHosts) {
		return nil, false
	}
	return o.ProbeHosts, true
}

// HasProbeHosts returns a boolean if a field has been set.
func (o *SiteSettingGatewayMgmt) HasProbeHosts() bool {
	if o != nil && !IsNil(o.ProbeHosts) {
		return true
	}

	return false
}

// SetProbeHosts gets a reference to the given []string and assigns it to the ProbeHosts field.
func (o *SiteSettingGatewayMgmt) SetProbeHosts(v []string) {
	o.ProbeHosts = v
}

// GetRootPassword returns the RootPassword field value if set, zero value otherwise.
func (o *SiteSettingGatewayMgmt) GetRootPassword() string {
	if o == nil || IsNil(o.RootPassword) {
		var ret string
		return ret
	}
	return *o.RootPassword
}

// GetRootPasswordOk returns a tuple with the RootPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteSettingGatewayMgmt) GetRootPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.RootPassword) {
		return nil, false
	}
	return o.RootPassword, true
}

// HasRootPassword returns a boolean if a field has been set.
func (o *SiteSettingGatewayMgmt) HasRootPassword() bool {
	if o != nil && !IsNil(o.RootPassword) {
		return true
	}

	return false
}

// SetRootPassword gets a reference to the given string and assigns it to the RootPassword field.
func (o *SiteSettingGatewayMgmt) SetRootPassword(v string) {
	o.RootPassword = &v
}

// GetSecurityLogSourceAddress returns the SecurityLogSourceAddress field value if set, zero value otherwise.
func (o *SiteSettingGatewayMgmt) GetSecurityLogSourceAddress() string {
	if o == nil || IsNil(o.SecurityLogSourceAddress) {
		var ret string
		return ret
	}
	return *o.SecurityLogSourceAddress
}

// GetSecurityLogSourceAddressOk returns a tuple with the SecurityLogSourceAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteSettingGatewayMgmt) GetSecurityLogSourceAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityLogSourceAddress) {
		return nil, false
	}
	return o.SecurityLogSourceAddress, true
}

// HasSecurityLogSourceAddress returns a boolean if a field has been set.
func (o *SiteSettingGatewayMgmt) HasSecurityLogSourceAddress() bool {
	if o != nil && !IsNil(o.SecurityLogSourceAddress) {
		return true
	}

	return false
}

// SetSecurityLogSourceAddress gets a reference to the given string and assigns it to the SecurityLogSourceAddress field.
func (o *SiteSettingGatewayMgmt) SetSecurityLogSourceAddress(v string) {
	o.SecurityLogSourceAddress = &v
}

// GetSecurityLogSourceInterface returns the SecurityLogSourceInterface field value if set, zero value otherwise.
func (o *SiteSettingGatewayMgmt) GetSecurityLogSourceInterface() string {
	if o == nil || IsNil(o.SecurityLogSourceInterface) {
		var ret string
		return ret
	}
	return *o.SecurityLogSourceInterface
}

// GetSecurityLogSourceInterfaceOk returns a tuple with the SecurityLogSourceInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteSettingGatewayMgmt) GetSecurityLogSourceInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityLogSourceInterface) {
		return nil, false
	}
	return o.SecurityLogSourceInterface, true
}

// HasSecurityLogSourceInterface returns a boolean if a field has been set.
func (o *SiteSettingGatewayMgmt) HasSecurityLogSourceInterface() bool {
	if o != nil && !IsNil(o.SecurityLogSourceInterface) {
		return true
	}

	return false
}

// SetSecurityLogSourceInterface gets a reference to the given string and assigns it to the SecurityLogSourceInterface field.
func (o *SiteSettingGatewayMgmt) SetSecurityLogSourceInterface(v string) {
	o.SecurityLogSourceInterface = &v
}

func (o SiteSettingGatewayMgmt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SiteSettingGatewayMgmt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminSshkeys) {
		toSerialize["admin_sshkeys"] = o.AdminSshkeys
	}
	if !IsNil(o.AppProbing) {
		toSerialize["app_probing"] = o.AppProbing
	}
	if !IsNil(o.AppUsage) {
		toSerialize["app_usage"] = o.AppUsage
	}
	if !IsNil(o.AutoSignatureUpdate) {
		toSerialize["auto_signature_update"] = o.AutoSignatureUpdate
	}
	if !IsNil(o.ConfigRevertTimer) {
		toSerialize["config_revert_timer"] = o.ConfigRevertTimer
	}
	if !IsNil(o.ProbeHosts) {
		toSerialize["probe_hosts"] = o.ProbeHosts
	}
	if !IsNil(o.RootPassword) {
		toSerialize["root_password"] = o.RootPassword
	}
	if !IsNil(o.SecurityLogSourceAddress) {
		toSerialize["security_log_source_address"] = o.SecurityLogSourceAddress
	}
	if !IsNil(o.SecurityLogSourceInterface) {
		toSerialize["security_log_source_interface"] = o.SecurityLogSourceInterface
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SiteSettingGatewayMgmt) UnmarshalJSON(data []byte) (err error) {
	varSiteSettingGatewayMgmt := _SiteSettingGatewayMgmt{}

	err = json.Unmarshal(data, &varSiteSettingGatewayMgmt)

	if err != nil {
		return err
	}

	*o = SiteSettingGatewayMgmt(varSiteSettingGatewayMgmt)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "admin_sshkeys")
		delete(additionalProperties, "app_probing")
		delete(additionalProperties, "app_usage")
		delete(additionalProperties, "auto_signature_update")
		delete(additionalProperties, "config_revert_timer")
		delete(additionalProperties, "probe_hosts")
		delete(additionalProperties, "root_password")
		delete(additionalProperties, "security_log_source_address")
		delete(additionalProperties, "security_log_source_interface")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSiteSettingGatewayMgmt struct {
	value *SiteSettingGatewayMgmt
	isSet bool
}

func (v NullableSiteSettingGatewayMgmt) Get() *SiteSettingGatewayMgmt {
	return v.value
}

func (v *NullableSiteSettingGatewayMgmt) Set(val *SiteSettingGatewayMgmt) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteSettingGatewayMgmt) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteSettingGatewayMgmt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteSettingGatewayMgmt(val *SiteSettingGatewayMgmt) *NullableSiteSettingGatewayMgmt {
	return &NullableSiteSettingGatewayMgmt{value: val, isSet: true}
}

func (v NullableSiteSettingGatewayMgmt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteSettingGatewayMgmt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


