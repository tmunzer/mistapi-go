/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the OrgStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgStats{}

// OrgStats Org statistics
type OrgStats struct {
	AlarmtemplateId string `json:"alarmtemplate_id"`
	AllowMist bool `json:"allow_mist"`
	CreatedTime float32 `json:"created_time"`
	Id string `json:"id"`
	ModifiedTime float32 `json:"modified_time"`
	MspId string `json:"msp_id"`
	Name string `json:"name"`
	NumDevices int32 `json:"num_devices"`
	NumDevicesConnected int32 `json:"num_devices_connected"`
	NumDevicesDisconnected int32 `json:"num_devices_disconnected"`
	NumInventory int32 `json:"num_inventory"`
	NumSites int32 `json:"num_sites"`
	OrggroupIds []string `json:"orggroup_ids"`
	SessionExpiry int32 `json:"session_expiry"`
	Sle []OrgSleStat `json:"sle"`
	AdditionalProperties map[string]interface{}
}

type _OrgStats OrgStats

// NewOrgStats instantiates a new OrgStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgStats(alarmtemplateId string, allowMist bool, createdTime float32, id string, modifiedTime float32, mspId string, name string, numDevices int32, numDevicesConnected int32, numDevicesDisconnected int32, numInventory int32, numSites int32, orggroupIds []string, sessionExpiry int32, sle []OrgSleStat) *OrgStats {
	this := OrgStats{}
	this.AlarmtemplateId = alarmtemplateId
	this.AllowMist = allowMist
	this.CreatedTime = createdTime
	this.Id = id
	this.ModifiedTime = modifiedTime
	this.MspId = mspId
	this.Name = name
	this.NumDevices = numDevices
	this.NumDevicesConnected = numDevicesConnected
	this.NumDevicesDisconnected = numDevicesDisconnected
	this.NumInventory = numInventory
	this.NumSites = numSites
	this.OrggroupIds = orggroupIds
	this.SessionExpiry = sessionExpiry
	this.Sle = sle
	return &this
}

// NewOrgStatsWithDefaults instantiates a new OrgStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgStatsWithDefaults() *OrgStats {
	this := OrgStats{}
	return &this
}

// GetAlarmtemplateId returns the AlarmtemplateId field value
func (o *OrgStats) GetAlarmtemplateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlarmtemplateId
}

// GetAlarmtemplateIdOk returns a tuple with the AlarmtemplateId field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetAlarmtemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlarmtemplateId, true
}

// SetAlarmtemplateId sets field value
func (o *OrgStats) SetAlarmtemplateId(v string) {
	o.AlarmtemplateId = v
}

// GetAllowMist returns the AllowMist field value
func (o *OrgStats) GetAllowMist() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowMist
}

// GetAllowMistOk returns a tuple with the AllowMist field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetAllowMistOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowMist, true
}

// SetAllowMist sets field value
func (o *OrgStats) SetAllowMist(v bool) {
	o.AllowMist = v
}

// GetCreatedTime returns the CreatedTime field value
func (o *OrgStats) GetCreatedTime() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetCreatedTimeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *OrgStats) SetCreatedTime(v float32) {
	o.CreatedTime = v
}

// GetId returns the Id field value
func (o *OrgStats) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrgStats) SetId(v string) {
	o.Id = v
}

// GetModifiedTime returns the ModifiedTime field value
func (o *OrgStats) GetModifiedTime() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ModifiedTime
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetModifiedTimeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedTime, true
}

// SetModifiedTime sets field value
func (o *OrgStats) SetModifiedTime(v float32) {
	o.ModifiedTime = v
}

// GetMspId returns the MspId field value
func (o *OrgStats) GetMspId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MspId
}

// GetMspIdOk returns a tuple with the MspId field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetMspIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MspId, true
}

// SetMspId sets field value
func (o *OrgStats) SetMspId(v string) {
	o.MspId = v
}

// GetName returns the Name field value
func (o *OrgStats) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OrgStats) SetName(v string) {
	o.Name = v
}

// GetNumDevices returns the NumDevices field value
func (o *OrgStats) GetNumDevices() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumDevices
}

// GetNumDevicesOk returns a tuple with the NumDevices field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetNumDevicesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumDevices, true
}

// SetNumDevices sets field value
func (o *OrgStats) SetNumDevices(v int32) {
	o.NumDevices = v
}

// GetNumDevicesConnected returns the NumDevicesConnected field value
func (o *OrgStats) GetNumDevicesConnected() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumDevicesConnected
}

// GetNumDevicesConnectedOk returns a tuple with the NumDevicesConnected field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetNumDevicesConnectedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumDevicesConnected, true
}

// SetNumDevicesConnected sets field value
func (o *OrgStats) SetNumDevicesConnected(v int32) {
	o.NumDevicesConnected = v
}

// GetNumDevicesDisconnected returns the NumDevicesDisconnected field value
func (o *OrgStats) GetNumDevicesDisconnected() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumDevicesDisconnected
}

// GetNumDevicesDisconnectedOk returns a tuple with the NumDevicesDisconnected field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetNumDevicesDisconnectedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumDevicesDisconnected, true
}

// SetNumDevicesDisconnected sets field value
func (o *OrgStats) SetNumDevicesDisconnected(v int32) {
	o.NumDevicesDisconnected = v
}

// GetNumInventory returns the NumInventory field value
func (o *OrgStats) GetNumInventory() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumInventory
}

// GetNumInventoryOk returns a tuple with the NumInventory field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetNumInventoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumInventory, true
}

// SetNumInventory sets field value
func (o *OrgStats) SetNumInventory(v int32) {
	o.NumInventory = v
}

// GetNumSites returns the NumSites field value
func (o *OrgStats) GetNumSites() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumSites
}

// GetNumSitesOk returns a tuple with the NumSites field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetNumSitesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumSites, true
}

// SetNumSites sets field value
func (o *OrgStats) SetNumSites(v int32) {
	o.NumSites = v
}

// GetOrggroupIds returns the OrggroupIds field value
func (o *OrgStats) GetOrggroupIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.OrggroupIds
}

// GetOrggroupIdsOk returns a tuple with the OrggroupIds field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetOrggroupIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrggroupIds, true
}

// SetOrggroupIds sets field value
func (o *OrgStats) SetOrggroupIds(v []string) {
	o.OrggroupIds = v
}

// GetSessionExpiry returns the SessionExpiry field value
func (o *OrgStats) GetSessionExpiry() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SessionExpiry
}

// GetSessionExpiryOk returns a tuple with the SessionExpiry field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetSessionExpiryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionExpiry, true
}

// SetSessionExpiry sets field value
func (o *OrgStats) SetSessionExpiry(v int32) {
	o.SessionExpiry = v
}

// GetSle returns the Sle field value
func (o *OrgStats) GetSle() []OrgSleStat {
	if o == nil {
		var ret []OrgSleStat
		return ret
	}

	return o.Sle
}

// GetSleOk returns a tuple with the Sle field value
// and a boolean to check if the value has been set.
func (o *OrgStats) GetSleOk() ([]OrgSleStat, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sle, true
}

// SetSle sets field value
func (o *OrgStats) SetSle(v []OrgSleStat) {
	o.Sle = v
}

func (o OrgStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alarmtemplate_id"] = o.AlarmtemplateId
	toSerialize["allow_mist"] = o.AllowMist
	toSerialize["created_time"] = o.CreatedTime
	toSerialize["id"] = o.Id
	toSerialize["modified_time"] = o.ModifiedTime
	toSerialize["msp_id"] = o.MspId
	toSerialize["name"] = o.Name
	toSerialize["num_devices"] = o.NumDevices
	toSerialize["num_devices_connected"] = o.NumDevicesConnected
	toSerialize["num_devices_disconnected"] = o.NumDevicesDisconnected
	toSerialize["num_inventory"] = o.NumInventory
	toSerialize["num_sites"] = o.NumSites
	toSerialize["orggroup_ids"] = o.OrggroupIds
	toSerialize["session_expiry"] = o.SessionExpiry
	toSerialize["sle"] = o.Sle

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrgStats) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alarmtemplate_id",
		"allow_mist",
		"created_time",
		"id",
		"modified_time",
		"msp_id",
		"name",
		"num_devices",
		"num_devices_connected",
		"num_devices_disconnected",
		"num_inventory",
		"num_sites",
		"orggroup_ids",
		"session_expiry",
		"sle",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrgStats := _OrgStats{}

	err = json.Unmarshal(data, &varOrgStats)

	if err != nil {
		return err
	}

	*o = OrgStats(varOrgStats)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "alarmtemplate_id")
		delete(additionalProperties, "allow_mist")
		delete(additionalProperties, "created_time")
		delete(additionalProperties, "id")
		delete(additionalProperties, "modified_time")
		delete(additionalProperties, "msp_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "num_devices")
		delete(additionalProperties, "num_devices_connected")
		delete(additionalProperties, "num_devices_disconnected")
		delete(additionalProperties, "num_inventory")
		delete(additionalProperties, "num_sites")
		delete(additionalProperties, "orggroup_ids")
		delete(additionalProperties, "session_expiry")
		delete(additionalProperties, "sle")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrgStats struct {
	value *OrgStats
	isSet bool
}

func (v NullableOrgStats) Get() *OrgStats {
	return v.value
}

func (v *NullableOrgStats) Set(val *OrgStats) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgStats) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgStats(val *OrgStats) *NullableOrgStats {
	return &NullableOrgStats{value: val, isSet: true}
}

func (v NullableOrgStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


