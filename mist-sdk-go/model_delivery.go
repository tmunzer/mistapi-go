/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the Delivery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Delivery{}

// Delivery Delivery object to configure the alarm delivery
type Delivery struct {
	// List of additional email string to deliver the alarms via emails
	AdditionalEmails []string `json:"additional_emails,omitempty"`
	// Whether to enable the alarm delivery via emails or not
	Enabled bool `json:"enabled"`
	// Whether to deliver the alarms via emails to Org admins or not
	ToOrgAdmins *bool `json:"to_org_admins,omitempty"`
	// Whether to deliver the alarms via emails to Site admins or not
	ToSiteAdmins *bool `json:"to_site_admins,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Delivery Delivery

// NewDelivery instantiates a new Delivery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDelivery(enabled bool) *Delivery {
	this := Delivery{}
	this.Enabled = enabled
	return &this
}

// NewDeliveryWithDefaults instantiates a new Delivery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryWithDefaults() *Delivery {
	this := Delivery{}
	return &this
}

// GetAdditionalEmails returns the AdditionalEmails field value if set, zero value otherwise.
func (o *Delivery) GetAdditionalEmails() []string {
	if o == nil || IsNil(o.AdditionalEmails) {
		var ret []string
		return ret
	}
	return o.AdditionalEmails
}

// GetAdditionalEmailsOk returns a tuple with the AdditionalEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Delivery) GetAdditionalEmailsOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalEmails) {
		return nil, false
	}
	return o.AdditionalEmails, true
}

// HasAdditionalEmails returns a boolean if a field has been set.
func (o *Delivery) HasAdditionalEmails() bool {
	if o != nil && !IsNil(o.AdditionalEmails) {
		return true
	}

	return false
}

// SetAdditionalEmails gets a reference to the given []string and assigns it to the AdditionalEmails field.
func (o *Delivery) SetAdditionalEmails(v []string) {
	o.AdditionalEmails = v
}

// GetEnabled returns the Enabled field value
func (o *Delivery) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *Delivery) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *Delivery) SetEnabled(v bool) {
	o.Enabled = v
}

// GetToOrgAdmins returns the ToOrgAdmins field value if set, zero value otherwise.
func (o *Delivery) GetToOrgAdmins() bool {
	if o == nil || IsNil(o.ToOrgAdmins) {
		var ret bool
		return ret
	}
	return *o.ToOrgAdmins
}

// GetToOrgAdminsOk returns a tuple with the ToOrgAdmins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Delivery) GetToOrgAdminsOk() (*bool, bool) {
	if o == nil || IsNil(o.ToOrgAdmins) {
		return nil, false
	}
	return o.ToOrgAdmins, true
}

// HasToOrgAdmins returns a boolean if a field has been set.
func (o *Delivery) HasToOrgAdmins() bool {
	if o != nil && !IsNil(o.ToOrgAdmins) {
		return true
	}

	return false
}

// SetToOrgAdmins gets a reference to the given bool and assigns it to the ToOrgAdmins field.
func (o *Delivery) SetToOrgAdmins(v bool) {
	o.ToOrgAdmins = &v
}

// GetToSiteAdmins returns the ToSiteAdmins field value if set, zero value otherwise.
func (o *Delivery) GetToSiteAdmins() bool {
	if o == nil || IsNil(o.ToSiteAdmins) {
		var ret bool
		return ret
	}
	return *o.ToSiteAdmins
}

// GetToSiteAdminsOk returns a tuple with the ToSiteAdmins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Delivery) GetToSiteAdminsOk() (*bool, bool) {
	if o == nil || IsNil(o.ToSiteAdmins) {
		return nil, false
	}
	return o.ToSiteAdmins, true
}

// HasToSiteAdmins returns a boolean if a field has been set.
func (o *Delivery) HasToSiteAdmins() bool {
	if o != nil && !IsNil(o.ToSiteAdmins) {
		return true
	}

	return false
}

// SetToSiteAdmins gets a reference to the given bool and assigns it to the ToSiteAdmins field.
func (o *Delivery) SetToSiteAdmins(v bool) {
	o.ToSiteAdmins = &v
}

func (o Delivery) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Delivery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalEmails) {
		toSerialize["additional_emails"] = o.AdditionalEmails
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.ToOrgAdmins) {
		toSerialize["to_org_admins"] = o.ToOrgAdmins
	}
	if !IsNil(o.ToSiteAdmins) {
		toSerialize["to_site_admins"] = o.ToSiteAdmins
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Delivery) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"enabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDelivery := _Delivery{}

	err = json.Unmarshal(data, &varDelivery)

	if err != nil {
		return err
	}

	*o = Delivery(varDelivery)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "additional_emails")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "to_org_admins")
		delete(additionalProperties, "to_site_admins")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDelivery struct {
	value *Delivery
	isSet bool
}

func (v NullableDelivery) Get() *Delivery {
	return v.value
}

func (v *NullableDelivery) Set(val *Delivery) {
	v.value = val
	v.isSet = true
}

func (v NullableDelivery) IsSet() bool {
	return v.isSet
}

func (v *NullableDelivery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDelivery(val *Delivery) *NullableDelivery {
	return &NullableDelivery{value: val, isSet: true}
}

func (v NullableDelivery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDelivery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


