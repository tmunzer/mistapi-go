/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the MlOverwriteAdditionalProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MlOverwriteAdditionalProperties{}

// MlOverwriteAdditionalProperties struct for MlOverwriteAdditionalProperties
type MlOverwriteAdditionalProperties struct {
	Int *int32 `json:"int,omitempty"`
	Ple *int32 `json:"ple,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MlOverwriteAdditionalProperties MlOverwriteAdditionalProperties

// NewMlOverwriteAdditionalProperties instantiates a new MlOverwriteAdditionalProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMlOverwriteAdditionalProperties() *MlOverwriteAdditionalProperties {
	this := MlOverwriteAdditionalProperties{}
	return &this
}

// NewMlOverwriteAdditionalPropertiesWithDefaults instantiates a new MlOverwriteAdditionalProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMlOverwriteAdditionalPropertiesWithDefaults() *MlOverwriteAdditionalProperties {
	this := MlOverwriteAdditionalProperties{}
	return &this
}

// GetInt returns the Int field value if set, zero value otherwise.
func (o *MlOverwriteAdditionalProperties) GetInt() int32 {
	if o == nil || IsNil(o.Int) {
		var ret int32
		return ret
	}
	return *o.Int
}

// GetIntOk returns a tuple with the Int field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlOverwriteAdditionalProperties) GetIntOk() (*int32, bool) {
	if o == nil || IsNil(o.Int) {
		return nil, false
	}
	return o.Int, true
}

// HasInt returns a boolean if a field has been set.
func (o *MlOverwriteAdditionalProperties) HasInt() bool {
	if o != nil && !IsNil(o.Int) {
		return true
	}

	return false
}

// SetInt gets a reference to the given int32 and assigns it to the Int field.
func (o *MlOverwriteAdditionalProperties) SetInt(v int32) {
	o.Int = &v
}

// GetPle returns the Ple field value if set, zero value otherwise.
func (o *MlOverwriteAdditionalProperties) GetPle() int32 {
	if o == nil || IsNil(o.Ple) {
		var ret int32
		return ret
	}
	return *o.Ple
}

// GetPleOk returns a tuple with the Ple field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlOverwriteAdditionalProperties) GetPleOk() (*int32, bool) {
	if o == nil || IsNil(o.Ple) {
		return nil, false
	}
	return o.Ple, true
}

// HasPle returns a boolean if a field has been set.
func (o *MlOverwriteAdditionalProperties) HasPle() bool {
	if o != nil && !IsNil(o.Ple) {
		return true
	}

	return false
}

// SetPle gets a reference to the given int32 and assigns it to the Ple field.
func (o *MlOverwriteAdditionalProperties) SetPle(v int32) {
	o.Ple = &v
}

func (o MlOverwriteAdditionalProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MlOverwriteAdditionalProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Int) {
		toSerialize["int"] = o.Int
	}
	if !IsNil(o.Ple) {
		toSerialize["ple"] = o.Ple
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MlOverwriteAdditionalProperties) UnmarshalJSON(data []byte) (err error) {
	varMlOverwriteAdditionalProperties := _MlOverwriteAdditionalProperties{}

	err = json.Unmarshal(data, &varMlOverwriteAdditionalProperties)

	if err != nil {
		return err
	}

	*o = MlOverwriteAdditionalProperties(varMlOverwriteAdditionalProperties)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "int")
		delete(additionalProperties, "ple")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMlOverwriteAdditionalProperties struct {
	value *MlOverwriteAdditionalProperties
	isSet bool
}

func (v NullableMlOverwriteAdditionalProperties) Get() *MlOverwriteAdditionalProperties {
	return v.value
}

func (v *NullableMlOverwriteAdditionalProperties) Set(val *MlOverwriteAdditionalProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableMlOverwriteAdditionalProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableMlOverwriteAdditionalProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMlOverwriteAdditionalProperties(val *MlOverwriteAdditionalProperties) *NullableMlOverwriteAdditionalProperties {
	return &NullableMlOverwriteAdditionalProperties{value: val, isSet: true}
}

func (v NullableMlOverwriteAdditionalProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMlOverwriteAdditionalProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


