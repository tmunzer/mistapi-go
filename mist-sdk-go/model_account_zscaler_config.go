/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the AccountZscalerConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountZscalerConfig{}

// AccountZscalerConfig OAuth linked Zscaler apps account details
type AccountZscalerConfig struct {
	CloudName string `json:"cloud_name"`
	PartnerKey string `json:"partner_key"`
	// customer account password
	Password string `json:"password"`
	// customer account user name
	Username string `json:"username"`
	AdditionalProperties map[string]interface{}
}

type _AccountZscalerConfig AccountZscalerConfig

// NewAccountZscalerConfig instantiates a new AccountZscalerConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountZscalerConfig(cloudName string, partnerKey string, password string, username string) *AccountZscalerConfig {
	this := AccountZscalerConfig{}
	this.CloudName = cloudName
	this.PartnerKey = partnerKey
	this.Password = password
	this.Username = username
	return &this
}

// NewAccountZscalerConfigWithDefaults instantiates a new AccountZscalerConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountZscalerConfigWithDefaults() *AccountZscalerConfig {
	this := AccountZscalerConfig{}
	return &this
}

// GetCloudName returns the CloudName field value
func (o *AccountZscalerConfig) GetCloudName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudName
}

// GetCloudNameOk returns a tuple with the CloudName field value
// and a boolean to check if the value has been set.
func (o *AccountZscalerConfig) GetCloudNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudName, true
}

// SetCloudName sets field value
func (o *AccountZscalerConfig) SetCloudName(v string) {
	o.CloudName = v
}

// GetPartnerKey returns the PartnerKey field value
func (o *AccountZscalerConfig) GetPartnerKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartnerKey
}

// GetPartnerKeyOk returns a tuple with the PartnerKey field value
// and a boolean to check if the value has been set.
func (o *AccountZscalerConfig) GetPartnerKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartnerKey, true
}

// SetPartnerKey sets field value
func (o *AccountZscalerConfig) SetPartnerKey(v string) {
	o.PartnerKey = v
}

// GetPassword returns the Password field value
func (o *AccountZscalerConfig) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *AccountZscalerConfig) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *AccountZscalerConfig) SetPassword(v string) {
	o.Password = v
}

// GetUsername returns the Username field value
func (o *AccountZscalerConfig) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *AccountZscalerConfig) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *AccountZscalerConfig) SetUsername(v string) {
	o.Username = v
}

func (o AccountZscalerConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountZscalerConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloud_name"] = o.CloudName
	toSerialize["partner_key"] = o.PartnerKey
	toSerialize["password"] = o.Password
	toSerialize["username"] = o.Username

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountZscalerConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloud_name",
		"partner_key",
		"password",
		"username",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountZscalerConfig := _AccountZscalerConfig{}

	err = json.Unmarshal(data, &varAccountZscalerConfig)

	if err != nil {
		return err
	}

	*o = AccountZscalerConfig(varAccountZscalerConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cloud_name")
		delete(additionalProperties, "partner_key")
		delete(additionalProperties, "password")
		delete(additionalProperties, "username")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountZscalerConfig struct {
	value *AccountZscalerConfig
	isSet bool
}

func (v NullableAccountZscalerConfig) Get() *AccountZscalerConfig {
	return v.value
}

func (v *NullableAccountZscalerConfig) Set(val *AccountZscalerConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountZscalerConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountZscalerConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountZscalerConfig(val *AccountZscalerConfig) *NullableAccountZscalerConfig {
	return &NullableAccountZscalerConfig{value: val, isSet: true}
}

func (v NullableAccountZscalerConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountZscalerConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


