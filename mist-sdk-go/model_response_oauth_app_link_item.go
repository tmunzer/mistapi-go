/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// ResponseOauthAppLinkItem struct for ResponseOauthAppLinkItem
type ResponseOauthAppLinkItem struct {
	AccountJamfInfo *AccountJamfInfo
	AccountOauthInfo *AccountOauthInfo
	AccountVmwareInfo *AccountVmwareInfo
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ResponseOauthAppLinkItem) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into AccountJamfInfo
	err = json.Unmarshal(data, &dst.AccountJamfInfo);
	if err == nil {
		jsonAccountJamfInfo, _ := json.Marshal(dst.AccountJamfInfo)
		if string(jsonAccountJamfInfo) == "{}" { // empty struct
			dst.AccountJamfInfo = nil
		} else {
			return nil // data stored in dst.AccountJamfInfo, return on the first match
		}
	} else {
		dst.AccountJamfInfo = nil
	}

	// try to unmarshal JSON data into AccountOauthInfo
	err = json.Unmarshal(data, &dst.AccountOauthInfo);
	if err == nil {
		jsonAccountOauthInfo, _ := json.Marshal(dst.AccountOauthInfo)
		if string(jsonAccountOauthInfo) == "{}" { // empty struct
			dst.AccountOauthInfo = nil
		} else {
			return nil // data stored in dst.AccountOauthInfo, return on the first match
		}
	} else {
		dst.AccountOauthInfo = nil
	}

	// try to unmarshal JSON data into AccountVmwareInfo
	err = json.Unmarshal(data, &dst.AccountVmwareInfo);
	if err == nil {
		jsonAccountVmwareInfo, _ := json.Marshal(dst.AccountVmwareInfo)
		if string(jsonAccountVmwareInfo) == "{}" { // empty struct
			dst.AccountVmwareInfo = nil
		} else {
			return nil // data stored in dst.AccountVmwareInfo, return on the first match
		}
	} else {
		dst.AccountVmwareInfo = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ResponseOauthAppLinkItem)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ResponseOauthAppLinkItem) MarshalJSON() ([]byte, error) {
	if src.AccountJamfInfo != nil {
		return json.Marshal(&src.AccountJamfInfo)
	}

	if src.AccountOauthInfo != nil {
		return json.Marshal(&src.AccountOauthInfo)
	}

	if src.AccountVmwareInfo != nil {
		return json.Marshal(&src.AccountVmwareInfo)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableResponseOauthAppLinkItem struct {
	value *ResponseOauthAppLinkItem
	isSet bool
}

func (v NullableResponseOauthAppLinkItem) Get() *ResponseOauthAppLinkItem {
	return v.value
}

func (v *NullableResponseOauthAppLinkItem) Set(val *ResponseOauthAppLinkItem) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseOauthAppLinkItem) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseOauthAppLinkItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseOauthAppLinkItem(val *ResponseOauthAppLinkItem) *NullableResponseOauthAppLinkItem {
	return &NullableResponseOauthAppLinkItem{value: val, isSet: true}
}

func (v NullableResponseOauthAppLinkItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseOauthAppLinkItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


