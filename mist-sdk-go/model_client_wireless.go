/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ClientWireless type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientWireless{}

// ClientWireless struct for ClientWireless
type ClientWireless struct {
	// List of AP MAC Addresses the client was connected to
	Ap []string `json:"ap,omitempty"`
	// only when client has the Marvis Client app running. List of the versions of the Marvis Client
	AppVersion []string `json:"app_version,omitempty"`
	// Wi-Fi Radio band
	Band *string `json:"band,omitempty"`
	// only when client has the Marvis Client app running. List of the type of device type detected
	Device []string `json:"device,omitempty"`
	Ftc *bool `json:"ftc,omitempty"`
	// only when client has the Marvis Client app running. Type of Wi-Fi adapter
	Hardware *string `json:"hardware,omitempty"`
	// list of hostname detected for this client
	Hostname []string `json:"hostname,omitempty"`
	// list if the ip addresses detected for this client
	Ip []string `json:"ip,omitempty"`
	// latest AP where the client is/was connected to
	LastAp *string `json:"last_ap,omitempty"`
	// latest type of device we identified (e.g. iPhone, Mac, â€¦)
	LastDevuce *string `json:"last_devuce,omitempty"`
	// only when client has the Marvis Client app running. Same as \"firmware\"
	LastFirmware *string `json:"last_firmware,omitempty"`
	// lastest hostname we detected for the the client
	LastHostname *string `json:"last_hostname,omitempty"`
	// lastest ip address we detected for the client
	LastIp *string `json:"last_ip,omitempty"`
	// only when client has the Marvis Client app running. lastest client hardware model we detected for the client
	LastModel *string `json:"last_model,omitempty"`
	// only when client has the Marvis Client app running. Latest version of OS Type we detected for the client
	LastOs *string `json:"last_os,omitempty"`
	// only when client has the Marvis Client app running. Latest version of OS Version we detected for the client
	LastOsVersion *string `json:"last_os_version,omitempty"`
	// only for PPSK authentication. Latest PPSK ID used by the client
	LastPskId *string `json:"last_psk_id,omitempty"`
	// only for PPSK authentication. Latest PPSK Name used by the client
	LastPskName *string `json:"last_psk_name,omitempty"`
	// only for PPSK authentication. Latest PPSK Name used by the client
	LastSsid *string `json:"last_ssid,omitempty"`
	// only for 802.1X authentifcation. Latest username used by the client
	LastUsername *string `json:"last_username,omitempty"`
	// latest VLAN ID assigned to the client
	LastVlan *int32 `json:"last_vlan,omitempty"`
	// ID of the latest SSID (WLAN) the client is/was connected to
	LastWlanId *string `json:"last_wlan_id,omitempty"`
	// Client MAC Address
	Mac *string `json:"mac,omitempty"`
	// manufacturer of the client hardware (MAC OUI based)
	Mfg *string `json:"mfg,omitempty"`
	// only when client has the Marvis Client app running. Client hardware model
	Model *string `json:"model,omitempty"`
	// Mist Org ID
	OrgId *string `json:"org_id,omitempty"`
	// only when client is having the Marvis Client app running. List of OS detected for the client
	Os []string `json:"os,omitempty"`
	// only when client is having the Marvis Client app running. List of OS version detected for the client
	OsVersion []string `json:"os_version,omitempty"`
	// 802.11 amendmant
	Protocol *string `json:"protocol,omitempty"`
	// list of IDs of the PPSK used by the client
	PskId []string `json:"psk_id,omitempty"`
	// list of names of the PPSK used by the client
	PskName []string `json:"psk_name,omitempty"`
	// whether the client is using randomized MAC Address or not
	RandomMac *bool `json:"random_mac,omitempty"`
	// only when client has the Marvis Client app running. List of Marvis Client SDK version detected for the client
	SdkVersion []string `json:"sdk_version,omitempty"`
	// Mist Site ID where the client is connected
	SiteId *string `json:"site_id,omitempty"`
	// list of Mist Site IDs where the client was connected
	SiteIds []string `json:"site_ids,omitempty"`
	// list of the WLAN names the client was connected to
	Ssid []string `json:"ssid,omitempty"`
	// when the data has been updated
	Timestamp *float32 `json:"timestamp,omitempty"`
	// only for 802.1X authentifcation. List of usernames used by the client
	Username []string `json:"username,omitempty"`
	// list of vlans that have been assigned to the client
	Vlan []int32 `json:"vlan,omitempty"`
	// list of IDs of WLANs the client was connected to
	WlanId []string `json:"wlan_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClientWireless ClientWireless

// NewClientWireless instantiates a new ClientWireless object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientWireless() *ClientWireless {
	this := ClientWireless{}
	return &this
}

// NewClientWirelessWithDefaults instantiates a new ClientWireless object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientWirelessWithDefaults() *ClientWireless {
	this := ClientWireless{}
	return &this
}

// GetAp returns the Ap field value if set, zero value otherwise.
func (o *ClientWireless) GetAp() []string {
	if o == nil || IsNil(o.Ap) {
		var ret []string
		return ret
	}
	return o.Ap
}

// GetApOk returns a tuple with the Ap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetApOk() ([]string, bool) {
	if o == nil || IsNil(o.Ap) {
		return nil, false
	}
	return o.Ap, true
}

// HasAp returns a boolean if a field has been set.
func (o *ClientWireless) HasAp() bool {
	if o != nil && !IsNil(o.Ap) {
		return true
	}

	return false
}

// SetAp gets a reference to the given []string and assigns it to the Ap field.
func (o *ClientWireless) SetAp(v []string) {
	o.Ap = v
}

// GetAppVersion returns the AppVersion field value if set, zero value otherwise.
func (o *ClientWireless) GetAppVersion() []string {
	if o == nil || IsNil(o.AppVersion) {
		var ret []string
		return ret
	}
	return o.AppVersion
}

// GetAppVersionOk returns a tuple with the AppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetAppVersionOk() ([]string, bool) {
	if o == nil || IsNil(o.AppVersion) {
		return nil, false
	}
	return o.AppVersion, true
}

// HasAppVersion returns a boolean if a field has been set.
func (o *ClientWireless) HasAppVersion() bool {
	if o != nil && !IsNil(o.AppVersion) {
		return true
	}

	return false
}

// SetAppVersion gets a reference to the given []string and assigns it to the AppVersion field.
func (o *ClientWireless) SetAppVersion(v []string) {
	o.AppVersion = v
}

// GetBand returns the Band field value if set, zero value otherwise.
func (o *ClientWireless) GetBand() string {
	if o == nil || IsNil(o.Band) {
		var ret string
		return ret
	}
	return *o.Band
}

// GetBandOk returns a tuple with the Band field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetBandOk() (*string, bool) {
	if o == nil || IsNil(o.Band) {
		return nil, false
	}
	return o.Band, true
}

// HasBand returns a boolean if a field has been set.
func (o *ClientWireless) HasBand() bool {
	if o != nil && !IsNil(o.Band) {
		return true
	}

	return false
}

// SetBand gets a reference to the given string and assigns it to the Band field.
func (o *ClientWireless) SetBand(v string) {
	o.Band = &v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *ClientWireless) GetDevice() []string {
	if o == nil || IsNil(o.Device) {
		var ret []string
		return ret
	}
	return o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetDeviceOk() ([]string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *ClientWireless) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given []string and assigns it to the Device field.
func (o *ClientWireless) SetDevice(v []string) {
	o.Device = v
}

// GetFtc returns the Ftc field value if set, zero value otherwise.
func (o *ClientWireless) GetFtc() bool {
	if o == nil || IsNil(o.Ftc) {
		var ret bool
		return ret
	}
	return *o.Ftc
}

// GetFtcOk returns a tuple with the Ftc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetFtcOk() (*bool, bool) {
	if o == nil || IsNil(o.Ftc) {
		return nil, false
	}
	return o.Ftc, true
}

// HasFtc returns a boolean if a field has been set.
func (o *ClientWireless) HasFtc() bool {
	if o != nil && !IsNil(o.Ftc) {
		return true
	}

	return false
}

// SetFtc gets a reference to the given bool and assigns it to the Ftc field.
func (o *ClientWireless) SetFtc(v bool) {
	o.Ftc = &v
}

// GetHardware returns the Hardware field value if set, zero value otherwise.
func (o *ClientWireless) GetHardware() string {
	if o == nil || IsNil(o.Hardware) {
		var ret string
		return ret
	}
	return *o.Hardware
}

// GetHardwareOk returns a tuple with the Hardware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetHardwareOk() (*string, bool) {
	if o == nil || IsNil(o.Hardware) {
		return nil, false
	}
	return o.Hardware, true
}

// HasHardware returns a boolean if a field has been set.
func (o *ClientWireless) HasHardware() bool {
	if o != nil && !IsNil(o.Hardware) {
		return true
	}

	return false
}

// SetHardware gets a reference to the given string and assigns it to the Hardware field.
func (o *ClientWireless) SetHardware(v string) {
	o.Hardware = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *ClientWireless) GetHostname() []string {
	if o == nil || IsNil(o.Hostname) {
		var ret []string
		return ret
	}
	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetHostnameOk() ([]string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *ClientWireless) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given []string and assigns it to the Hostname field.
func (o *ClientWireless) SetHostname(v []string) {
	o.Hostname = v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *ClientWireless) GetIp() []string {
	if o == nil || IsNil(o.Ip) {
		var ret []string
		return ret
	}
	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetIpOk() ([]string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *ClientWireless) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given []string and assigns it to the Ip field.
func (o *ClientWireless) SetIp(v []string) {
	o.Ip = v
}

// GetLastAp returns the LastAp field value if set, zero value otherwise.
func (o *ClientWireless) GetLastAp() string {
	if o == nil || IsNil(o.LastAp) {
		var ret string
		return ret
	}
	return *o.LastAp
}

// GetLastApOk returns a tuple with the LastAp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastApOk() (*string, bool) {
	if o == nil || IsNil(o.LastAp) {
		return nil, false
	}
	return o.LastAp, true
}

// HasLastAp returns a boolean if a field has been set.
func (o *ClientWireless) HasLastAp() bool {
	if o != nil && !IsNil(o.LastAp) {
		return true
	}

	return false
}

// SetLastAp gets a reference to the given string and assigns it to the LastAp field.
func (o *ClientWireless) SetLastAp(v string) {
	o.LastAp = &v
}

// GetLastDevuce returns the LastDevuce field value if set, zero value otherwise.
func (o *ClientWireless) GetLastDevuce() string {
	if o == nil || IsNil(o.LastDevuce) {
		var ret string
		return ret
	}
	return *o.LastDevuce
}

// GetLastDevuceOk returns a tuple with the LastDevuce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastDevuceOk() (*string, bool) {
	if o == nil || IsNil(o.LastDevuce) {
		return nil, false
	}
	return o.LastDevuce, true
}

// HasLastDevuce returns a boolean if a field has been set.
func (o *ClientWireless) HasLastDevuce() bool {
	if o != nil && !IsNil(o.LastDevuce) {
		return true
	}

	return false
}

// SetLastDevuce gets a reference to the given string and assigns it to the LastDevuce field.
func (o *ClientWireless) SetLastDevuce(v string) {
	o.LastDevuce = &v
}

// GetLastFirmware returns the LastFirmware field value if set, zero value otherwise.
func (o *ClientWireless) GetLastFirmware() string {
	if o == nil || IsNil(o.LastFirmware) {
		var ret string
		return ret
	}
	return *o.LastFirmware
}

// GetLastFirmwareOk returns a tuple with the LastFirmware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastFirmwareOk() (*string, bool) {
	if o == nil || IsNil(o.LastFirmware) {
		return nil, false
	}
	return o.LastFirmware, true
}

// HasLastFirmware returns a boolean if a field has been set.
func (o *ClientWireless) HasLastFirmware() bool {
	if o != nil && !IsNil(o.LastFirmware) {
		return true
	}

	return false
}

// SetLastFirmware gets a reference to the given string and assigns it to the LastFirmware field.
func (o *ClientWireless) SetLastFirmware(v string) {
	o.LastFirmware = &v
}

// GetLastHostname returns the LastHostname field value if set, zero value otherwise.
func (o *ClientWireless) GetLastHostname() string {
	if o == nil || IsNil(o.LastHostname) {
		var ret string
		return ret
	}
	return *o.LastHostname
}

// GetLastHostnameOk returns a tuple with the LastHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.LastHostname) {
		return nil, false
	}
	return o.LastHostname, true
}

// HasLastHostname returns a boolean if a field has been set.
func (o *ClientWireless) HasLastHostname() bool {
	if o != nil && !IsNil(o.LastHostname) {
		return true
	}

	return false
}

// SetLastHostname gets a reference to the given string and assigns it to the LastHostname field.
func (o *ClientWireless) SetLastHostname(v string) {
	o.LastHostname = &v
}

// GetLastIp returns the LastIp field value if set, zero value otherwise.
func (o *ClientWireless) GetLastIp() string {
	if o == nil || IsNil(o.LastIp) {
		var ret string
		return ret
	}
	return *o.LastIp
}

// GetLastIpOk returns a tuple with the LastIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastIpOk() (*string, bool) {
	if o == nil || IsNil(o.LastIp) {
		return nil, false
	}
	return o.LastIp, true
}

// HasLastIp returns a boolean if a field has been set.
func (o *ClientWireless) HasLastIp() bool {
	if o != nil && !IsNil(o.LastIp) {
		return true
	}

	return false
}

// SetLastIp gets a reference to the given string and assigns it to the LastIp field.
func (o *ClientWireless) SetLastIp(v string) {
	o.LastIp = &v
}

// GetLastModel returns the LastModel field value if set, zero value otherwise.
func (o *ClientWireless) GetLastModel() string {
	if o == nil || IsNil(o.LastModel) {
		var ret string
		return ret
	}
	return *o.LastModel
}

// GetLastModelOk returns a tuple with the LastModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastModelOk() (*string, bool) {
	if o == nil || IsNil(o.LastModel) {
		return nil, false
	}
	return o.LastModel, true
}

// HasLastModel returns a boolean if a field has been set.
func (o *ClientWireless) HasLastModel() bool {
	if o != nil && !IsNil(o.LastModel) {
		return true
	}

	return false
}

// SetLastModel gets a reference to the given string and assigns it to the LastModel field.
func (o *ClientWireless) SetLastModel(v string) {
	o.LastModel = &v
}

// GetLastOs returns the LastOs field value if set, zero value otherwise.
func (o *ClientWireless) GetLastOs() string {
	if o == nil || IsNil(o.LastOs) {
		var ret string
		return ret
	}
	return *o.LastOs
}

// GetLastOsOk returns a tuple with the LastOs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastOsOk() (*string, bool) {
	if o == nil || IsNil(o.LastOs) {
		return nil, false
	}
	return o.LastOs, true
}

// HasLastOs returns a boolean if a field has been set.
func (o *ClientWireless) HasLastOs() bool {
	if o != nil && !IsNil(o.LastOs) {
		return true
	}

	return false
}

// SetLastOs gets a reference to the given string and assigns it to the LastOs field.
func (o *ClientWireless) SetLastOs(v string) {
	o.LastOs = &v
}

// GetLastOsVersion returns the LastOsVersion field value if set, zero value otherwise.
func (o *ClientWireless) GetLastOsVersion() string {
	if o == nil || IsNil(o.LastOsVersion) {
		var ret string
		return ret
	}
	return *o.LastOsVersion
}

// GetLastOsVersionOk returns a tuple with the LastOsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastOsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.LastOsVersion) {
		return nil, false
	}
	return o.LastOsVersion, true
}

// HasLastOsVersion returns a boolean if a field has been set.
func (o *ClientWireless) HasLastOsVersion() bool {
	if o != nil && !IsNil(o.LastOsVersion) {
		return true
	}

	return false
}

// SetLastOsVersion gets a reference to the given string and assigns it to the LastOsVersion field.
func (o *ClientWireless) SetLastOsVersion(v string) {
	o.LastOsVersion = &v
}

// GetLastPskId returns the LastPskId field value if set, zero value otherwise.
func (o *ClientWireless) GetLastPskId() string {
	if o == nil || IsNil(o.LastPskId) {
		var ret string
		return ret
	}
	return *o.LastPskId
}

// GetLastPskIdOk returns a tuple with the LastPskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastPskIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastPskId) {
		return nil, false
	}
	return o.LastPskId, true
}

// HasLastPskId returns a boolean if a field has been set.
func (o *ClientWireless) HasLastPskId() bool {
	if o != nil && !IsNil(o.LastPskId) {
		return true
	}

	return false
}

// SetLastPskId gets a reference to the given string and assigns it to the LastPskId field.
func (o *ClientWireless) SetLastPskId(v string) {
	o.LastPskId = &v
}

// GetLastPskName returns the LastPskName field value if set, zero value otherwise.
func (o *ClientWireless) GetLastPskName() string {
	if o == nil || IsNil(o.LastPskName) {
		var ret string
		return ret
	}
	return *o.LastPskName
}

// GetLastPskNameOk returns a tuple with the LastPskName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastPskNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastPskName) {
		return nil, false
	}
	return o.LastPskName, true
}

// HasLastPskName returns a boolean if a field has been set.
func (o *ClientWireless) HasLastPskName() bool {
	if o != nil && !IsNil(o.LastPskName) {
		return true
	}

	return false
}

// SetLastPskName gets a reference to the given string and assigns it to the LastPskName field.
func (o *ClientWireless) SetLastPskName(v string) {
	o.LastPskName = &v
}

// GetLastSsid returns the LastSsid field value if set, zero value otherwise.
func (o *ClientWireless) GetLastSsid() string {
	if o == nil || IsNil(o.LastSsid) {
		var ret string
		return ret
	}
	return *o.LastSsid
}

// GetLastSsidOk returns a tuple with the LastSsid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastSsidOk() (*string, bool) {
	if o == nil || IsNil(o.LastSsid) {
		return nil, false
	}
	return o.LastSsid, true
}

// HasLastSsid returns a boolean if a field has been set.
func (o *ClientWireless) HasLastSsid() bool {
	if o != nil && !IsNil(o.LastSsid) {
		return true
	}

	return false
}

// SetLastSsid gets a reference to the given string and assigns it to the LastSsid field.
func (o *ClientWireless) SetLastSsid(v string) {
	o.LastSsid = &v
}

// GetLastUsername returns the LastUsername field value if set, zero value otherwise.
func (o *ClientWireless) GetLastUsername() string {
	if o == nil || IsNil(o.LastUsername) {
		var ret string
		return ret
	}
	return *o.LastUsername
}

// GetLastUsernameOk returns a tuple with the LastUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.LastUsername) {
		return nil, false
	}
	return o.LastUsername, true
}

// HasLastUsername returns a boolean if a field has been set.
func (o *ClientWireless) HasLastUsername() bool {
	if o != nil && !IsNil(o.LastUsername) {
		return true
	}

	return false
}

// SetLastUsername gets a reference to the given string and assigns it to the LastUsername field.
func (o *ClientWireless) SetLastUsername(v string) {
	o.LastUsername = &v
}

// GetLastVlan returns the LastVlan field value if set, zero value otherwise.
func (o *ClientWireless) GetLastVlan() int32 {
	if o == nil || IsNil(o.LastVlan) {
		var ret int32
		return ret
	}
	return *o.LastVlan
}

// GetLastVlanOk returns a tuple with the LastVlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastVlanOk() (*int32, bool) {
	if o == nil || IsNil(o.LastVlan) {
		return nil, false
	}
	return o.LastVlan, true
}

// HasLastVlan returns a boolean if a field has been set.
func (o *ClientWireless) HasLastVlan() bool {
	if o != nil && !IsNil(o.LastVlan) {
		return true
	}

	return false
}

// SetLastVlan gets a reference to the given int32 and assigns it to the LastVlan field.
func (o *ClientWireless) SetLastVlan(v int32) {
	o.LastVlan = &v
}

// GetLastWlanId returns the LastWlanId field value if set, zero value otherwise.
func (o *ClientWireless) GetLastWlanId() string {
	if o == nil || IsNil(o.LastWlanId) {
		var ret string
		return ret
	}
	return *o.LastWlanId
}

// GetLastWlanIdOk returns a tuple with the LastWlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetLastWlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastWlanId) {
		return nil, false
	}
	return o.LastWlanId, true
}

// HasLastWlanId returns a boolean if a field has been set.
func (o *ClientWireless) HasLastWlanId() bool {
	if o != nil && !IsNil(o.LastWlanId) {
		return true
	}

	return false
}

// SetLastWlanId gets a reference to the given string and assigns it to the LastWlanId field.
func (o *ClientWireless) SetLastWlanId(v string) {
	o.LastWlanId = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *ClientWireless) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *ClientWireless) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *ClientWireless) SetMac(v string) {
	o.Mac = &v
}

// GetMfg returns the Mfg field value if set, zero value otherwise.
func (o *ClientWireless) GetMfg() string {
	if o == nil || IsNil(o.Mfg) {
		var ret string
		return ret
	}
	return *o.Mfg
}

// GetMfgOk returns a tuple with the Mfg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetMfgOk() (*string, bool) {
	if o == nil || IsNil(o.Mfg) {
		return nil, false
	}
	return o.Mfg, true
}

// HasMfg returns a boolean if a field has been set.
func (o *ClientWireless) HasMfg() bool {
	if o != nil && !IsNil(o.Mfg) {
		return true
	}

	return false
}

// SetMfg gets a reference to the given string and assigns it to the Mfg field.
func (o *ClientWireless) SetMfg(v string) {
	o.Mfg = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *ClientWireless) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *ClientWireless) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *ClientWireless) SetModel(v string) {
	o.Model = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ClientWireless) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ClientWireless) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *ClientWireless) SetOrgId(v string) {
	o.OrgId = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *ClientWireless) GetOs() []string {
	if o == nil || IsNil(o.Os) {
		var ret []string
		return ret
	}
	return o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetOsOk() ([]string, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *ClientWireless) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given []string and assigns it to the Os field.
func (o *ClientWireless) SetOs(v []string) {
	o.Os = v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *ClientWireless) GetOsVersion() []string {
	if o == nil || IsNil(o.OsVersion) {
		var ret []string
		return ret
	}
	return o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetOsVersionOk() ([]string, bool) {
	if o == nil || IsNil(o.OsVersion) {
		return nil, false
	}
	return o.OsVersion, true
}

// HasOsVersion returns a boolean if a field has been set.
func (o *ClientWireless) HasOsVersion() bool {
	if o != nil && !IsNil(o.OsVersion) {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given []string and assigns it to the OsVersion field.
func (o *ClientWireless) SetOsVersion(v []string) {
	o.OsVersion = v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *ClientWireless) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *ClientWireless) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *ClientWireless) SetProtocol(v string) {
	o.Protocol = &v
}

// GetPskId returns the PskId field value if set, zero value otherwise.
func (o *ClientWireless) GetPskId() []string {
	if o == nil || IsNil(o.PskId) {
		var ret []string
		return ret
	}
	return o.PskId
}

// GetPskIdOk returns a tuple with the PskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetPskIdOk() ([]string, bool) {
	if o == nil || IsNil(o.PskId) {
		return nil, false
	}
	return o.PskId, true
}

// HasPskId returns a boolean if a field has been set.
func (o *ClientWireless) HasPskId() bool {
	if o != nil && !IsNil(o.PskId) {
		return true
	}

	return false
}

// SetPskId gets a reference to the given []string and assigns it to the PskId field.
func (o *ClientWireless) SetPskId(v []string) {
	o.PskId = v
}

// GetPskName returns the PskName field value if set, zero value otherwise.
func (o *ClientWireless) GetPskName() []string {
	if o == nil || IsNil(o.PskName) {
		var ret []string
		return ret
	}
	return o.PskName
}

// GetPskNameOk returns a tuple with the PskName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetPskNameOk() ([]string, bool) {
	if o == nil || IsNil(o.PskName) {
		return nil, false
	}
	return o.PskName, true
}

// HasPskName returns a boolean if a field has been set.
func (o *ClientWireless) HasPskName() bool {
	if o != nil && !IsNil(o.PskName) {
		return true
	}

	return false
}

// SetPskName gets a reference to the given []string and assigns it to the PskName field.
func (o *ClientWireless) SetPskName(v []string) {
	o.PskName = v
}

// GetRandomMac returns the RandomMac field value if set, zero value otherwise.
func (o *ClientWireless) GetRandomMac() bool {
	if o == nil || IsNil(o.RandomMac) {
		var ret bool
		return ret
	}
	return *o.RandomMac
}

// GetRandomMacOk returns a tuple with the RandomMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetRandomMacOk() (*bool, bool) {
	if o == nil || IsNil(o.RandomMac) {
		return nil, false
	}
	return o.RandomMac, true
}

// HasRandomMac returns a boolean if a field has been set.
func (o *ClientWireless) HasRandomMac() bool {
	if o != nil && !IsNil(o.RandomMac) {
		return true
	}

	return false
}

// SetRandomMac gets a reference to the given bool and assigns it to the RandomMac field.
func (o *ClientWireless) SetRandomMac(v bool) {
	o.RandomMac = &v
}

// GetSdkVersion returns the SdkVersion field value if set, zero value otherwise.
func (o *ClientWireless) GetSdkVersion() []string {
	if o == nil || IsNil(o.SdkVersion) {
		var ret []string
		return ret
	}
	return o.SdkVersion
}

// GetSdkVersionOk returns a tuple with the SdkVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetSdkVersionOk() ([]string, bool) {
	if o == nil || IsNil(o.SdkVersion) {
		return nil, false
	}
	return o.SdkVersion, true
}

// HasSdkVersion returns a boolean if a field has been set.
func (o *ClientWireless) HasSdkVersion() bool {
	if o != nil && !IsNil(o.SdkVersion) {
		return true
	}

	return false
}

// SetSdkVersion gets a reference to the given []string and assigns it to the SdkVersion field.
func (o *ClientWireless) SetSdkVersion(v []string) {
	o.SdkVersion = v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *ClientWireless) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *ClientWireless) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *ClientWireless) SetSiteId(v string) {
	o.SiteId = &v
}

// GetSiteIds returns the SiteIds field value if set, zero value otherwise.
func (o *ClientWireless) GetSiteIds() []string {
	if o == nil || IsNil(o.SiteIds) {
		var ret []string
		return ret
	}
	return o.SiteIds
}

// GetSiteIdsOk returns a tuple with the SiteIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetSiteIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SiteIds) {
		return nil, false
	}
	return o.SiteIds, true
}

// HasSiteIds returns a boolean if a field has been set.
func (o *ClientWireless) HasSiteIds() bool {
	if o != nil && !IsNil(o.SiteIds) {
		return true
	}

	return false
}

// SetSiteIds gets a reference to the given []string and assigns it to the SiteIds field.
func (o *ClientWireless) SetSiteIds(v []string) {
	o.SiteIds = v
}

// GetSsid returns the Ssid field value if set, zero value otherwise.
func (o *ClientWireless) GetSsid() []string {
	if o == nil || IsNil(o.Ssid) {
		var ret []string
		return ret
	}
	return o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetSsidOk() ([]string, bool) {
	if o == nil || IsNil(o.Ssid) {
		return nil, false
	}
	return o.Ssid, true
}

// HasSsid returns a boolean if a field has been set.
func (o *ClientWireless) HasSsid() bool {
	if o != nil && !IsNil(o.Ssid) {
		return true
	}

	return false
}

// SetSsid gets a reference to the given []string and assigns it to the Ssid field.
func (o *ClientWireless) SetSsid(v []string) {
	o.Ssid = v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ClientWireless) GetTimestamp() float32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret float32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ClientWireless) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given float32 and assigns it to the Timestamp field.
func (o *ClientWireless) SetTimestamp(v float32) {
	o.Timestamp = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ClientWireless) GetUsername() []string {
	if o == nil || IsNil(o.Username) {
		var ret []string
		return ret
	}
	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetUsernameOk() ([]string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ClientWireless) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given []string and assigns it to the Username field.
func (o *ClientWireless) SetUsername(v []string) {
	o.Username = v
}

// GetVlan returns the Vlan field value if set, zero value otherwise.
func (o *ClientWireless) GetVlan() []int32 {
	if o == nil || IsNil(o.Vlan) {
		var ret []int32
		return ret
	}
	return o.Vlan
}

// GetVlanOk returns a tuple with the Vlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetVlanOk() ([]int32, bool) {
	if o == nil || IsNil(o.Vlan) {
		return nil, false
	}
	return o.Vlan, true
}

// HasVlan returns a boolean if a field has been set.
func (o *ClientWireless) HasVlan() bool {
	if o != nil && !IsNil(o.Vlan) {
		return true
	}

	return false
}

// SetVlan gets a reference to the given []int32 and assigns it to the Vlan field.
func (o *ClientWireless) SetVlan(v []int32) {
	o.Vlan = v
}

// GetWlanId returns the WlanId field value if set, zero value otherwise.
func (o *ClientWireless) GetWlanId() []string {
	if o == nil || IsNil(o.WlanId) {
		var ret []string
		return ret
	}
	return o.WlanId
}

// GetWlanIdOk returns a tuple with the WlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientWireless) GetWlanIdOk() ([]string, bool) {
	if o == nil || IsNil(o.WlanId) {
		return nil, false
	}
	return o.WlanId, true
}

// HasWlanId returns a boolean if a field has been set.
func (o *ClientWireless) HasWlanId() bool {
	if o != nil && !IsNil(o.WlanId) {
		return true
	}

	return false
}

// SetWlanId gets a reference to the given []string and assigns it to the WlanId field.
func (o *ClientWireless) SetWlanId(v []string) {
	o.WlanId = v
}

func (o ClientWireless) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientWireless) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ap) {
		toSerialize["ap"] = o.Ap
	}
	if !IsNil(o.AppVersion) {
		toSerialize["app_version"] = o.AppVersion
	}
	if !IsNil(o.Band) {
		toSerialize["band"] = o.Band
	}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.Ftc) {
		toSerialize["ftc"] = o.Ftc
	}
	if !IsNil(o.Hardware) {
		toSerialize["hardware"] = o.Hardware
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.LastAp) {
		toSerialize["last_ap"] = o.LastAp
	}
	if !IsNil(o.LastDevuce) {
		toSerialize["last_devuce"] = o.LastDevuce
	}
	if !IsNil(o.LastFirmware) {
		toSerialize["last_firmware"] = o.LastFirmware
	}
	if !IsNil(o.LastHostname) {
		toSerialize["last_hostname"] = o.LastHostname
	}
	if !IsNil(o.LastIp) {
		toSerialize["last_ip"] = o.LastIp
	}
	if !IsNil(o.LastModel) {
		toSerialize["last_model"] = o.LastModel
	}
	if !IsNil(o.LastOs) {
		toSerialize["last_os"] = o.LastOs
	}
	if !IsNil(o.LastOsVersion) {
		toSerialize["last_os_version"] = o.LastOsVersion
	}
	if !IsNil(o.LastPskId) {
		toSerialize["last_psk_id"] = o.LastPskId
	}
	if !IsNil(o.LastPskName) {
		toSerialize["last_psk_name"] = o.LastPskName
	}
	if !IsNil(o.LastSsid) {
		toSerialize["last_ssid"] = o.LastSsid
	}
	if !IsNil(o.LastUsername) {
		toSerialize["last_username"] = o.LastUsername
	}
	if !IsNil(o.LastVlan) {
		toSerialize["last_vlan"] = o.LastVlan
	}
	if !IsNil(o.LastWlanId) {
		toSerialize["last_wlan_id"] = o.LastWlanId
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.Mfg) {
		toSerialize["mfg"] = o.Mfg
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.OsVersion) {
		toSerialize["os_version"] = o.OsVersion
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.PskId) {
		toSerialize["psk_id"] = o.PskId
	}
	if !IsNil(o.PskName) {
		toSerialize["psk_name"] = o.PskName
	}
	if !IsNil(o.RandomMac) {
		toSerialize["random_mac"] = o.RandomMac
	}
	if !IsNil(o.SdkVersion) {
		toSerialize["sdk_version"] = o.SdkVersion
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.SiteIds) {
		toSerialize["site_ids"] = o.SiteIds
	}
	if !IsNil(o.Ssid) {
		toSerialize["ssid"] = o.Ssid
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Vlan) {
		toSerialize["vlan"] = o.Vlan
	}
	if !IsNil(o.WlanId) {
		toSerialize["wlan_id"] = o.WlanId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientWireless) UnmarshalJSON(data []byte) (err error) {
	varClientWireless := _ClientWireless{}

	err = json.Unmarshal(data, &varClientWireless)

	if err != nil {
		return err
	}

	*o = ClientWireless(varClientWireless)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ap")
		delete(additionalProperties, "app_version")
		delete(additionalProperties, "band")
		delete(additionalProperties, "device")
		delete(additionalProperties, "ftc")
		delete(additionalProperties, "hardware")
		delete(additionalProperties, "hostname")
		delete(additionalProperties, "ip")
		delete(additionalProperties, "last_ap")
		delete(additionalProperties, "last_devuce")
		delete(additionalProperties, "last_firmware")
		delete(additionalProperties, "last_hostname")
		delete(additionalProperties, "last_ip")
		delete(additionalProperties, "last_model")
		delete(additionalProperties, "last_os")
		delete(additionalProperties, "last_os_version")
		delete(additionalProperties, "last_psk_id")
		delete(additionalProperties, "last_psk_name")
		delete(additionalProperties, "last_ssid")
		delete(additionalProperties, "last_username")
		delete(additionalProperties, "last_vlan")
		delete(additionalProperties, "last_wlan_id")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "mfg")
		delete(additionalProperties, "model")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "os")
		delete(additionalProperties, "os_version")
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "psk_id")
		delete(additionalProperties, "psk_name")
		delete(additionalProperties, "random_mac")
		delete(additionalProperties, "sdk_version")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "site_ids")
		delete(additionalProperties, "ssid")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "username")
		delete(additionalProperties, "vlan")
		delete(additionalProperties, "wlan_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientWireless struct {
	value *ClientWireless
	isSet bool
}

func (v NullableClientWireless) Get() *ClientWireless {
	return v.value
}

func (v *NullableClientWireless) Set(val *ClientWireless) {
	v.value = val
	v.isSet = true
}

func (v NullableClientWireless) IsSet() bool {
	return v.isSet
}

func (v *NullableClientWireless) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientWireless(val *ClientWireless) *NullableClientWireless {
	return &NullableClientWireless{value: val, isSet: true}
}

func (v NullableClientWireless) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientWireless) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


