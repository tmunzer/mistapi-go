/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the GatewayStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayStats{}

// GatewayStats Gateway statistics
type GatewayStats struct {
	ApRedundancy *ApRedundancy `json:"ap_redundancy,omitempty"`
	ClusterStat *map[string]GatewayStatsClusterStat `json:"cluster_stat,omitempty"`
	Cpu2Stat *CpuStat `json:"cpu2_stat,omitempty"`
	CpuStat *CpuStat `json:"cpu_stat,omitempty"`
	// Property key is the network name
	Dhcpd2Stat *map[string]GatewayStatsDhcpdStatLan `json:"dhcpd2_stat,omitempty"`
	// Property key is the network name
	DhcpdStat *map[string]GatewayStatsDhcpdStatLan `json:"dhcpd_stat,omitempty"`
	// hostname reported by the device
	Hostname *string `json:"hostname,omitempty"`
	// IP address
	Ip *string `json:"ip,omitempty"`
	Ip2Stat *IpStat `json:"ip2_stat,omitempty"`
	IpStat *IpStat `json:"ip_stat,omitempty"`
	// last seen timestamp
	LastSeen *float32 `json:"last_seen,omitempty"`
	// device mac
	Mac string `json:"mac"`
	Memory2Stat *MemoryStat `json:"memory2_stat,omitempty"`
	MemoryStat *MemoryStat `json:"memory_stat,omitempty"`
	// device model
	Model *string `json:"model,omitempty"`
	Module2Stat []ModuleStat `json:"module2_stat,omitempty"`
	ModuleStat []ModuleStat `json:"module_stat,omitempty"`
	// device name if configured
	Name *string `json:"name,omitempty"`
	// serial
	Serial *string `json:"serial,omitempty"`
	Spu2Stat *GatewayStatsSpuStat `json:"spu2_stat,omitempty"`
	SpuStat *GatewayStatsSpuStat `json:"spu_stat,omitempty"`
	Status *string `json:"status,omitempty"`
	Type *string `json:"type,omitempty"`
	Uptime *float32 `json:"uptime,omitempty"`
	Version *string `json:"version,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayStats GatewayStats

// NewGatewayStats instantiates a new GatewayStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayStats(mac string) *GatewayStats {
	this := GatewayStats{}
	this.Mac = mac
	return &this
}

// NewGatewayStatsWithDefaults instantiates a new GatewayStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayStatsWithDefaults() *GatewayStats {
	this := GatewayStats{}
	return &this
}

// GetApRedundancy returns the ApRedundancy field value if set, zero value otherwise.
func (o *GatewayStats) GetApRedundancy() ApRedundancy {
	if o == nil || IsNil(o.ApRedundancy) {
		var ret ApRedundancy
		return ret
	}
	return *o.ApRedundancy
}

// GetApRedundancyOk returns a tuple with the ApRedundancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetApRedundancyOk() (*ApRedundancy, bool) {
	if o == nil || IsNil(o.ApRedundancy) {
		return nil, false
	}
	return o.ApRedundancy, true
}

// HasApRedundancy returns a boolean if a field has been set.
func (o *GatewayStats) HasApRedundancy() bool {
	if o != nil && !IsNil(o.ApRedundancy) {
		return true
	}

	return false
}

// SetApRedundancy gets a reference to the given ApRedundancy and assigns it to the ApRedundancy field.
func (o *GatewayStats) SetApRedundancy(v ApRedundancy) {
	o.ApRedundancy = &v
}

// GetClusterStat returns the ClusterStat field value if set, zero value otherwise.
func (o *GatewayStats) GetClusterStat() map[string]GatewayStatsClusterStat {
	if o == nil || IsNil(o.ClusterStat) {
		var ret map[string]GatewayStatsClusterStat
		return ret
	}
	return *o.ClusterStat
}

// GetClusterStatOk returns a tuple with the ClusterStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetClusterStatOk() (*map[string]GatewayStatsClusterStat, bool) {
	if o == nil || IsNil(o.ClusterStat) {
		return nil, false
	}
	return o.ClusterStat, true
}

// HasClusterStat returns a boolean if a field has been set.
func (o *GatewayStats) HasClusterStat() bool {
	if o != nil && !IsNil(o.ClusterStat) {
		return true
	}

	return false
}

// SetClusterStat gets a reference to the given map[string]GatewayStatsClusterStat and assigns it to the ClusterStat field.
func (o *GatewayStats) SetClusterStat(v map[string]GatewayStatsClusterStat) {
	o.ClusterStat = &v
}

// GetCpu2Stat returns the Cpu2Stat field value if set, zero value otherwise.
func (o *GatewayStats) GetCpu2Stat() CpuStat {
	if o == nil || IsNil(o.Cpu2Stat) {
		var ret CpuStat
		return ret
	}
	return *o.Cpu2Stat
}

// GetCpu2StatOk returns a tuple with the Cpu2Stat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetCpu2StatOk() (*CpuStat, bool) {
	if o == nil || IsNil(o.Cpu2Stat) {
		return nil, false
	}
	return o.Cpu2Stat, true
}

// HasCpu2Stat returns a boolean if a field has been set.
func (o *GatewayStats) HasCpu2Stat() bool {
	if o != nil && !IsNil(o.Cpu2Stat) {
		return true
	}

	return false
}

// SetCpu2Stat gets a reference to the given CpuStat and assigns it to the Cpu2Stat field.
func (o *GatewayStats) SetCpu2Stat(v CpuStat) {
	o.Cpu2Stat = &v
}

// GetCpuStat returns the CpuStat field value if set, zero value otherwise.
func (o *GatewayStats) GetCpuStat() CpuStat {
	if o == nil || IsNil(o.CpuStat) {
		var ret CpuStat
		return ret
	}
	return *o.CpuStat
}

// GetCpuStatOk returns a tuple with the CpuStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetCpuStatOk() (*CpuStat, bool) {
	if o == nil || IsNil(o.CpuStat) {
		return nil, false
	}
	return o.CpuStat, true
}

// HasCpuStat returns a boolean if a field has been set.
func (o *GatewayStats) HasCpuStat() bool {
	if o != nil && !IsNil(o.CpuStat) {
		return true
	}

	return false
}

// SetCpuStat gets a reference to the given CpuStat and assigns it to the CpuStat field.
func (o *GatewayStats) SetCpuStat(v CpuStat) {
	o.CpuStat = &v
}

// GetDhcpd2Stat returns the Dhcpd2Stat field value if set, zero value otherwise.
func (o *GatewayStats) GetDhcpd2Stat() map[string]GatewayStatsDhcpdStatLan {
	if o == nil || IsNil(o.Dhcpd2Stat) {
		var ret map[string]GatewayStatsDhcpdStatLan
		return ret
	}
	return *o.Dhcpd2Stat
}

// GetDhcpd2StatOk returns a tuple with the Dhcpd2Stat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetDhcpd2StatOk() (*map[string]GatewayStatsDhcpdStatLan, bool) {
	if o == nil || IsNil(o.Dhcpd2Stat) {
		return nil, false
	}
	return o.Dhcpd2Stat, true
}

// HasDhcpd2Stat returns a boolean if a field has been set.
func (o *GatewayStats) HasDhcpd2Stat() bool {
	if o != nil && !IsNil(o.Dhcpd2Stat) {
		return true
	}

	return false
}

// SetDhcpd2Stat gets a reference to the given map[string]GatewayStatsDhcpdStatLan and assigns it to the Dhcpd2Stat field.
func (o *GatewayStats) SetDhcpd2Stat(v map[string]GatewayStatsDhcpdStatLan) {
	o.Dhcpd2Stat = &v
}

// GetDhcpdStat returns the DhcpdStat field value if set, zero value otherwise.
func (o *GatewayStats) GetDhcpdStat() map[string]GatewayStatsDhcpdStatLan {
	if o == nil || IsNil(o.DhcpdStat) {
		var ret map[string]GatewayStatsDhcpdStatLan
		return ret
	}
	return *o.DhcpdStat
}

// GetDhcpdStatOk returns a tuple with the DhcpdStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetDhcpdStatOk() (*map[string]GatewayStatsDhcpdStatLan, bool) {
	if o == nil || IsNil(o.DhcpdStat) {
		return nil, false
	}
	return o.DhcpdStat, true
}

// HasDhcpdStat returns a boolean if a field has been set.
func (o *GatewayStats) HasDhcpdStat() bool {
	if o != nil && !IsNil(o.DhcpdStat) {
		return true
	}

	return false
}

// SetDhcpdStat gets a reference to the given map[string]GatewayStatsDhcpdStatLan and assigns it to the DhcpdStat field.
func (o *GatewayStats) SetDhcpdStat(v map[string]GatewayStatsDhcpdStatLan) {
	o.DhcpdStat = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *GatewayStats) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *GatewayStats) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *GatewayStats) SetHostname(v string) {
	o.Hostname = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *GatewayStats) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *GatewayStats) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *GatewayStats) SetIp(v string) {
	o.Ip = &v
}

// GetIp2Stat returns the Ip2Stat field value if set, zero value otherwise.
func (o *GatewayStats) GetIp2Stat() IpStat {
	if o == nil || IsNil(o.Ip2Stat) {
		var ret IpStat
		return ret
	}
	return *o.Ip2Stat
}

// GetIp2StatOk returns a tuple with the Ip2Stat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetIp2StatOk() (*IpStat, bool) {
	if o == nil || IsNil(o.Ip2Stat) {
		return nil, false
	}
	return o.Ip2Stat, true
}

// HasIp2Stat returns a boolean if a field has been set.
func (o *GatewayStats) HasIp2Stat() bool {
	if o != nil && !IsNil(o.Ip2Stat) {
		return true
	}

	return false
}

// SetIp2Stat gets a reference to the given IpStat and assigns it to the Ip2Stat field.
func (o *GatewayStats) SetIp2Stat(v IpStat) {
	o.Ip2Stat = &v
}

// GetIpStat returns the IpStat field value if set, zero value otherwise.
func (o *GatewayStats) GetIpStat() IpStat {
	if o == nil || IsNil(o.IpStat) {
		var ret IpStat
		return ret
	}
	return *o.IpStat
}

// GetIpStatOk returns a tuple with the IpStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetIpStatOk() (*IpStat, bool) {
	if o == nil || IsNil(o.IpStat) {
		return nil, false
	}
	return o.IpStat, true
}

// HasIpStat returns a boolean if a field has been set.
func (o *GatewayStats) HasIpStat() bool {
	if o != nil && !IsNil(o.IpStat) {
		return true
	}

	return false
}

// SetIpStat gets a reference to the given IpStat and assigns it to the IpStat field.
func (o *GatewayStats) SetIpStat(v IpStat) {
	o.IpStat = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *GatewayStats) GetLastSeen() float32 {
	if o == nil || IsNil(o.LastSeen) {
		var ret float32
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetLastSeenOk() (*float32, bool) {
	if o == nil || IsNil(o.LastSeen) {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *GatewayStats) HasLastSeen() bool {
	if o != nil && !IsNil(o.LastSeen) {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given float32 and assigns it to the LastSeen field.
func (o *GatewayStats) SetLastSeen(v float32) {
	o.LastSeen = &v
}

// GetMac returns the Mac field value
func (o *GatewayStats) GetMac() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mac
}

// GetMacOk returns a tuple with the Mac field value
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetMacOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mac, true
}

// SetMac sets field value
func (o *GatewayStats) SetMac(v string) {
	o.Mac = v
}

// GetMemory2Stat returns the Memory2Stat field value if set, zero value otherwise.
func (o *GatewayStats) GetMemory2Stat() MemoryStat {
	if o == nil || IsNil(o.Memory2Stat) {
		var ret MemoryStat
		return ret
	}
	return *o.Memory2Stat
}

// GetMemory2StatOk returns a tuple with the Memory2Stat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetMemory2StatOk() (*MemoryStat, bool) {
	if o == nil || IsNil(o.Memory2Stat) {
		return nil, false
	}
	return o.Memory2Stat, true
}

// HasMemory2Stat returns a boolean if a field has been set.
func (o *GatewayStats) HasMemory2Stat() bool {
	if o != nil && !IsNil(o.Memory2Stat) {
		return true
	}

	return false
}

// SetMemory2Stat gets a reference to the given MemoryStat and assigns it to the Memory2Stat field.
func (o *GatewayStats) SetMemory2Stat(v MemoryStat) {
	o.Memory2Stat = &v
}

// GetMemoryStat returns the MemoryStat field value if set, zero value otherwise.
func (o *GatewayStats) GetMemoryStat() MemoryStat {
	if o == nil || IsNil(o.MemoryStat) {
		var ret MemoryStat
		return ret
	}
	return *o.MemoryStat
}

// GetMemoryStatOk returns a tuple with the MemoryStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetMemoryStatOk() (*MemoryStat, bool) {
	if o == nil || IsNil(o.MemoryStat) {
		return nil, false
	}
	return o.MemoryStat, true
}

// HasMemoryStat returns a boolean if a field has been set.
func (o *GatewayStats) HasMemoryStat() bool {
	if o != nil && !IsNil(o.MemoryStat) {
		return true
	}

	return false
}

// SetMemoryStat gets a reference to the given MemoryStat and assigns it to the MemoryStat field.
func (o *GatewayStats) SetMemoryStat(v MemoryStat) {
	o.MemoryStat = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *GatewayStats) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *GatewayStats) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *GatewayStats) SetModel(v string) {
	o.Model = &v
}

// GetModule2Stat returns the Module2Stat field value if set, zero value otherwise.
func (o *GatewayStats) GetModule2Stat() []ModuleStat {
	if o == nil || IsNil(o.Module2Stat) {
		var ret []ModuleStat
		return ret
	}
	return o.Module2Stat
}

// GetModule2StatOk returns a tuple with the Module2Stat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetModule2StatOk() ([]ModuleStat, bool) {
	if o == nil || IsNil(o.Module2Stat) {
		return nil, false
	}
	return o.Module2Stat, true
}

// HasModule2Stat returns a boolean if a field has been set.
func (o *GatewayStats) HasModule2Stat() bool {
	if o != nil && !IsNil(o.Module2Stat) {
		return true
	}

	return false
}

// SetModule2Stat gets a reference to the given []ModuleStat and assigns it to the Module2Stat field.
func (o *GatewayStats) SetModule2Stat(v []ModuleStat) {
	o.Module2Stat = v
}

// GetModuleStat returns the ModuleStat field value if set, zero value otherwise.
func (o *GatewayStats) GetModuleStat() []ModuleStat {
	if o == nil || IsNil(o.ModuleStat) {
		var ret []ModuleStat
		return ret
	}
	return o.ModuleStat
}

// GetModuleStatOk returns a tuple with the ModuleStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetModuleStatOk() ([]ModuleStat, bool) {
	if o == nil || IsNil(o.ModuleStat) {
		return nil, false
	}
	return o.ModuleStat, true
}

// HasModuleStat returns a boolean if a field has been set.
func (o *GatewayStats) HasModuleStat() bool {
	if o != nil && !IsNil(o.ModuleStat) {
		return true
	}

	return false
}

// SetModuleStat gets a reference to the given []ModuleStat and assigns it to the ModuleStat field.
func (o *GatewayStats) SetModuleStat(v []ModuleStat) {
	o.ModuleStat = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GatewayStats) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GatewayStats) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GatewayStats) SetName(v string) {
	o.Name = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *GatewayStats) GetSerial() string {
	if o == nil || IsNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetSerialOk() (*string, bool) {
	if o == nil || IsNil(o.Serial) {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *GatewayStats) HasSerial() bool {
	if o != nil && !IsNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *GatewayStats) SetSerial(v string) {
	o.Serial = &v
}

// GetSpu2Stat returns the Spu2Stat field value if set, zero value otherwise.
func (o *GatewayStats) GetSpu2Stat() GatewayStatsSpuStat {
	if o == nil || IsNil(o.Spu2Stat) {
		var ret GatewayStatsSpuStat
		return ret
	}
	return *o.Spu2Stat
}

// GetSpu2StatOk returns a tuple with the Spu2Stat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetSpu2StatOk() (*GatewayStatsSpuStat, bool) {
	if o == nil || IsNil(o.Spu2Stat) {
		return nil, false
	}
	return o.Spu2Stat, true
}

// HasSpu2Stat returns a boolean if a field has been set.
func (o *GatewayStats) HasSpu2Stat() bool {
	if o != nil && !IsNil(o.Spu2Stat) {
		return true
	}

	return false
}

// SetSpu2Stat gets a reference to the given GatewayStatsSpuStat and assigns it to the Spu2Stat field.
func (o *GatewayStats) SetSpu2Stat(v GatewayStatsSpuStat) {
	o.Spu2Stat = &v
}

// GetSpuStat returns the SpuStat field value if set, zero value otherwise.
func (o *GatewayStats) GetSpuStat() GatewayStatsSpuStat {
	if o == nil || IsNil(o.SpuStat) {
		var ret GatewayStatsSpuStat
		return ret
	}
	return *o.SpuStat
}

// GetSpuStatOk returns a tuple with the SpuStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetSpuStatOk() (*GatewayStatsSpuStat, bool) {
	if o == nil || IsNil(o.SpuStat) {
		return nil, false
	}
	return o.SpuStat, true
}

// HasSpuStat returns a boolean if a field has been set.
func (o *GatewayStats) HasSpuStat() bool {
	if o != nil && !IsNil(o.SpuStat) {
		return true
	}

	return false
}

// SetSpuStat gets a reference to the given GatewayStatsSpuStat and assigns it to the SpuStat field.
func (o *GatewayStats) SetSpuStat(v GatewayStatsSpuStat) {
	o.SpuStat = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GatewayStats) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GatewayStats) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GatewayStats) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GatewayStats) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GatewayStats) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GatewayStats) SetType(v string) {
	o.Type = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *GatewayStats) GetUptime() float32 {
	if o == nil || IsNil(o.Uptime) {
		var ret float32
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetUptimeOk() (*float32, bool) {
	if o == nil || IsNil(o.Uptime) {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *GatewayStats) HasUptime() bool {
	if o != nil && !IsNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given float32 and assigns it to the Uptime field.
func (o *GatewayStats) SetUptime(v float32) {
	o.Uptime = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GatewayStats) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStats) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GatewayStats) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *GatewayStats) SetVersion(v string) {
	o.Version = &v
}

func (o GatewayStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApRedundancy) {
		toSerialize["ap_redundancy"] = o.ApRedundancy
	}
	if !IsNil(o.ClusterStat) {
		toSerialize["cluster_stat"] = o.ClusterStat
	}
	if !IsNil(o.Cpu2Stat) {
		toSerialize["cpu2_stat"] = o.Cpu2Stat
	}
	if !IsNil(o.CpuStat) {
		toSerialize["cpu_stat"] = o.CpuStat
	}
	if !IsNil(o.Dhcpd2Stat) {
		toSerialize["dhcpd2_stat"] = o.Dhcpd2Stat
	}
	if !IsNil(o.DhcpdStat) {
		toSerialize["dhcpd_stat"] = o.DhcpdStat
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Ip2Stat) {
		toSerialize["ip2_stat"] = o.Ip2Stat
	}
	if !IsNil(o.IpStat) {
		toSerialize["ip_stat"] = o.IpStat
	}
	if !IsNil(o.LastSeen) {
		toSerialize["last_seen"] = o.LastSeen
	}
	toSerialize["mac"] = o.Mac
	if !IsNil(o.Memory2Stat) {
		toSerialize["memory2_stat"] = o.Memory2Stat
	}
	if !IsNil(o.MemoryStat) {
		toSerialize["memory_stat"] = o.MemoryStat
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Module2Stat) {
		toSerialize["module2_stat"] = o.Module2Stat
	}
	if !IsNil(o.ModuleStat) {
		toSerialize["module_stat"] = o.ModuleStat
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !IsNil(o.Spu2Stat) {
		toSerialize["spu2_stat"] = o.Spu2Stat
	}
	if !IsNil(o.SpuStat) {
		toSerialize["spu_stat"] = o.SpuStat
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Uptime) {
		toSerialize["uptime"] = o.Uptime
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayStats) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mac",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGatewayStats := _GatewayStats{}

	err = json.Unmarshal(data, &varGatewayStats)

	if err != nil {
		return err
	}

	*o = GatewayStats(varGatewayStats)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ap_redundancy")
		delete(additionalProperties, "cluster_stat")
		delete(additionalProperties, "cpu2_stat")
		delete(additionalProperties, "cpu_stat")
		delete(additionalProperties, "dhcpd2_stat")
		delete(additionalProperties, "dhcpd_stat")
		delete(additionalProperties, "hostname")
		delete(additionalProperties, "ip")
		delete(additionalProperties, "ip2_stat")
		delete(additionalProperties, "ip_stat")
		delete(additionalProperties, "last_seen")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "memory2_stat")
		delete(additionalProperties, "memory_stat")
		delete(additionalProperties, "model")
		delete(additionalProperties, "module2_stat")
		delete(additionalProperties, "module_stat")
		delete(additionalProperties, "name")
		delete(additionalProperties, "serial")
		delete(additionalProperties, "spu2_stat")
		delete(additionalProperties, "spu_stat")
		delete(additionalProperties, "status")
		delete(additionalProperties, "type")
		delete(additionalProperties, "uptime")
		delete(additionalProperties, "version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayStats struct {
	value *GatewayStats
	isSet bool
}

func (v NullableGatewayStats) Get() *GatewayStats {
	return v.value
}

func (v *NullableGatewayStats) Set(val *GatewayStats) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayStats) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayStats(val *GatewayStats) *NullableGatewayStats {
	return &NullableGatewayStats{value: val, isSet: true}
}

func (v NullableGatewayStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


