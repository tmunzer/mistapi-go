/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the MxedgeStatsTuntermPortConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MxedgeStatsTuntermPortConfig{}

// MxedgeStatsTuntermPortConfig struct for MxedgeStatsTuntermPortConfig
type MxedgeStatsTuntermPortConfig struct {
	DownstreamPorts []string `json:"downstream_ports,omitempty"`
	SeparateUpstreamDownstream *bool `json:"separate_upstream_downstream,omitempty"`
	UpstreamPorts []string `json:"upstream_ports,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MxedgeStatsTuntermPortConfig MxedgeStatsTuntermPortConfig

// NewMxedgeStatsTuntermPortConfig instantiates a new MxedgeStatsTuntermPortConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMxedgeStatsTuntermPortConfig() *MxedgeStatsTuntermPortConfig {
	this := MxedgeStatsTuntermPortConfig{}
	return &this
}

// NewMxedgeStatsTuntermPortConfigWithDefaults instantiates a new MxedgeStatsTuntermPortConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMxedgeStatsTuntermPortConfigWithDefaults() *MxedgeStatsTuntermPortConfig {
	this := MxedgeStatsTuntermPortConfig{}
	return &this
}

// GetDownstreamPorts returns the DownstreamPorts field value if set, zero value otherwise.
func (o *MxedgeStatsTuntermPortConfig) GetDownstreamPorts() []string {
	if o == nil || IsNil(o.DownstreamPorts) {
		var ret []string
		return ret
	}
	return o.DownstreamPorts
}

// GetDownstreamPortsOk returns a tuple with the DownstreamPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStatsTuntermPortConfig) GetDownstreamPortsOk() ([]string, bool) {
	if o == nil || IsNil(o.DownstreamPorts) {
		return nil, false
	}
	return o.DownstreamPorts, true
}

// HasDownstreamPorts returns a boolean if a field has been set.
func (o *MxedgeStatsTuntermPortConfig) HasDownstreamPorts() bool {
	if o != nil && !IsNil(o.DownstreamPorts) {
		return true
	}

	return false
}

// SetDownstreamPorts gets a reference to the given []string and assigns it to the DownstreamPorts field.
func (o *MxedgeStatsTuntermPortConfig) SetDownstreamPorts(v []string) {
	o.DownstreamPorts = v
}

// GetSeparateUpstreamDownstream returns the SeparateUpstreamDownstream field value if set, zero value otherwise.
func (o *MxedgeStatsTuntermPortConfig) GetSeparateUpstreamDownstream() bool {
	if o == nil || IsNil(o.SeparateUpstreamDownstream) {
		var ret bool
		return ret
	}
	return *o.SeparateUpstreamDownstream
}

// GetSeparateUpstreamDownstreamOk returns a tuple with the SeparateUpstreamDownstream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStatsTuntermPortConfig) GetSeparateUpstreamDownstreamOk() (*bool, bool) {
	if o == nil || IsNil(o.SeparateUpstreamDownstream) {
		return nil, false
	}
	return o.SeparateUpstreamDownstream, true
}

// HasSeparateUpstreamDownstream returns a boolean if a field has been set.
func (o *MxedgeStatsTuntermPortConfig) HasSeparateUpstreamDownstream() bool {
	if o != nil && !IsNil(o.SeparateUpstreamDownstream) {
		return true
	}

	return false
}

// SetSeparateUpstreamDownstream gets a reference to the given bool and assigns it to the SeparateUpstreamDownstream field.
func (o *MxedgeStatsTuntermPortConfig) SetSeparateUpstreamDownstream(v bool) {
	o.SeparateUpstreamDownstream = &v
}

// GetUpstreamPorts returns the UpstreamPorts field value if set, zero value otherwise.
func (o *MxedgeStatsTuntermPortConfig) GetUpstreamPorts() []string {
	if o == nil || IsNil(o.UpstreamPorts) {
		var ret []string
		return ret
	}
	return o.UpstreamPorts
}

// GetUpstreamPortsOk returns a tuple with the UpstreamPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStatsTuntermPortConfig) GetUpstreamPortsOk() ([]string, bool) {
	if o == nil || IsNil(o.UpstreamPorts) {
		return nil, false
	}
	return o.UpstreamPorts, true
}

// HasUpstreamPorts returns a boolean if a field has been set.
func (o *MxedgeStatsTuntermPortConfig) HasUpstreamPorts() bool {
	if o != nil && !IsNil(o.UpstreamPorts) {
		return true
	}

	return false
}

// SetUpstreamPorts gets a reference to the given []string and assigns it to the UpstreamPorts field.
func (o *MxedgeStatsTuntermPortConfig) SetUpstreamPorts(v []string) {
	o.UpstreamPorts = v
}

func (o MxedgeStatsTuntermPortConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MxedgeStatsTuntermPortConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DownstreamPorts) {
		toSerialize["downstream_ports"] = o.DownstreamPorts
	}
	if !IsNil(o.SeparateUpstreamDownstream) {
		toSerialize["separate_upstream_downstream"] = o.SeparateUpstreamDownstream
	}
	if !IsNil(o.UpstreamPorts) {
		toSerialize["upstream_ports"] = o.UpstreamPorts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MxedgeStatsTuntermPortConfig) UnmarshalJSON(data []byte) (err error) {
	varMxedgeStatsTuntermPortConfig := _MxedgeStatsTuntermPortConfig{}

	err = json.Unmarshal(data, &varMxedgeStatsTuntermPortConfig)

	if err != nil {
		return err
	}

	*o = MxedgeStatsTuntermPortConfig(varMxedgeStatsTuntermPortConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "downstream_ports")
		delete(additionalProperties, "separate_upstream_downstream")
		delete(additionalProperties, "upstream_ports")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMxedgeStatsTuntermPortConfig struct {
	value *MxedgeStatsTuntermPortConfig
	isSet bool
}

func (v NullableMxedgeStatsTuntermPortConfig) Get() *MxedgeStatsTuntermPortConfig {
	return v.value
}

func (v *NullableMxedgeStatsTuntermPortConfig) Set(val *MxedgeStatsTuntermPortConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMxedgeStatsTuntermPortConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMxedgeStatsTuntermPortConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMxedgeStatsTuntermPortConfig(val *MxedgeStatsTuntermPortConfig) *NullableMxedgeStatsTuntermPortConfig {
	return &NullableMxedgeStatsTuntermPortConfig{value: val, isSet: true}
}

func (v NullableMxedgeStatsTuntermPortConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMxedgeStatsTuntermPortConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


