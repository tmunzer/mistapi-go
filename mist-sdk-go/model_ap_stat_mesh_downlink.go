/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ApStatMeshDownlink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApStatMeshDownlink{}

// ApStatMeshDownlink struct for ApStatMeshDownlink
type ApStatMeshDownlink struct {
	Band *string `json:"band,omitempty"`
	Channel *int32 `json:"channel,omitempty"`
	IdleTime *int32 `json:"idle_time,omitempty"`
	LastSeen *int32 `json:"last_seen,omitempty"`
	Proto *string `json:"proto,omitempty"`
	Rssi *int32 `json:"rssi,omitempty"`
	RxBps *int32 `json:"rx_bps,omitempty"`
	RxBytes *int32 `json:"rx_bytes,omitempty"`
	RxPackets *int32 `json:"rx_packets,omitempty"`
	RxRate *int32 `json:"rx_rate,omitempty"`
	RxRetries *int32 `json:"rx_retries,omitempty"`
	SiteId *string `json:"site_id,omitempty"`
	Snr *int32 `json:"snr,omitempty"`
	TxBps *int32 `json:"tx_bps,omitempty"`
	TxBytes *int32 `json:"tx_bytes,omitempty"`
	TxPackets *int32 `json:"tx_packets,omitempty"`
	TxRate *int32 `json:"tx_rate,omitempty"`
	TxRetries *int32 `json:"tx_retries,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApStatMeshDownlink ApStatMeshDownlink

// NewApStatMeshDownlink instantiates a new ApStatMeshDownlink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApStatMeshDownlink() *ApStatMeshDownlink {
	this := ApStatMeshDownlink{}
	return &this
}

// NewApStatMeshDownlinkWithDefaults instantiates a new ApStatMeshDownlink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApStatMeshDownlinkWithDefaults() *ApStatMeshDownlink {
	this := ApStatMeshDownlink{}
	return &this
}

// GetBand returns the Band field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetBand() string {
	if o == nil || IsNil(o.Band) {
		var ret string
		return ret
	}
	return *o.Band
}

// GetBandOk returns a tuple with the Band field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetBandOk() (*string, bool) {
	if o == nil || IsNil(o.Band) {
		return nil, false
	}
	return o.Band, true
}

// HasBand returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasBand() bool {
	if o != nil && !IsNil(o.Band) {
		return true
	}

	return false
}

// SetBand gets a reference to the given string and assigns it to the Band field.
func (o *ApStatMeshDownlink) SetBand(v string) {
	o.Band = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetChannel() int32 {
	if o == nil || IsNil(o.Channel) {
		var ret int32
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetChannelOk() (*int32, bool) {
	if o == nil || IsNil(o.Channel) {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasChannel() bool {
	if o != nil && !IsNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given int32 and assigns it to the Channel field.
func (o *ApStatMeshDownlink) SetChannel(v int32) {
	o.Channel = &v
}

// GetIdleTime returns the IdleTime field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetIdleTime() int32 {
	if o == nil || IsNil(o.IdleTime) {
		var ret int32
		return ret
	}
	return *o.IdleTime
}

// GetIdleTimeOk returns a tuple with the IdleTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetIdleTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.IdleTime) {
		return nil, false
	}
	return o.IdleTime, true
}

// HasIdleTime returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasIdleTime() bool {
	if o != nil && !IsNil(o.IdleTime) {
		return true
	}

	return false
}

// SetIdleTime gets a reference to the given int32 and assigns it to the IdleTime field.
func (o *ApStatMeshDownlink) SetIdleTime(v int32) {
	o.IdleTime = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetLastSeen() int32 {
	if o == nil || IsNil(o.LastSeen) {
		var ret int32
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetLastSeenOk() (*int32, bool) {
	if o == nil || IsNil(o.LastSeen) {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasLastSeen() bool {
	if o != nil && !IsNil(o.LastSeen) {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given int32 and assigns it to the LastSeen field.
func (o *ApStatMeshDownlink) SetLastSeen(v int32) {
	o.LastSeen = &v
}

// GetProto returns the Proto field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetProto() string {
	if o == nil || IsNil(o.Proto) {
		var ret string
		return ret
	}
	return *o.Proto
}

// GetProtoOk returns a tuple with the Proto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetProtoOk() (*string, bool) {
	if o == nil || IsNil(o.Proto) {
		return nil, false
	}
	return o.Proto, true
}

// HasProto returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasProto() bool {
	if o != nil && !IsNil(o.Proto) {
		return true
	}

	return false
}

// SetProto gets a reference to the given string and assigns it to the Proto field.
func (o *ApStatMeshDownlink) SetProto(v string) {
	o.Proto = &v
}

// GetRssi returns the Rssi field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetRssi() int32 {
	if o == nil || IsNil(o.Rssi) {
		var ret int32
		return ret
	}
	return *o.Rssi
}

// GetRssiOk returns a tuple with the Rssi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetRssiOk() (*int32, bool) {
	if o == nil || IsNil(o.Rssi) {
		return nil, false
	}
	return o.Rssi, true
}

// HasRssi returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasRssi() bool {
	if o != nil && !IsNil(o.Rssi) {
		return true
	}

	return false
}

// SetRssi gets a reference to the given int32 and assigns it to the Rssi field.
func (o *ApStatMeshDownlink) SetRssi(v int32) {
	o.Rssi = &v
}

// GetRxBps returns the RxBps field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetRxBps() int32 {
	if o == nil || IsNil(o.RxBps) {
		var ret int32
		return ret
	}
	return *o.RxBps
}

// GetRxBpsOk returns a tuple with the RxBps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetRxBpsOk() (*int32, bool) {
	if o == nil || IsNil(o.RxBps) {
		return nil, false
	}
	return o.RxBps, true
}

// HasRxBps returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasRxBps() bool {
	if o != nil && !IsNil(o.RxBps) {
		return true
	}

	return false
}

// SetRxBps gets a reference to the given int32 and assigns it to the RxBps field.
func (o *ApStatMeshDownlink) SetRxBps(v int32) {
	o.RxBps = &v
}

// GetRxBytes returns the RxBytes field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetRxBytes() int32 {
	if o == nil || IsNil(o.RxBytes) {
		var ret int32
		return ret
	}
	return *o.RxBytes
}

// GetRxBytesOk returns a tuple with the RxBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetRxBytesOk() (*int32, bool) {
	if o == nil || IsNil(o.RxBytes) {
		return nil, false
	}
	return o.RxBytes, true
}

// HasRxBytes returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasRxBytes() bool {
	if o != nil && !IsNil(o.RxBytes) {
		return true
	}

	return false
}

// SetRxBytes gets a reference to the given int32 and assigns it to the RxBytes field.
func (o *ApStatMeshDownlink) SetRxBytes(v int32) {
	o.RxBytes = &v
}

// GetRxPackets returns the RxPackets field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetRxPackets() int32 {
	if o == nil || IsNil(o.RxPackets) {
		var ret int32
		return ret
	}
	return *o.RxPackets
}

// GetRxPacketsOk returns a tuple with the RxPackets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetRxPacketsOk() (*int32, bool) {
	if o == nil || IsNil(o.RxPackets) {
		return nil, false
	}
	return o.RxPackets, true
}

// HasRxPackets returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasRxPackets() bool {
	if o != nil && !IsNil(o.RxPackets) {
		return true
	}

	return false
}

// SetRxPackets gets a reference to the given int32 and assigns it to the RxPackets field.
func (o *ApStatMeshDownlink) SetRxPackets(v int32) {
	o.RxPackets = &v
}

// GetRxRate returns the RxRate field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetRxRate() int32 {
	if o == nil || IsNil(o.RxRate) {
		var ret int32
		return ret
	}
	return *o.RxRate
}

// GetRxRateOk returns a tuple with the RxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetRxRateOk() (*int32, bool) {
	if o == nil || IsNil(o.RxRate) {
		return nil, false
	}
	return o.RxRate, true
}

// HasRxRate returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasRxRate() bool {
	if o != nil && !IsNil(o.RxRate) {
		return true
	}

	return false
}

// SetRxRate gets a reference to the given int32 and assigns it to the RxRate field.
func (o *ApStatMeshDownlink) SetRxRate(v int32) {
	o.RxRate = &v
}

// GetRxRetries returns the RxRetries field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetRxRetries() int32 {
	if o == nil || IsNil(o.RxRetries) {
		var ret int32
		return ret
	}
	return *o.RxRetries
}

// GetRxRetriesOk returns a tuple with the RxRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetRxRetriesOk() (*int32, bool) {
	if o == nil || IsNil(o.RxRetries) {
		return nil, false
	}
	return o.RxRetries, true
}

// HasRxRetries returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasRxRetries() bool {
	if o != nil && !IsNil(o.RxRetries) {
		return true
	}

	return false
}

// SetRxRetries gets a reference to the given int32 and assigns it to the RxRetries field.
func (o *ApStatMeshDownlink) SetRxRetries(v int32) {
	o.RxRetries = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *ApStatMeshDownlink) SetSiteId(v string) {
	o.SiteId = &v
}

// GetSnr returns the Snr field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetSnr() int32 {
	if o == nil || IsNil(o.Snr) {
		var ret int32
		return ret
	}
	return *o.Snr
}

// GetSnrOk returns a tuple with the Snr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetSnrOk() (*int32, bool) {
	if o == nil || IsNil(o.Snr) {
		return nil, false
	}
	return o.Snr, true
}

// HasSnr returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasSnr() bool {
	if o != nil && !IsNil(o.Snr) {
		return true
	}

	return false
}

// SetSnr gets a reference to the given int32 and assigns it to the Snr field.
func (o *ApStatMeshDownlink) SetSnr(v int32) {
	o.Snr = &v
}

// GetTxBps returns the TxBps field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetTxBps() int32 {
	if o == nil || IsNil(o.TxBps) {
		var ret int32
		return ret
	}
	return *o.TxBps
}

// GetTxBpsOk returns a tuple with the TxBps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetTxBpsOk() (*int32, bool) {
	if o == nil || IsNil(o.TxBps) {
		return nil, false
	}
	return o.TxBps, true
}

// HasTxBps returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasTxBps() bool {
	if o != nil && !IsNil(o.TxBps) {
		return true
	}

	return false
}

// SetTxBps gets a reference to the given int32 and assigns it to the TxBps field.
func (o *ApStatMeshDownlink) SetTxBps(v int32) {
	o.TxBps = &v
}

// GetTxBytes returns the TxBytes field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetTxBytes() int32 {
	if o == nil || IsNil(o.TxBytes) {
		var ret int32
		return ret
	}
	return *o.TxBytes
}

// GetTxBytesOk returns a tuple with the TxBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetTxBytesOk() (*int32, bool) {
	if o == nil || IsNil(o.TxBytes) {
		return nil, false
	}
	return o.TxBytes, true
}

// HasTxBytes returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasTxBytes() bool {
	if o != nil && !IsNil(o.TxBytes) {
		return true
	}

	return false
}

// SetTxBytes gets a reference to the given int32 and assigns it to the TxBytes field.
func (o *ApStatMeshDownlink) SetTxBytes(v int32) {
	o.TxBytes = &v
}

// GetTxPackets returns the TxPackets field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetTxPackets() int32 {
	if o == nil || IsNil(o.TxPackets) {
		var ret int32
		return ret
	}
	return *o.TxPackets
}

// GetTxPacketsOk returns a tuple with the TxPackets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetTxPacketsOk() (*int32, bool) {
	if o == nil || IsNil(o.TxPackets) {
		return nil, false
	}
	return o.TxPackets, true
}

// HasTxPackets returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasTxPackets() bool {
	if o != nil && !IsNil(o.TxPackets) {
		return true
	}

	return false
}

// SetTxPackets gets a reference to the given int32 and assigns it to the TxPackets field.
func (o *ApStatMeshDownlink) SetTxPackets(v int32) {
	o.TxPackets = &v
}

// GetTxRate returns the TxRate field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetTxRate() int32 {
	if o == nil || IsNil(o.TxRate) {
		var ret int32
		return ret
	}
	return *o.TxRate
}

// GetTxRateOk returns a tuple with the TxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetTxRateOk() (*int32, bool) {
	if o == nil || IsNil(o.TxRate) {
		return nil, false
	}
	return o.TxRate, true
}

// HasTxRate returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasTxRate() bool {
	if o != nil && !IsNil(o.TxRate) {
		return true
	}

	return false
}

// SetTxRate gets a reference to the given int32 and assigns it to the TxRate field.
func (o *ApStatMeshDownlink) SetTxRate(v int32) {
	o.TxRate = &v
}

// GetTxRetries returns the TxRetries field value if set, zero value otherwise.
func (o *ApStatMeshDownlink) GetTxRetries() int32 {
	if o == nil || IsNil(o.TxRetries) {
		var ret int32
		return ret
	}
	return *o.TxRetries
}

// GetTxRetriesOk returns a tuple with the TxRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatMeshDownlink) GetTxRetriesOk() (*int32, bool) {
	if o == nil || IsNil(o.TxRetries) {
		return nil, false
	}
	return o.TxRetries, true
}

// HasTxRetries returns a boolean if a field has been set.
func (o *ApStatMeshDownlink) HasTxRetries() bool {
	if o != nil && !IsNil(o.TxRetries) {
		return true
	}

	return false
}

// SetTxRetries gets a reference to the given int32 and assigns it to the TxRetries field.
func (o *ApStatMeshDownlink) SetTxRetries(v int32) {
	o.TxRetries = &v
}

func (o ApStatMeshDownlink) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApStatMeshDownlink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Band) {
		toSerialize["band"] = o.Band
	}
	if !IsNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !IsNil(o.IdleTime) {
		toSerialize["idle_time"] = o.IdleTime
	}
	if !IsNil(o.LastSeen) {
		toSerialize["last_seen"] = o.LastSeen
	}
	if !IsNil(o.Proto) {
		toSerialize["proto"] = o.Proto
	}
	if !IsNil(o.Rssi) {
		toSerialize["rssi"] = o.Rssi
	}
	if !IsNil(o.RxBps) {
		toSerialize["rx_bps"] = o.RxBps
	}
	if !IsNil(o.RxBytes) {
		toSerialize["rx_bytes"] = o.RxBytes
	}
	if !IsNil(o.RxPackets) {
		toSerialize["rx_packets"] = o.RxPackets
	}
	if !IsNil(o.RxRate) {
		toSerialize["rx_rate"] = o.RxRate
	}
	if !IsNil(o.RxRetries) {
		toSerialize["rx_retries"] = o.RxRetries
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.Snr) {
		toSerialize["snr"] = o.Snr
	}
	if !IsNil(o.TxBps) {
		toSerialize["tx_bps"] = o.TxBps
	}
	if !IsNil(o.TxBytes) {
		toSerialize["tx_bytes"] = o.TxBytes
	}
	if !IsNil(o.TxPackets) {
		toSerialize["tx_packets"] = o.TxPackets
	}
	if !IsNil(o.TxRate) {
		toSerialize["tx_rate"] = o.TxRate
	}
	if !IsNil(o.TxRetries) {
		toSerialize["tx_retries"] = o.TxRetries
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApStatMeshDownlink) UnmarshalJSON(data []byte) (err error) {
	varApStatMeshDownlink := _ApStatMeshDownlink{}

	err = json.Unmarshal(data, &varApStatMeshDownlink)

	if err != nil {
		return err
	}

	*o = ApStatMeshDownlink(varApStatMeshDownlink)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "band")
		delete(additionalProperties, "channel")
		delete(additionalProperties, "idle_time")
		delete(additionalProperties, "last_seen")
		delete(additionalProperties, "proto")
		delete(additionalProperties, "rssi")
		delete(additionalProperties, "rx_bps")
		delete(additionalProperties, "rx_bytes")
		delete(additionalProperties, "rx_packets")
		delete(additionalProperties, "rx_rate")
		delete(additionalProperties, "rx_retries")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "snr")
		delete(additionalProperties, "tx_bps")
		delete(additionalProperties, "tx_bytes")
		delete(additionalProperties, "tx_packets")
		delete(additionalProperties, "tx_rate")
		delete(additionalProperties, "tx_retries")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApStatMeshDownlink struct {
	value *ApStatMeshDownlink
	isSet bool
}

func (v NullableApStatMeshDownlink) Get() *ApStatMeshDownlink {
	return v.value
}

func (v *NullableApStatMeshDownlink) Set(val *ApStatMeshDownlink) {
	v.value = val
	v.isSet = true
}

func (v NullableApStatMeshDownlink) IsSet() bool {
	return v.isSet
}

func (v *NullableApStatMeshDownlink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApStatMeshDownlink(val *ApStatMeshDownlink) *NullableApStatMeshDownlink {
	return &NullableApStatMeshDownlink{value: val, isSet: true}
}

func (v NullableApStatMeshDownlink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApStatMeshDownlink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


