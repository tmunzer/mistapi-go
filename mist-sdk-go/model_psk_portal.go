/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the PskPortal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PskPortal{}

// PskPortal struct for PskPortal
type PskPortal struct {
	Auth *PskPortalAuth `json:"auth,omitempty"`
	BgImageUrl *string `json:"bg_image_url,omitempty"`
	// used to cleanup exited psk when portal delete or ssid changed
	CleanupPsk *bool `json:"cleanup_psk,omitempty"`
	CreatedTime *int32 `json:"created_time,omitempty"`
	// unit min
	ExpireTime *int32 `json:"expire_time,omitempty"`
	// Number of days before psk is expired. Used as to when to start sending reminder notification when the psk is about to expire
	ExpiryNotificationTime *int32 `json:"expiry_notification_time,omitempty"`
	// only if `type`==`admin`
	HidePsksCreatedByOtherAdmins *bool `json:"hide_psks_created_by_other_admins,omitempty"`
	Id *string `json:"id,omitempty"`
	// `max_usage`==`0` means unlimited
	MaxUsage *int32 `json:"max_usage,omitempty"`
	ModifiedTime *int32 `json:"modified_time,omitempty"`
	Name string `json:"name"`
	// optional, will include the link in the notification email the customer can either provide their own url or use the one generate from mist, or do a url shorterner against either
	NotificationRenewUrl *string `json:"notification_renew_url,omitempty"`
	// If set to true, reminder notification will be sent when psk is about to expire
	NotifyExpiry *bool `json:"notify_expiry,omitempty"`
	NotifyOnCreateOrEdit *bool `json:"notify_on_create_or_edit,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	PassphraseRules *PskPortalPassphraseRules `json:"passphrase_rules,omitempty"`
	// what information to ask for (email is required by default)
	RequiredFields []string `json:"required_fields,omitempty"`
	Role *string `json:"role,omitempty"`
	// intended SSID
	Ssid string `json:"ssid"`
	Sso *PskPortalSso `json:"sso,omitempty"`
	// UI customization
	TemplateUrl *string `json:"template_url,omitempty"`
	ThumbnailUrl *string `json:"thumbnail_url,omitempty"`
	Type *PskPortalType `json:"type,omitempty"`
	VlanId *int32 `json:"vlan_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PskPortal PskPortal

// NewPskPortal instantiates a new PskPortal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPskPortal(name string, ssid string) *PskPortal {
	this := PskPortal{}
	var auth PskPortalAuth = PSKPORTALAUTH_SSO
	this.Auth = &auth
	var cleanupPsk bool = false
	this.CleanupPsk = &cleanupPsk
	var hidePsksCreatedByOtherAdmins bool = false
	this.HidePsksCreatedByOtherAdmins = &hidePsksCreatedByOtherAdmins
	var maxUsage int32 = 0
	this.MaxUsage = &maxUsage
	this.Name = name
	var notifyOnCreateOrEdit bool = false
	this.NotifyOnCreateOrEdit = &notifyOnCreateOrEdit
	this.Ssid = ssid
	return &this
}

// NewPskPortalWithDefaults instantiates a new PskPortal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPskPortalWithDefaults() *PskPortal {
	this := PskPortal{}
	var auth PskPortalAuth = PSKPORTALAUTH_SSO
	this.Auth = &auth
	var cleanupPsk bool = false
	this.CleanupPsk = &cleanupPsk
	var hidePsksCreatedByOtherAdmins bool = false
	this.HidePsksCreatedByOtherAdmins = &hidePsksCreatedByOtherAdmins
	var maxUsage int32 = 0
	this.MaxUsage = &maxUsage
	var notifyOnCreateOrEdit bool = false
	this.NotifyOnCreateOrEdit = &notifyOnCreateOrEdit
	return &this
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *PskPortal) GetAuth() PskPortalAuth {
	if o == nil || IsNil(o.Auth) {
		var ret PskPortalAuth
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetAuthOk() (*PskPortalAuth, bool) {
	if o == nil || IsNil(o.Auth) {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *PskPortal) HasAuth() bool {
	if o != nil && !IsNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given PskPortalAuth and assigns it to the Auth field.
func (o *PskPortal) SetAuth(v PskPortalAuth) {
	o.Auth = &v
}

// GetBgImageUrl returns the BgImageUrl field value if set, zero value otherwise.
func (o *PskPortal) GetBgImageUrl() string {
	if o == nil || IsNil(o.BgImageUrl) {
		var ret string
		return ret
	}
	return *o.BgImageUrl
}

// GetBgImageUrlOk returns a tuple with the BgImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetBgImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BgImageUrl) {
		return nil, false
	}
	return o.BgImageUrl, true
}

// HasBgImageUrl returns a boolean if a field has been set.
func (o *PskPortal) HasBgImageUrl() bool {
	if o != nil && !IsNil(o.BgImageUrl) {
		return true
	}

	return false
}

// SetBgImageUrl gets a reference to the given string and assigns it to the BgImageUrl field.
func (o *PskPortal) SetBgImageUrl(v string) {
	o.BgImageUrl = &v
}

// GetCleanupPsk returns the CleanupPsk field value if set, zero value otherwise.
func (o *PskPortal) GetCleanupPsk() bool {
	if o == nil || IsNil(o.CleanupPsk) {
		var ret bool
		return ret
	}
	return *o.CleanupPsk
}

// GetCleanupPskOk returns a tuple with the CleanupPsk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetCleanupPskOk() (*bool, bool) {
	if o == nil || IsNil(o.CleanupPsk) {
		return nil, false
	}
	return o.CleanupPsk, true
}

// HasCleanupPsk returns a boolean if a field has been set.
func (o *PskPortal) HasCleanupPsk() bool {
	if o != nil && !IsNil(o.CleanupPsk) {
		return true
	}

	return false
}

// SetCleanupPsk gets a reference to the given bool and assigns it to the CleanupPsk field.
func (o *PskPortal) SetCleanupPsk(v bool) {
	o.CleanupPsk = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *PskPortal) GetCreatedTime() int32 {
	if o == nil || IsNil(o.CreatedTime) {
		var ret int32
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetCreatedTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *PskPortal) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given int32 and assigns it to the CreatedTime field.
func (o *PskPortal) SetCreatedTime(v int32) {
	o.CreatedTime = &v
}

// GetExpireTime returns the ExpireTime field value if set, zero value otherwise.
func (o *PskPortal) GetExpireTime() int32 {
	if o == nil || IsNil(o.ExpireTime) {
		var ret int32
		return ret
	}
	return *o.ExpireTime
}

// GetExpireTimeOk returns a tuple with the ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetExpireTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpireTime) {
		return nil, false
	}
	return o.ExpireTime, true
}

// HasExpireTime returns a boolean if a field has been set.
func (o *PskPortal) HasExpireTime() bool {
	if o != nil && !IsNil(o.ExpireTime) {
		return true
	}

	return false
}

// SetExpireTime gets a reference to the given int32 and assigns it to the ExpireTime field.
func (o *PskPortal) SetExpireTime(v int32) {
	o.ExpireTime = &v
}

// GetExpiryNotificationTime returns the ExpiryNotificationTime field value if set, zero value otherwise.
func (o *PskPortal) GetExpiryNotificationTime() int32 {
	if o == nil || IsNil(o.ExpiryNotificationTime) {
		var ret int32
		return ret
	}
	return *o.ExpiryNotificationTime
}

// GetExpiryNotificationTimeOk returns a tuple with the ExpiryNotificationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetExpiryNotificationTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiryNotificationTime) {
		return nil, false
	}
	return o.ExpiryNotificationTime, true
}

// HasExpiryNotificationTime returns a boolean if a field has been set.
func (o *PskPortal) HasExpiryNotificationTime() bool {
	if o != nil && !IsNil(o.ExpiryNotificationTime) {
		return true
	}

	return false
}

// SetExpiryNotificationTime gets a reference to the given int32 and assigns it to the ExpiryNotificationTime field.
func (o *PskPortal) SetExpiryNotificationTime(v int32) {
	o.ExpiryNotificationTime = &v
}

// GetHidePsksCreatedByOtherAdmins returns the HidePsksCreatedByOtherAdmins field value if set, zero value otherwise.
func (o *PskPortal) GetHidePsksCreatedByOtherAdmins() bool {
	if o == nil || IsNil(o.HidePsksCreatedByOtherAdmins) {
		var ret bool
		return ret
	}
	return *o.HidePsksCreatedByOtherAdmins
}

// GetHidePsksCreatedByOtherAdminsOk returns a tuple with the HidePsksCreatedByOtherAdmins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetHidePsksCreatedByOtherAdminsOk() (*bool, bool) {
	if o == nil || IsNil(o.HidePsksCreatedByOtherAdmins) {
		return nil, false
	}
	return o.HidePsksCreatedByOtherAdmins, true
}

// HasHidePsksCreatedByOtherAdmins returns a boolean if a field has been set.
func (o *PskPortal) HasHidePsksCreatedByOtherAdmins() bool {
	if o != nil && !IsNil(o.HidePsksCreatedByOtherAdmins) {
		return true
	}

	return false
}

// SetHidePsksCreatedByOtherAdmins gets a reference to the given bool and assigns it to the HidePsksCreatedByOtherAdmins field.
func (o *PskPortal) SetHidePsksCreatedByOtherAdmins(v bool) {
	o.HidePsksCreatedByOtherAdmins = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PskPortal) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PskPortal) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PskPortal) SetId(v string) {
	o.Id = &v
}

// GetMaxUsage returns the MaxUsage field value if set, zero value otherwise.
func (o *PskPortal) GetMaxUsage() int32 {
	if o == nil || IsNil(o.MaxUsage) {
		var ret int32
		return ret
	}
	return *o.MaxUsage
}

// GetMaxUsageOk returns a tuple with the MaxUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetMaxUsageOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxUsage) {
		return nil, false
	}
	return o.MaxUsage, true
}

// HasMaxUsage returns a boolean if a field has been set.
func (o *PskPortal) HasMaxUsage() bool {
	if o != nil && !IsNil(o.MaxUsage) {
		return true
	}

	return false
}

// SetMaxUsage gets a reference to the given int32 and assigns it to the MaxUsage field.
func (o *PskPortal) SetMaxUsage(v int32) {
	o.MaxUsage = &v
}

// GetModifiedTime returns the ModifiedTime field value if set, zero value otherwise.
func (o *PskPortal) GetModifiedTime() int32 {
	if o == nil || IsNil(o.ModifiedTime) {
		var ret int32
		return ret
	}
	return *o.ModifiedTime
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetModifiedTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ModifiedTime) {
		return nil, false
	}
	return o.ModifiedTime, true
}

// HasModifiedTime returns a boolean if a field has been set.
func (o *PskPortal) HasModifiedTime() bool {
	if o != nil && !IsNil(o.ModifiedTime) {
		return true
	}

	return false
}

// SetModifiedTime gets a reference to the given int32 and assigns it to the ModifiedTime field.
func (o *PskPortal) SetModifiedTime(v int32) {
	o.ModifiedTime = &v
}

// GetName returns the Name field value
func (o *PskPortal) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PskPortal) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PskPortal) SetName(v string) {
	o.Name = v
}

// GetNotificationRenewUrl returns the NotificationRenewUrl field value if set, zero value otherwise.
func (o *PskPortal) GetNotificationRenewUrl() string {
	if o == nil || IsNil(o.NotificationRenewUrl) {
		var ret string
		return ret
	}
	return *o.NotificationRenewUrl
}

// GetNotificationRenewUrlOk returns a tuple with the NotificationRenewUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetNotificationRenewUrlOk() (*string, bool) {
	if o == nil || IsNil(o.NotificationRenewUrl) {
		return nil, false
	}
	return o.NotificationRenewUrl, true
}

// HasNotificationRenewUrl returns a boolean if a field has been set.
func (o *PskPortal) HasNotificationRenewUrl() bool {
	if o != nil && !IsNil(o.NotificationRenewUrl) {
		return true
	}

	return false
}

// SetNotificationRenewUrl gets a reference to the given string and assigns it to the NotificationRenewUrl field.
func (o *PskPortal) SetNotificationRenewUrl(v string) {
	o.NotificationRenewUrl = &v
}

// GetNotifyExpiry returns the NotifyExpiry field value if set, zero value otherwise.
func (o *PskPortal) GetNotifyExpiry() bool {
	if o == nil || IsNil(o.NotifyExpiry) {
		var ret bool
		return ret
	}
	return *o.NotifyExpiry
}

// GetNotifyExpiryOk returns a tuple with the NotifyExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetNotifyExpiryOk() (*bool, bool) {
	if o == nil || IsNil(o.NotifyExpiry) {
		return nil, false
	}
	return o.NotifyExpiry, true
}

// HasNotifyExpiry returns a boolean if a field has been set.
func (o *PskPortal) HasNotifyExpiry() bool {
	if o != nil && !IsNil(o.NotifyExpiry) {
		return true
	}

	return false
}

// SetNotifyExpiry gets a reference to the given bool and assigns it to the NotifyExpiry field.
func (o *PskPortal) SetNotifyExpiry(v bool) {
	o.NotifyExpiry = &v
}

// GetNotifyOnCreateOrEdit returns the NotifyOnCreateOrEdit field value if set, zero value otherwise.
func (o *PskPortal) GetNotifyOnCreateOrEdit() bool {
	if o == nil || IsNil(o.NotifyOnCreateOrEdit) {
		var ret bool
		return ret
	}
	return *o.NotifyOnCreateOrEdit
}

// GetNotifyOnCreateOrEditOk returns a tuple with the NotifyOnCreateOrEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetNotifyOnCreateOrEditOk() (*bool, bool) {
	if o == nil || IsNil(o.NotifyOnCreateOrEdit) {
		return nil, false
	}
	return o.NotifyOnCreateOrEdit, true
}

// HasNotifyOnCreateOrEdit returns a boolean if a field has been set.
func (o *PskPortal) HasNotifyOnCreateOrEdit() bool {
	if o != nil && !IsNil(o.NotifyOnCreateOrEdit) {
		return true
	}

	return false
}

// SetNotifyOnCreateOrEdit gets a reference to the given bool and assigns it to the NotifyOnCreateOrEdit field.
func (o *PskPortal) SetNotifyOnCreateOrEdit(v bool) {
	o.NotifyOnCreateOrEdit = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *PskPortal) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *PskPortal) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *PskPortal) SetOrgId(v string) {
	o.OrgId = &v
}

// GetPassphraseRules returns the PassphraseRules field value if set, zero value otherwise.
func (o *PskPortal) GetPassphraseRules() PskPortalPassphraseRules {
	if o == nil || IsNil(o.PassphraseRules) {
		var ret PskPortalPassphraseRules
		return ret
	}
	return *o.PassphraseRules
}

// GetPassphraseRulesOk returns a tuple with the PassphraseRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetPassphraseRulesOk() (*PskPortalPassphraseRules, bool) {
	if o == nil || IsNil(o.PassphraseRules) {
		return nil, false
	}
	return o.PassphraseRules, true
}

// HasPassphraseRules returns a boolean if a field has been set.
func (o *PskPortal) HasPassphraseRules() bool {
	if o != nil && !IsNil(o.PassphraseRules) {
		return true
	}

	return false
}

// SetPassphraseRules gets a reference to the given PskPortalPassphraseRules and assigns it to the PassphraseRules field.
func (o *PskPortal) SetPassphraseRules(v PskPortalPassphraseRules) {
	o.PassphraseRules = &v
}

// GetRequiredFields returns the RequiredFields field value if set, zero value otherwise.
func (o *PskPortal) GetRequiredFields() []string {
	if o == nil || IsNil(o.RequiredFields) {
		var ret []string
		return ret
	}
	return o.RequiredFields
}

// GetRequiredFieldsOk returns a tuple with the RequiredFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetRequiredFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.RequiredFields) {
		return nil, false
	}
	return o.RequiredFields, true
}

// HasRequiredFields returns a boolean if a field has been set.
func (o *PskPortal) HasRequiredFields() bool {
	if o != nil && !IsNil(o.RequiredFields) {
		return true
	}

	return false
}

// SetRequiredFields gets a reference to the given []string and assigns it to the RequiredFields field.
func (o *PskPortal) SetRequiredFields(v []string) {
	o.RequiredFields = v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *PskPortal) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *PskPortal) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *PskPortal) SetRole(v string) {
	o.Role = &v
}

// GetSsid returns the Ssid field value
func (o *PskPortal) GetSsid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value
// and a boolean to check if the value has been set.
func (o *PskPortal) GetSsidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ssid, true
}

// SetSsid sets field value
func (o *PskPortal) SetSsid(v string) {
	o.Ssid = v
}

// GetSso returns the Sso field value if set, zero value otherwise.
func (o *PskPortal) GetSso() PskPortalSso {
	if o == nil || IsNil(o.Sso) {
		var ret PskPortalSso
		return ret
	}
	return *o.Sso
}

// GetSsoOk returns a tuple with the Sso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetSsoOk() (*PskPortalSso, bool) {
	if o == nil || IsNil(o.Sso) {
		return nil, false
	}
	return o.Sso, true
}

// HasSso returns a boolean if a field has been set.
func (o *PskPortal) HasSso() bool {
	if o != nil && !IsNil(o.Sso) {
		return true
	}

	return false
}

// SetSso gets a reference to the given PskPortalSso and assigns it to the Sso field.
func (o *PskPortal) SetSso(v PskPortalSso) {
	o.Sso = &v
}

// GetTemplateUrl returns the TemplateUrl field value if set, zero value otherwise.
func (o *PskPortal) GetTemplateUrl() string {
	if o == nil || IsNil(o.TemplateUrl) {
		var ret string
		return ret
	}
	return *o.TemplateUrl
}

// GetTemplateUrlOk returns a tuple with the TemplateUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetTemplateUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateUrl) {
		return nil, false
	}
	return o.TemplateUrl, true
}

// HasTemplateUrl returns a boolean if a field has been set.
func (o *PskPortal) HasTemplateUrl() bool {
	if o != nil && !IsNil(o.TemplateUrl) {
		return true
	}

	return false
}

// SetTemplateUrl gets a reference to the given string and assigns it to the TemplateUrl field.
func (o *PskPortal) SetTemplateUrl(v string) {
	o.TemplateUrl = &v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise.
func (o *PskPortal) GetThumbnailUrl() string {
	if o == nil || IsNil(o.ThumbnailUrl) {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetThumbnailUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailUrl) {
		return nil, false
	}
	return o.ThumbnailUrl, true
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *PskPortal) HasThumbnailUrl() bool {
	if o != nil && !IsNil(o.ThumbnailUrl) {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given string and assigns it to the ThumbnailUrl field.
func (o *PskPortal) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PskPortal) GetType() PskPortalType {
	if o == nil || IsNil(o.Type) {
		var ret PskPortalType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetTypeOk() (*PskPortalType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PskPortal) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given PskPortalType and assigns it to the Type field.
func (o *PskPortal) SetType(v PskPortalType) {
	o.Type = &v
}

// GetVlanId returns the VlanId field value if set, zero value otherwise.
func (o *PskPortal) GetVlanId() int32 {
	if o == nil || IsNil(o.VlanId) {
		var ret int32
		return ret
	}
	return *o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortal) GetVlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanId) {
		return nil, false
	}
	return o.VlanId, true
}

// HasVlanId returns a boolean if a field has been set.
func (o *PskPortal) HasVlanId() bool {
	if o != nil && !IsNil(o.VlanId) {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given int32 and assigns it to the VlanId field.
func (o *PskPortal) SetVlanId(v int32) {
	o.VlanId = &v
}

func (o PskPortal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PskPortal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Auth) {
		toSerialize["auth"] = o.Auth
	}
	if !IsNil(o.BgImageUrl) {
		toSerialize["bg_image_url"] = o.BgImageUrl
	}
	if !IsNil(o.CleanupPsk) {
		toSerialize["cleanup_psk"] = o.CleanupPsk
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.ExpireTime) {
		toSerialize["expire_time"] = o.ExpireTime
	}
	if !IsNil(o.ExpiryNotificationTime) {
		toSerialize["expiry_notification_time"] = o.ExpiryNotificationTime
	}
	if !IsNil(o.HidePsksCreatedByOtherAdmins) {
		toSerialize["hide_psks_created_by_other_admins"] = o.HidePsksCreatedByOtherAdmins
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MaxUsage) {
		toSerialize["max_usage"] = o.MaxUsage
	}
	if !IsNil(o.ModifiedTime) {
		toSerialize["modified_time"] = o.ModifiedTime
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.NotificationRenewUrl) {
		toSerialize["notification_renew_url"] = o.NotificationRenewUrl
	}
	if !IsNil(o.NotifyExpiry) {
		toSerialize["notify_expiry"] = o.NotifyExpiry
	}
	if !IsNil(o.NotifyOnCreateOrEdit) {
		toSerialize["notify_on_create_or_edit"] = o.NotifyOnCreateOrEdit
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.PassphraseRules) {
		toSerialize["passphrase_rules"] = o.PassphraseRules
	}
	if !IsNil(o.RequiredFields) {
		toSerialize["required_fields"] = o.RequiredFields
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	toSerialize["ssid"] = o.Ssid
	if !IsNil(o.Sso) {
		toSerialize["sso"] = o.Sso
	}
	if !IsNil(o.TemplateUrl) {
		toSerialize["template_url"] = o.TemplateUrl
	}
	if !IsNil(o.ThumbnailUrl) {
		toSerialize["thumbnail_url"] = o.ThumbnailUrl
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.VlanId) {
		toSerialize["vlan_id"] = o.VlanId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PskPortal) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"ssid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPskPortal := _PskPortal{}

	err = json.Unmarshal(data, &varPskPortal)

	if err != nil {
		return err
	}

	*o = PskPortal(varPskPortal)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auth")
		delete(additionalProperties, "bg_image_url")
		delete(additionalProperties, "cleanup_psk")
		delete(additionalProperties, "created_time")
		delete(additionalProperties, "expire_time")
		delete(additionalProperties, "expiry_notification_time")
		delete(additionalProperties, "hide_psks_created_by_other_admins")
		delete(additionalProperties, "id")
		delete(additionalProperties, "max_usage")
		delete(additionalProperties, "modified_time")
		delete(additionalProperties, "name")
		delete(additionalProperties, "notification_renew_url")
		delete(additionalProperties, "notify_expiry")
		delete(additionalProperties, "notify_on_create_or_edit")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "passphrase_rules")
		delete(additionalProperties, "required_fields")
		delete(additionalProperties, "role")
		delete(additionalProperties, "ssid")
		delete(additionalProperties, "sso")
		delete(additionalProperties, "template_url")
		delete(additionalProperties, "thumbnail_url")
		delete(additionalProperties, "type")
		delete(additionalProperties, "vlan_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePskPortal struct {
	value *PskPortal
	isSet bool
}

func (v NullablePskPortal) Get() *PskPortal {
	return v.value
}

func (v *NullablePskPortal) Set(val *PskPortal) {
	v.value = val
	v.isSet = true
}

func (v NullablePskPortal) IsSet() bool {
	return v.isSet
}

func (v *NullablePskPortal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePskPortal(val *PskPortal) *NullablePskPortal {
	return &NullablePskPortal{value: val, isSet: true}
}

func (v NullablePskPortal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePskPortal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


