/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ResponseLoginSuccess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseLoginSuccess{}

// ResponseLoginSuccess struct for ResponseLoginSuccess
type ResponseLoginSuccess struct {
	Email *string `json:"email,omitempty"`
	TwoFactorPassed *bool `json:"two_factor_passed,omitempty"`
	TwoFactorRequired *bool `json:"two_factor_required,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResponseLoginSuccess ResponseLoginSuccess

// NewResponseLoginSuccess instantiates a new ResponseLoginSuccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseLoginSuccess() *ResponseLoginSuccess {
	this := ResponseLoginSuccess{}
	return &this
}

// NewResponseLoginSuccessWithDefaults instantiates a new ResponseLoginSuccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseLoginSuccessWithDefaults() *ResponseLoginSuccess {
	this := ResponseLoginSuccess{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ResponseLoginSuccess) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseLoginSuccess) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ResponseLoginSuccess) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ResponseLoginSuccess) SetEmail(v string) {
	o.Email = &v
}

// GetTwoFactorPassed returns the TwoFactorPassed field value if set, zero value otherwise.
func (o *ResponseLoginSuccess) GetTwoFactorPassed() bool {
	if o == nil || IsNil(o.TwoFactorPassed) {
		var ret bool
		return ret
	}
	return *o.TwoFactorPassed
}

// GetTwoFactorPassedOk returns a tuple with the TwoFactorPassed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseLoginSuccess) GetTwoFactorPassedOk() (*bool, bool) {
	if o == nil || IsNil(o.TwoFactorPassed) {
		return nil, false
	}
	return o.TwoFactorPassed, true
}

// HasTwoFactorPassed returns a boolean if a field has been set.
func (o *ResponseLoginSuccess) HasTwoFactorPassed() bool {
	if o != nil && !IsNil(o.TwoFactorPassed) {
		return true
	}

	return false
}

// SetTwoFactorPassed gets a reference to the given bool and assigns it to the TwoFactorPassed field.
func (o *ResponseLoginSuccess) SetTwoFactorPassed(v bool) {
	o.TwoFactorPassed = &v
}

// GetTwoFactorRequired returns the TwoFactorRequired field value if set, zero value otherwise.
func (o *ResponseLoginSuccess) GetTwoFactorRequired() bool {
	if o == nil || IsNil(o.TwoFactorRequired) {
		var ret bool
		return ret
	}
	return *o.TwoFactorRequired
}

// GetTwoFactorRequiredOk returns a tuple with the TwoFactorRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseLoginSuccess) GetTwoFactorRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.TwoFactorRequired) {
		return nil, false
	}
	return o.TwoFactorRequired, true
}

// HasTwoFactorRequired returns a boolean if a field has been set.
func (o *ResponseLoginSuccess) HasTwoFactorRequired() bool {
	if o != nil && !IsNil(o.TwoFactorRequired) {
		return true
	}

	return false
}

// SetTwoFactorRequired gets a reference to the given bool and assigns it to the TwoFactorRequired field.
func (o *ResponseLoginSuccess) SetTwoFactorRequired(v bool) {
	o.TwoFactorRequired = &v
}

func (o ResponseLoginSuccess) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseLoginSuccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.TwoFactorPassed) {
		toSerialize["two_factor_passed"] = o.TwoFactorPassed
	}
	if !IsNil(o.TwoFactorRequired) {
		toSerialize["two_factor_required"] = o.TwoFactorRequired
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResponseLoginSuccess) UnmarshalJSON(data []byte) (err error) {
	varResponseLoginSuccess := _ResponseLoginSuccess{}

	err = json.Unmarshal(data, &varResponseLoginSuccess)

	if err != nil {
		return err
	}

	*o = ResponseLoginSuccess(varResponseLoginSuccess)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "email")
		delete(additionalProperties, "two_factor_passed")
		delete(additionalProperties, "two_factor_required")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResponseLoginSuccess struct {
	value *ResponseLoginSuccess
	isSet bool
}

func (v NullableResponseLoginSuccess) Get() *ResponseLoginSuccess {
	return v.value
}

func (v *NullableResponseLoginSuccess) Set(val *ResponseLoginSuccess) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseLoginSuccess) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseLoginSuccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseLoginSuccess(val *ResponseLoginSuccess) *NullableResponseLoginSuccess {
	return &NullableResponseLoginSuccess{value: val, isSet: true}
}

func (v NullableResponseLoginSuccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseLoginSuccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


