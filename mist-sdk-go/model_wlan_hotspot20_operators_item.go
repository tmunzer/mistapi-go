/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// WlanHotspot20OperatorsItem the model 'WlanHotspot20OperatorsItem'
type WlanHotspot20OperatorsItem string

// List of wlan_hotspot20_operators_item
const (
	WLANHOTSPOT20OPERATORSITEM_EMPTY WlanHotspot20OperatorsItem = ""
	WLANHOTSPOT20OPERATORSITEM_AMERIBAND WlanHotspot20OperatorsItem = "ameriband"
	WLANHOTSPOT20OPERATORSITEM_ATT WlanHotspot20OperatorsItem = "att"
	WLANHOTSPOT20OPERATORSITEM_BOINGO WlanHotspot20OperatorsItem = "boingo"
	WLANHOTSPOT20OPERATORSITEM_CHARTER WlanHotspot20OperatorsItem = "charter"
	WLANHOTSPOT20OPERATORSITEM_EDUROAM WlanHotspot20OperatorsItem = "eduroam"
	WLANHOTSPOT20OPERATORSITEM_GLOBAL_REACH WlanHotspot20OperatorsItem = "global_reach"
	WLANHOTSPOT20OPERATORSITEM_GOOGLE WlanHotspot20OperatorsItem = "google"
	WLANHOTSPOT20OPERATORSITEM_HUGHES_SYSTIQUE WlanHotspot20OperatorsItem = "hughes_systique"
	WLANHOTSPOT20OPERATORSITEM_OPENROAMING_LEGACY WlanHotspot20OperatorsItem = "openroaming_legacy"
	WLANHOTSPOT20OPERATORSITEM_OPENROAMING_SETTLED WlanHotspot20OperatorsItem = "openroaming_settled"
	WLANHOTSPOT20OPERATORSITEM_OPENROAMING_SETTLEMENT_FREE WlanHotspot20OperatorsItem = "openroaming_settlement_free"
	WLANHOTSPOT20OPERATORSITEM_SINGLE_DIGITS WlanHotspot20OperatorsItem = "single_digits"
	WLANHOTSPOT20OPERATORSITEM_TMOBILE WlanHotspot20OperatorsItem = "tmobile"
	WLANHOTSPOT20OPERATORSITEM_VERIZON WlanHotspot20OperatorsItem = "verizon"
)

// All allowed values of WlanHotspot20OperatorsItem enum
var AllowedWlanHotspot20OperatorsItemEnumValues = []WlanHotspot20OperatorsItem{
	"",
	"ameriband",
	"att",
	"boingo",
	"charter",
	"eduroam",
	"global_reach",
	"google",
	"hughes_systique",
	"openroaming_legacy",
	"openroaming_settled",
	"openroaming_settlement_free",
	"single_digits",
	"tmobile",
	"verizon",
}

func (v *WlanHotspot20OperatorsItem) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WlanHotspot20OperatorsItem(value)
	for _, existing := range AllowedWlanHotspot20OperatorsItemEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WlanHotspot20OperatorsItem", value)
}

// NewWlanHotspot20OperatorsItemFromValue returns a pointer to a valid WlanHotspot20OperatorsItem
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWlanHotspot20OperatorsItemFromValue(v string) (*WlanHotspot20OperatorsItem, error) {
	ev := WlanHotspot20OperatorsItem(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WlanHotspot20OperatorsItem: valid values are %v", v, AllowedWlanHotspot20OperatorsItemEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WlanHotspot20OperatorsItem) IsValid() bool {
	for _, existing := range AllowedWlanHotspot20OperatorsItemEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to wlan_hotspot20_operators_item value
func (v WlanHotspot20OperatorsItem) Ptr() *WlanHotspot20OperatorsItem {
	return &v
}

type NullableWlanHotspot20OperatorsItem struct {
	value *WlanHotspot20OperatorsItem
	isSet bool
}

func (v NullableWlanHotspot20OperatorsItem) Get() *WlanHotspot20OperatorsItem {
	return v.value
}

func (v *NullableWlanHotspot20OperatorsItem) Set(val *WlanHotspot20OperatorsItem) {
	v.value = val
	v.isSet = true
}

func (v NullableWlanHotspot20OperatorsItem) IsSet() bool {
	return v.isSet
}

func (v *NullableWlanHotspot20OperatorsItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWlanHotspot20OperatorsItem(val *WlanHotspot20OperatorsItem) *NullableWlanHotspot20OperatorsItem {
	return &NullableWlanHotspot20OperatorsItem{value: val, isSet: true}
}

func (v NullableWlanHotspot20OperatorsItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWlanHotspot20OperatorsItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

