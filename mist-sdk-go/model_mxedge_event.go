/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the MxedgeEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MxedgeEvent{}

// MxedgeEvent struct for MxedgeEvent
type MxedgeEvent struct {
	MxclusterId *string `json:"mxcluster_id,omitempty"`
	MxedgeId *string `json:"mxedge_id,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	Service *string `json:"service,omitempty"`
	Timestamp *float32 `json:"timestamp,omitempty"`
	Type *string `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MxedgeEvent MxedgeEvent

// NewMxedgeEvent instantiates a new MxedgeEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMxedgeEvent() *MxedgeEvent {
	this := MxedgeEvent{}
	return &this
}

// NewMxedgeEventWithDefaults instantiates a new MxedgeEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMxedgeEventWithDefaults() *MxedgeEvent {
	this := MxedgeEvent{}
	return &this
}

// GetMxclusterId returns the MxclusterId field value if set, zero value otherwise.
func (o *MxedgeEvent) GetMxclusterId() string {
	if o == nil || IsNil(o.MxclusterId) {
		var ret string
		return ret
	}
	return *o.MxclusterId
}

// GetMxclusterIdOk returns a tuple with the MxclusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeEvent) GetMxclusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.MxclusterId) {
		return nil, false
	}
	return o.MxclusterId, true
}

// HasMxclusterId returns a boolean if a field has been set.
func (o *MxedgeEvent) HasMxclusterId() bool {
	if o != nil && !IsNil(o.MxclusterId) {
		return true
	}

	return false
}

// SetMxclusterId gets a reference to the given string and assigns it to the MxclusterId field.
func (o *MxedgeEvent) SetMxclusterId(v string) {
	o.MxclusterId = &v
}

// GetMxedgeId returns the MxedgeId field value if set, zero value otherwise.
func (o *MxedgeEvent) GetMxedgeId() string {
	if o == nil || IsNil(o.MxedgeId) {
		var ret string
		return ret
	}
	return *o.MxedgeId
}

// GetMxedgeIdOk returns a tuple with the MxedgeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeEvent) GetMxedgeIdOk() (*string, bool) {
	if o == nil || IsNil(o.MxedgeId) {
		return nil, false
	}
	return o.MxedgeId, true
}

// HasMxedgeId returns a boolean if a field has been set.
func (o *MxedgeEvent) HasMxedgeId() bool {
	if o != nil && !IsNil(o.MxedgeId) {
		return true
	}

	return false
}

// SetMxedgeId gets a reference to the given string and assigns it to the MxedgeId field.
func (o *MxedgeEvent) SetMxedgeId(v string) {
	o.MxedgeId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *MxedgeEvent) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeEvent) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *MxedgeEvent) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *MxedgeEvent) SetOrgId(v string) {
	o.OrgId = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *MxedgeEvent) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeEvent) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *MxedgeEvent) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *MxedgeEvent) SetService(v string) {
	o.Service = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *MxedgeEvent) GetTimestamp() float32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret float32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeEvent) GetTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *MxedgeEvent) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given float32 and assigns it to the Timestamp field.
func (o *MxedgeEvent) SetTimestamp(v float32) {
	o.Timestamp = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MxedgeEvent) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeEvent) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MxedgeEvent) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MxedgeEvent) SetType(v string) {
	o.Type = &v
}

func (o MxedgeEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MxedgeEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MxclusterId) {
		toSerialize["mxcluster_id"] = o.MxclusterId
	}
	if !IsNil(o.MxedgeId) {
		toSerialize["mxedge_id"] = o.MxedgeId
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MxedgeEvent) UnmarshalJSON(data []byte) (err error) {
	varMxedgeEvent := _MxedgeEvent{}

	err = json.Unmarshal(data, &varMxedgeEvent)

	if err != nil {
		return err
	}

	*o = MxedgeEvent(varMxedgeEvent)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mxcluster_id")
		delete(additionalProperties, "mxedge_id")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "service")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMxedgeEvent struct {
	value *MxedgeEvent
	isSet bool
}

func (v NullableMxedgeEvent) Get() *MxedgeEvent {
	return v.value
}

func (v *NullableMxedgeEvent) Set(val *MxedgeEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableMxedgeEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableMxedgeEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMxedgeEvent(val *MxedgeEvent) *NullableMxedgeEvent {
	return &NullableMxedgeEvent{value: val, isSet: true}
}

func (v NullableMxedgeEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMxedgeEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


