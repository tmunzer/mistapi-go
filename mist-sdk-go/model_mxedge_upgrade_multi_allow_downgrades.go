/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the MxedgeUpgradeMultiAllowDowngrades type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MxedgeUpgradeMultiAllowDowngrades{}

// MxedgeUpgradeMultiAllowDowngrades whether downgrade is allowed when running version is higher than expected version for each service
type MxedgeUpgradeMultiAllowDowngrades struct {
	Mxagent *bool `json:"mxagent,omitempty"`
	Mxdas *bool `json:"mxdas,omitempty"`
	Mxocproxy *bool `json:"mxocproxy,omitempty"`
	Radsecproxy *bool `json:"radsecproxy,omitempty"`
	Tunterm *bool `json:"tunterm,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MxedgeUpgradeMultiAllowDowngrades MxedgeUpgradeMultiAllowDowngrades

// NewMxedgeUpgradeMultiAllowDowngrades instantiates a new MxedgeUpgradeMultiAllowDowngrades object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMxedgeUpgradeMultiAllowDowngrades() *MxedgeUpgradeMultiAllowDowngrades {
	this := MxedgeUpgradeMultiAllowDowngrades{}
	var mxagent bool = false
	this.Mxagent = &mxagent
	var mxdas bool = false
	this.Mxdas = &mxdas
	var mxocproxy bool = false
	this.Mxocproxy = &mxocproxy
	var radsecproxy bool = false
	this.Radsecproxy = &radsecproxy
	var tunterm bool = false
	this.Tunterm = &tunterm
	return &this
}

// NewMxedgeUpgradeMultiAllowDowngradesWithDefaults instantiates a new MxedgeUpgradeMultiAllowDowngrades object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMxedgeUpgradeMultiAllowDowngradesWithDefaults() *MxedgeUpgradeMultiAllowDowngrades {
	this := MxedgeUpgradeMultiAllowDowngrades{}
	var mxagent bool = false
	this.Mxagent = &mxagent
	var mxdas bool = false
	this.Mxdas = &mxdas
	var mxocproxy bool = false
	this.Mxocproxy = &mxocproxy
	var radsecproxy bool = false
	this.Radsecproxy = &radsecproxy
	var tunterm bool = false
	this.Tunterm = &tunterm
	return &this
}

// GetMxagent returns the Mxagent field value if set, zero value otherwise.
func (o *MxedgeUpgradeMultiAllowDowngrades) GetMxagent() bool {
	if o == nil || IsNil(o.Mxagent) {
		var ret bool
		return ret
	}
	return *o.Mxagent
}

// GetMxagentOk returns a tuple with the Mxagent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeUpgradeMultiAllowDowngrades) GetMxagentOk() (*bool, bool) {
	if o == nil || IsNil(o.Mxagent) {
		return nil, false
	}
	return o.Mxagent, true
}

// HasMxagent returns a boolean if a field has been set.
func (o *MxedgeUpgradeMultiAllowDowngrades) HasMxagent() bool {
	if o != nil && !IsNil(o.Mxagent) {
		return true
	}

	return false
}

// SetMxagent gets a reference to the given bool and assigns it to the Mxagent field.
func (o *MxedgeUpgradeMultiAllowDowngrades) SetMxagent(v bool) {
	o.Mxagent = &v
}

// GetMxdas returns the Mxdas field value if set, zero value otherwise.
func (o *MxedgeUpgradeMultiAllowDowngrades) GetMxdas() bool {
	if o == nil || IsNil(o.Mxdas) {
		var ret bool
		return ret
	}
	return *o.Mxdas
}

// GetMxdasOk returns a tuple with the Mxdas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeUpgradeMultiAllowDowngrades) GetMxdasOk() (*bool, bool) {
	if o == nil || IsNil(o.Mxdas) {
		return nil, false
	}
	return o.Mxdas, true
}

// HasMxdas returns a boolean if a field has been set.
func (o *MxedgeUpgradeMultiAllowDowngrades) HasMxdas() bool {
	if o != nil && !IsNil(o.Mxdas) {
		return true
	}

	return false
}

// SetMxdas gets a reference to the given bool and assigns it to the Mxdas field.
func (o *MxedgeUpgradeMultiAllowDowngrades) SetMxdas(v bool) {
	o.Mxdas = &v
}

// GetMxocproxy returns the Mxocproxy field value if set, zero value otherwise.
func (o *MxedgeUpgradeMultiAllowDowngrades) GetMxocproxy() bool {
	if o == nil || IsNil(o.Mxocproxy) {
		var ret bool
		return ret
	}
	return *o.Mxocproxy
}

// GetMxocproxyOk returns a tuple with the Mxocproxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeUpgradeMultiAllowDowngrades) GetMxocproxyOk() (*bool, bool) {
	if o == nil || IsNil(o.Mxocproxy) {
		return nil, false
	}
	return o.Mxocproxy, true
}

// HasMxocproxy returns a boolean if a field has been set.
func (o *MxedgeUpgradeMultiAllowDowngrades) HasMxocproxy() bool {
	if o != nil && !IsNil(o.Mxocproxy) {
		return true
	}

	return false
}

// SetMxocproxy gets a reference to the given bool and assigns it to the Mxocproxy field.
func (o *MxedgeUpgradeMultiAllowDowngrades) SetMxocproxy(v bool) {
	o.Mxocproxy = &v
}

// GetRadsecproxy returns the Radsecproxy field value if set, zero value otherwise.
func (o *MxedgeUpgradeMultiAllowDowngrades) GetRadsecproxy() bool {
	if o == nil || IsNil(o.Radsecproxy) {
		var ret bool
		return ret
	}
	return *o.Radsecproxy
}

// GetRadsecproxyOk returns a tuple with the Radsecproxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeUpgradeMultiAllowDowngrades) GetRadsecproxyOk() (*bool, bool) {
	if o == nil || IsNil(o.Radsecproxy) {
		return nil, false
	}
	return o.Radsecproxy, true
}

// HasRadsecproxy returns a boolean if a field has been set.
func (o *MxedgeUpgradeMultiAllowDowngrades) HasRadsecproxy() bool {
	if o != nil && !IsNil(o.Radsecproxy) {
		return true
	}

	return false
}

// SetRadsecproxy gets a reference to the given bool and assigns it to the Radsecproxy field.
func (o *MxedgeUpgradeMultiAllowDowngrades) SetRadsecproxy(v bool) {
	o.Radsecproxy = &v
}

// GetTunterm returns the Tunterm field value if set, zero value otherwise.
func (o *MxedgeUpgradeMultiAllowDowngrades) GetTunterm() bool {
	if o == nil || IsNil(o.Tunterm) {
		var ret bool
		return ret
	}
	return *o.Tunterm
}

// GetTuntermOk returns a tuple with the Tunterm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeUpgradeMultiAllowDowngrades) GetTuntermOk() (*bool, bool) {
	if o == nil || IsNil(o.Tunterm) {
		return nil, false
	}
	return o.Tunterm, true
}

// HasTunterm returns a boolean if a field has been set.
func (o *MxedgeUpgradeMultiAllowDowngrades) HasTunterm() bool {
	if o != nil && !IsNil(o.Tunterm) {
		return true
	}

	return false
}

// SetTunterm gets a reference to the given bool and assigns it to the Tunterm field.
func (o *MxedgeUpgradeMultiAllowDowngrades) SetTunterm(v bool) {
	o.Tunterm = &v
}

func (o MxedgeUpgradeMultiAllowDowngrades) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MxedgeUpgradeMultiAllowDowngrades) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mxagent) {
		toSerialize["mxagent"] = o.Mxagent
	}
	if !IsNil(o.Mxdas) {
		toSerialize["mxdas"] = o.Mxdas
	}
	if !IsNil(o.Mxocproxy) {
		toSerialize["mxocproxy"] = o.Mxocproxy
	}
	if !IsNil(o.Radsecproxy) {
		toSerialize["radsecproxy"] = o.Radsecproxy
	}
	if !IsNil(o.Tunterm) {
		toSerialize["tunterm"] = o.Tunterm
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MxedgeUpgradeMultiAllowDowngrades) UnmarshalJSON(data []byte) (err error) {
	varMxedgeUpgradeMultiAllowDowngrades := _MxedgeUpgradeMultiAllowDowngrades{}

	err = json.Unmarshal(data, &varMxedgeUpgradeMultiAllowDowngrades)

	if err != nil {
		return err
	}

	*o = MxedgeUpgradeMultiAllowDowngrades(varMxedgeUpgradeMultiAllowDowngrades)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mxagent")
		delete(additionalProperties, "mxdas")
		delete(additionalProperties, "mxocproxy")
		delete(additionalProperties, "radsecproxy")
		delete(additionalProperties, "tunterm")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMxedgeUpgradeMultiAllowDowngrades struct {
	value *MxedgeUpgradeMultiAllowDowngrades
	isSet bool
}

func (v NullableMxedgeUpgradeMultiAllowDowngrades) Get() *MxedgeUpgradeMultiAllowDowngrades {
	return v.value
}

func (v *NullableMxedgeUpgradeMultiAllowDowngrades) Set(val *MxedgeUpgradeMultiAllowDowngrades) {
	v.value = val
	v.isSet = true
}

func (v NullableMxedgeUpgradeMultiAllowDowngrades) IsSet() bool {
	return v.isSet
}

func (v *NullableMxedgeUpgradeMultiAllowDowngrades) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMxedgeUpgradeMultiAllowDowngrades(val *MxedgeUpgradeMultiAllowDowngrades) *NullableMxedgeUpgradeMultiAllowDowngrades {
	return &NullableMxedgeUpgradeMultiAllowDowngrades{value: val, isSet: true}
}

func (v NullableMxedgeUpgradeMultiAllowDowngrades) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMxedgeUpgradeMultiAllowDowngrades) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


