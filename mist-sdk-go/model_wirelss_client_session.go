/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the WirelssClientSession type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WirelssClientSession{}

// WirelssClientSession struct for WirelssClientSession
type WirelssClientSession struct {
	Ap string `json:"ap"`
	Band string `json:"band"`
	ClientManufacture NullableString `json:"client_manufacture"`
	Connect int32 `json:"connect"`
	Disconnect int32 `json:"disconnect"`
	Duration float32 `json:"duration"`
	ForSite *bool `json:"for_site,omitempty"`
	Mac string `json:"mac"`
	OrgId string `json:"org_id"`
	SiteId string `json:"site_id"`
	Ssid string `json:"ssid"`
	Tags []string `json:"tags,omitempty"`
	Timestamp float32 `json:"timestamp"`
	WlanId string `json:"wlan_id"`
	AdditionalProperties map[string]interface{}
}

type _WirelssClientSession WirelssClientSession

// NewWirelssClientSession instantiates a new WirelssClientSession object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWirelssClientSession(ap string, band string, clientManufacture NullableString, connect int32, disconnect int32, duration float32, mac string, orgId string, siteId string, ssid string, timestamp float32, wlanId string) *WirelssClientSession {
	this := WirelssClientSession{}
	this.Ap = ap
	this.Band = band
	this.ClientManufacture = clientManufacture
	this.Connect = connect
	this.Disconnect = disconnect
	this.Duration = duration
	this.Mac = mac
	this.OrgId = orgId
	this.SiteId = siteId
	this.Ssid = ssid
	this.Timestamp = timestamp
	this.WlanId = wlanId
	return &this
}

// NewWirelssClientSessionWithDefaults instantiates a new WirelssClientSession object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWirelssClientSessionWithDefaults() *WirelssClientSession {
	this := WirelssClientSession{}
	return &this
}

// GetAp returns the Ap field value
func (o *WirelssClientSession) GetAp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ap
}

// GetApOk returns a tuple with the Ap field value
// and a boolean to check if the value has been set.
func (o *WirelssClientSession) GetApOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ap, true
}

// SetAp sets field value
func (o *WirelssClientSession) SetAp(v string) {
	o.Ap = v
}

// GetBand returns the Band field value
func (o *WirelssClientSession) GetBand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Band
}

// GetBandOk returns a tuple with the Band field value
// and a boolean to check if the value has been set.
func (o *WirelssClientSession) GetBandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Band, true
}

// SetBand sets field value
func (o *WirelssClientSession) SetBand(v string) {
	o.Band = v
}

// GetClientManufacture returns the ClientManufacture field value
// If the value is explicit nil, the zero value for string will be returned
func (o *WirelssClientSession) GetClientManufacture() string {
	if o == nil || o.ClientManufacture.Get() == nil {
		var ret string
		return ret
	}

	return *o.ClientManufacture.Get()
}

// GetClientManufactureOk returns a tuple with the ClientManufacture field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WirelssClientSession) GetClientManufactureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientManufacture.Get(), o.ClientManufacture.IsSet()
}

// SetClientManufacture sets field value
func (o *WirelssClientSession) SetClientManufacture(v string) {
	o.ClientManufacture.Set(&v)
}

// GetConnect returns the Connect field value
func (o *WirelssClientSession) GetConnect() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Connect
}

// GetConnectOk returns a tuple with the Connect field value
// and a boolean to check if the value has been set.
func (o *WirelssClientSession) GetConnectOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Connect, true
}

// SetConnect sets field value
func (o *WirelssClientSession) SetConnect(v int32) {
	o.Connect = v
}

// GetDisconnect returns the Disconnect field value
func (o *WirelssClientSession) GetDisconnect() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Disconnect
}

// GetDisconnectOk returns a tuple with the Disconnect field value
// and a boolean to check if the value has been set.
func (o *WirelssClientSession) GetDisconnectOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disconnect, true
}

// SetDisconnect sets field value
func (o *WirelssClientSession) SetDisconnect(v int32) {
	o.Disconnect = v
}

// GetDuration returns the Duration field value
func (o *WirelssClientSession) GetDuration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *WirelssClientSession) GetDurationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *WirelssClientSession) SetDuration(v float32) {
	o.Duration = v
}

// GetForSite returns the ForSite field value if set, zero value otherwise.
func (o *WirelssClientSession) GetForSite() bool {
	if o == nil || IsNil(o.ForSite) {
		var ret bool
		return ret
	}
	return *o.ForSite
}

// GetForSiteOk returns a tuple with the ForSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WirelssClientSession) GetForSiteOk() (*bool, bool) {
	if o == nil || IsNil(o.ForSite) {
		return nil, false
	}
	return o.ForSite, true
}

// HasForSite returns a boolean if a field has been set.
func (o *WirelssClientSession) HasForSite() bool {
	if o != nil && !IsNil(o.ForSite) {
		return true
	}

	return false
}

// SetForSite gets a reference to the given bool and assigns it to the ForSite field.
func (o *WirelssClientSession) SetForSite(v bool) {
	o.ForSite = &v
}

// GetMac returns the Mac field value
func (o *WirelssClientSession) GetMac() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mac
}

// GetMacOk returns a tuple with the Mac field value
// and a boolean to check if the value has been set.
func (o *WirelssClientSession) GetMacOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mac, true
}

// SetMac sets field value
func (o *WirelssClientSession) SetMac(v string) {
	o.Mac = v
}

// GetOrgId returns the OrgId field value
func (o *WirelssClientSession) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *WirelssClientSession) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *WirelssClientSession) SetOrgId(v string) {
	o.OrgId = v
}

// GetSiteId returns the SiteId field value
func (o *WirelssClientSession) GetSiteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value
// and a boolean to check if the value has been set.
func (o *WirelssClientSession) GetSiteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteId, true
}

// SetSiteId sets field value
func (o *WirelssClientSession) SetSiteId(v string) {
	o.SiteId = v
}

// GetSsid returns the Ssid field value
func (o *WirelssClientSession) GetSsid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value
// and a boolean to check if the value has been set.
func (o *WirelssClientSession) GetSsidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ssid, true
}

// SetSsid sets field value
func (o *WirelssClientSession) SetSsid(v string) {
	o.Ssid = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *WirelssClientSession) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WirelssClientSession) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *WirelssClientSession) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *WirelssClientSession) SetTags(v []string) {
	o.Tags = v
}

// GetTimestamp returns the Timestamp field value
func (o *WirelssClientSession) GetTimestamp() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *WirelssClientSession) GetTimestampOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *WirelssClientSession) SetTimestamp(v float32) {
	o.Timestamp = v
}

// GetWlanId returns the WlanId field value
func (o *WirelssClientSession) GetWlanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WlanId
}

// GetWlanIdOk returns a tuple with the WlanId field value
// and a boolean to check if the value has been set.
func (o *WirelssClientSession) GetWlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WlanId, true
}

// SetWlanId sets field value
func (o *WirelssClientSession) SetWlanId(v string) {
	o.WlanId = v
}

func (o WirelssClientSession) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WirelssClientSession) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ap"] = o.Ap
	toSerialize["band"] = o.Band
	toSerialize["client_manufacture"] = o.ClientManufacture.Get()
	toSerialize["connect"] = o.Connect
	toSerialize["disconnect"] = o.Disconnect
	toSerialize["duration"] = o.Duration
	if !IsNil(o.ForSite) {
		toSerialize["for_site"] = o.ForSite
	}
	toSerialize["mac"] = o.Mac
	toSerialize["org_id"] = o.OrgId
	toSerialize["site_id"] = o.SiteId
	toSerialize["ssid"] = o.Ssid
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["wlan_id"] = o.WlanId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WirelssClientSession) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ap",
		"band",
		"client_manufacture",
		"connect",
		"disconnect",
		"duration",
		"mac",
		"org_id",
		"site_id",
		"ssid",
		"timestamp",
		"wlan_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWirelssClientSession := _WirelssClientSession{}

	err = json.Unmarshal(data, &varWirelssClientSession)

	if err != nil {
		return err
	}

	*o = WirelssClientSession(varWirelssClientSession)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ap")
		delete(additionalProperties, "band")
		delete(additionalProperties, "client_manufacture")
		delete(additionalProperties, "connect")
		delete(additionalProperties, "disconnect")
		delete(additionalProperties, "duration")
		delete(additionalProperties, "for_site")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "ssid")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "wlan_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWirelssClientSession struct {
	value *WirelssClientSession
	isSet bool
}

func (v NullableWirelssClientSession) Get() *WirelssClientSession {
	return v.value
}

func (v *NullableWirelssClientSession) Set(val *WirelssClientSession) {
	v.value = val
	v.isSet = true
}

func (v NullableWirelssClientSession) IsSet() bool {
	return v.isSet
}

func (v *NullableWirelssClientSession) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWirelssClientSession(val *WirelssClientSession) *NullableWirelssClientSession {
	return &NullableWirelssClientSession{value: val, isSet: true}
}

func (v NullableWirelssClientSession) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWirelssClientSession) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


