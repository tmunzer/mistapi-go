/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ConstOtherDeviceModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConstOtherDeviceModel{}

// ConstOtherDeviceModel struct for ConstOtherDeviceModel
type ConstOtherDeviceModel struct {
	VendorModelId *string `json:"_vendor_model_id,omitempty"`
	Display *string `json:"display,omitempty"`
	Model *string `json:"model,omitempty"`
	Type *string `json:"type,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConstOtherDeviceModel ConstOtherDeviceModel

// NewConstOtherDeviceModel instantiates a new ConstOtherDeviceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConstOtherDeviceModel() *ConstOtherDeviceModel {
	this := ConstOtherDeviceModel{}
	return &this
}

// NewConstOtherDeviceModelWithDefaults instantiates a new ConstOtherDeviceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConstOtherDeviceModelWithDefaults() *ConstOtherDeviceModel {
	this := ConstOtherDeviceModel{}
	return &this
}

// GetVendorModelId returns the VendorModelId field value if set, zero value otherwise.
func (o *ConstOtherDeviceModel) GetVendorModelId() string {
	if o == nil || IsNil(o.VendorModelId) {
		var ret string
		return ret
	}
	return *o.VendorModelId
}

// GetVendorModelIdOk returns a tuple with the VendorModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstOtherDeviceModel) GetVendorModelIdOk() (*string, bool) {
	if o == nil || IsNil(o.VendorModelId) {
		return nil, false
	}
	return o.VendorModelId, true
}

// HasVendorModelId returns a boolean if a field has been set.
func (o *ConstOtherDeviceModel) HasVendorModelId() bool {
	if o != nil && !IsNil(o.VendorModelId) {
		return true
	}

	return false
}

// SetVendorModelId gets a reference to the given string and assigns it to the VendorModelId field.
func (o *ConstOtherDeviceModel) SetVendorModelId(v string) {
	o.VendorModelId = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *ConstOtherDeviceModel) GetDisplay() string {
	if o == nil || IsNil(o.Display) {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstOtherDeviceModel) GetDisplayOk() (*string, bool) {
	if o == nil || IsNil(o.Display) {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *ConstOtherDeviceModel) HasDisplay() bool {
	if o != nil && !IsNil(o.Display) {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *ConstOtherDeviceModel) SetDisplay(v string) {
	o.Display = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *ConstOtherDeviceModel) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstOtherDeviceModel) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *ConstOtherDeviceModel) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *ConstOtherDeviceModel) SetModel(v string) {
	o.Model = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ConstOtherDeviceModel) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstOtherDeviceModel) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ConstOtherDeviceModel) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ConstOtherDeviceModel) SetType(v string) {
	o.Type = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *ConstOtherDeviceModel) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstOtherDeviceModel) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *ConstOtherDeviceModel) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *ConstOtherDeviceModel) SetVendor(v string) {
	o.Vendor = &v
}

func (o ConstOtherDeviceModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConstOtherDeviceModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VendorModelId) {
		toSerialize["_vendor_model_id"] = o.VendorModelId
	}
	if !IsNil(o.Display) {
		toSerialize["display"] = o.Display
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConstOtherDeviceModel) UnmarshalJSON(data []byte) (err error) {
	varConstOtherDeviceModel := _ConstOtherDeviceModel{}

	err = json.Unmarshal(data, &varConstOtherDeviceModel)

	if err != nil {
		return err
	}

	*o = ConstOtherDeviceModel(varConstOtherDeviceModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "_vendor_model_id")
		delete(additionalProperties, "display")
		delete(additionalProperties, "model")
		delete(additionalProperties, "type")
		delete(additionalProperties, "vendor")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConstOtherDeviceModel struct {
	value *ConstOtherDeviceModel
	isSet bool
}

func (v NullableConstOtherDeviceModel) Get() *ConstOtherDeviceModel {
	return v.value
}

func (v *NullableConstOtherDeviceModel) Set(val *ConstOtherDeviceModel) {
	v.value = val
	v.isSet = true
}

func (v NullableConstOtherDeviceModel) IsSet() bool {
	return v.isSet
}

func (v *NullableConstOtherDeviceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConstOtherDeviceModel(val *ConstOtherDeviceModel) *NullableConstOtherDeviceModel {
	return &NullableConstOtherDeviceModel{value: val, isSet: true}
}

func (v NullableConstOtherDeviceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConstOtherDeviceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


