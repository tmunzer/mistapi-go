/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the GatewayTemplatePathPreferencesPath type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayTemplatePathPreferencesPath{}

// GatewayTemplatePathPreferencesPath struct for GatewayTemplatePathPreferencesPath
type GatewayTemplatePathPreferencesPath struct {
	Cost *int32 `json:"cost,omitempty"`
	// For SSR Only. `true`` if this specific path is undesired
	Disabled *bool `json:"disabled,omitempty"`
	// if `type`==`local`, if a different gateway is desired
	GatewayIp *string `json:"gateway_ip,omitempty"`
	// when `type`==`vpn`, if this vpn path can be used for internet
	InternetAccess *bool `json:"internet_access,omitempty"`
	Name *string `json:"name,omitempty"`
	// if `type`==`local`
	Networks []string `json:"networks,omitempty"`
	// if `type`==`local`, if destination IP is to be replaced
	TargetIps []string `json:"target_ips,omitempty"`
	Type *GatewayPathType `json:"type,omitempty"`
	// Spoke's outgoing wan
	WanName *string `json:"wan_name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayTemplatePathPreferencesPath GatewayTemplatePathPreferencesPath

// NewGatewayTemplatePathPreferencesPath instantiates a new GatewayTemplatePathPreferencesPath object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayTemplatePathPreferencesPath() *GatewayTemplatePathPreferencesPath {
	this := GatewayTemplatePathPreferencesPath{}
	var internetAccess bool = false
	this.InternetAccess = &internetAccess
	return &this
}

// NewGatewayTemplatePathPreferencesPathWithDefaults instantiates a new GatewayTemplatePathPreferencesPath object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayTemplatePathPreferencesPathWithDefaults() *GatewayTemplatePathPreferencesPath {
	this := GatewayTemplatePathPreferencesPath{}
	var internetAccess bool = false
	this.InternetAccess = &internetAccess
	return &this
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *GatewayTemplatePathPreferencesPath) GetCost() int32 {
	if o == nil || IsNil(o.Cost) {
		var ret int32
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplatePathPreferencesPath) GetCostOk() (*int32, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *GatewayTemplatePathPreferencesPath) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given int32 and assigns it to the Cost field.
func (o *GatewayTemplatePathPreferencesPath) SetCost(v int32) {
	o.Cost = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *GatewayTemplatePathPreferencesPath) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplatePathPreferencesPath) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *GatewayTemplatePathPreferencesPath) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *GatewayTemplatePathPreferencesPath) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetGatewayIp returns the GatewayIp field value if set, zero value otherwise.
func (o *GatewayTemplatePathPreferencesPath) GetGatewayIp() string {
	if o == nil || IsNil(o.GatewayIp) {
		var ret string
		return ret
	}
	return *o.GatewayIp
}

// GetGatewayIpOk returns a tuple with the GatewayIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplatePathPreferencesPath) GetGatewayIpOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayIp) {
		return nil, false
	}
	return o.GatewayIp, true
}

// HasGatewayIp returns a boolean if a field has been set.
func (o *GatewayTemplatePathPreferencesPath) HasGatewayIp() bool {
	if o != nil && !IsNil(o.GatewayIp) {
		return true
	}

	return false
}

// SetGatewayIp gets a reference to the given string and assigns it to the GatewayIp field.
func (o *GatewayTemplatePathPreferencesPath) SetGatewayIp(v string) {
	o.GatewayIp = &v
}

// GetInternetAccess returns the InternetAccess field value if set, zero value otherwise.
func (o *GatewayTemplatePathPreferencesPath) GetInternetAccess() bool {
	if o == nil || IsNil(o.InternetAccess) {
		var ret bool
		return ret
	}
	return *o.InternetAccess
}

// GetInternetAccessOk returns a tuple with the InternetAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplatePathPreferencesPath) GetInternetAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.InternetAccess) {
		return nil, false
	}
	return o.InternetAccess, true
}

// HasInternetAccess returns a boolean if a field has been set.
func (o *GatewayTemplatePathPreferencesPath) HasInternetAccess() bool {
	if o != nil && !IsNil(o.InternetAccess) {
		return true
	}

	return false
}

// SetInternetAccess gets a reference to the given bool and assigns it to the InternetAccess field.
func (o *GatewayTemplatePathPreferencesPath) SetInternetAccess(v bool) {
	o.InternetAccess = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GatewayTemplatePathPreferencesPath) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplatePathPreferencesPath) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GatewayTemplatePathPreferencesPath) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GatewayTemplatePathPreferencesPath) SetName(v string) {
	o.Name = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *GatewayTemplatePathPreferencesPath) GetNetworks() []string {
	if o == nil || IsNil(o.Networks) {
		var ret []string
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplatePathPreferencesPath) GetNetworksOk() ([]string, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *GatewayTemplatePathPreferencesPath) HasNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []string and assigns it to the Networks field.
func (o *GatewayTemplatePathPreferencesPath) SetNetworks(v []string) {
	o.Networks = v
}

// GetTargetIps returns the TargetIps field value if set, zero value otherwise.
func (o *GatewayTemplatePathPreferencesPath) GetTargetIps() []string {
	if o == nil || IsNil(o.TargetIps) {
		var ret []string
		return ret
	}
	return o.TargetIps
}

// GetTargetIpsOk returns a tuple with the TargetIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplatePathPreferencesPath) GetTargetIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.TargetIps) {
		return nil, false
	}
	return o.TargetIps, true
}

// HasTargetIps returns a boolean if a field has been set.
func (o *GatewayTemplatePathPreferencesPath) HasTargetIps() bool {
	if o != nil && !IsNil(o.TargetIps) {
		return true
	}

	return false
}

// SetTargetIps gets a reference to the given []string and assigns it to the TargetIps field.
func (o *GatewayTemplatePathPreferencesPath) SetTargetIps(v []string) {
	o.TargetIps = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GatewayTemplatePathPreferencesPath) GetType() GatewayPathType {
	if o == nil || IsNil(o.Type) {
		var ret GatewayPathType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplatePathPreferencesPath) GetTypeOk() (*GatewayPathType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GatewayTemplatePathPreferencesPath) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given GatewayPathType and assigns it to the Type field.
func (o *GatewayTemplatePathPreferencesPath) SetType(v GatewayPathType) {
	o.Type = &v
}

// GetWanName returns the WanName field value if set, zero value otherwise.
func (o *GatewayTemplatePathPreferencesPath) GetWanName() string {
	if o == nil || IsNil(o.WanName) {
		var ret string
		return ret
	}
	return *o.WanName
}

// GetWanNameOk returns a tuple with the WanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplatePathPreferencesPath) GetWanNameOk() (*string, bool) {
	if o == nil || IsNil(o.WanName) {
		return nil, false
	}
	return o.WanName, true
}

// HasWanName returns a boolean if a field has been set.
func (o *GatewayTemplatePathPreferencesPath) HasWanName() bool {
	if o != nil && !IsNil(o.WanName) {
		return true
	}

	return false
}

// SetWanName gets a reference to the given string and assigns it to the WanName field.
func (o *GatewayTemplatePathPreferencesPath) SetWanName(v string) {
	o.WanName = &v
}

func (o GatewayTemplatePathPreferencesPath) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayTemplatePathPreferencesPath) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.GatewayIp) {
		toSerialize["gateway_ip"] = o.GatewayIp
	}
	if !IsNil(o.InternetAccess) {
		toSerialize["internet_access"] = o.InternetAccess
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	if !IsNil(o.TargetIps) {
		toSerialize["target_ips"] = o.TargetIps
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.WanName) {
		toSerialize["wan_name"] = o.WanName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayTemplatePathPreferencesPath) UnmarshalJSON(data []byte) (err error) {
	varGatewayTemplatePathPreferencesPath := _GatewayTemplatePathPreferencesPath{}

	err = json.Unmarshal(data, &varGatewayTemplatePathPreferencesPath)

	if err != nil {
		return err
	}

	*o = GatewayTemplatePathPreferencesPath(varGatewayTemplatePathPreferencesPath)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cost")
		delete(additionalProperties, "disabled")
		delete(additionalProperties, "gateway_ip")
		delete(additionalProperties, "internet_access")
		delete(additionalProperties, "name")
		delete(additionalProperties, "networks")
		delete(additionalProperties, "target_ips")
		delete(additionalProperties, "type")
		delete(additionalProperties, "wan_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayTemplatePathPreferencesPath struct {
	value *GatewayTemplatePathPreferencesPath
	isSet bool
}

func (v NullableGatewayTemplatePathPreferencesPath) Get() *GatewayTemplatePathPreferencesPath {
	return v.value
}

func (v *NullableGatewayTemplatePathPreferencesPath) Set(val *GatewayTemplatePathPreferencesPath) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayTemplatePathPreferencesPath) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayTemplatePathPreferencesPath) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayTemplatePathPreferencesPath(val *GatewayTemplatePathPreferencesPath) *NullableGatewayTemplatePathPreferencesPath {
	return &NullableGatewayTemplatePathPreferencesPath{value: val, isSet: true}
}

func (v NullableGatewayTemplatePathPreferencesPath) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayTemplatePathPreferencesPath) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


