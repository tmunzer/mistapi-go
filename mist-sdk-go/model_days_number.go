/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the DaysNumber type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaysNumber{}

// DaysNumber struct for DaysNumber
type DaysNumber struct {
	Days *int32 `json:"days,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DaysNumber DaysNumber

// NewDaysNumber instantiates a new DaysNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaysNumber() *DaysNumber {
	this := DaysNumber{}
	var days int32 = 30
	this.Days = &days
	return &this
}

// NewDaysNumberWithDefaults instantiates a new DaysNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaysNumberWithDefaults() *DaysNumber {
	this := DaysNumber{}
	var days int32 = 30
	this.Days = &days
	return &this
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *DaysNumber) GetDays() int32 {
	if o == nil || IsNil(o.Days) {
		var ret int32
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaysNumber) GetDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *DaysNumber) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given int32 and assigns it to the Days field.
func (o *DaysNumber) SetDays(v int32) {
	o.Days = &v
}

func (o DaysNumber) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaysNumber) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaysNumber) UnmarshalJSON(data []byte) (err error) {
	varDaysNumber := _DaysNumber{}

	err = json.Unmarshal(data, &varDaysNumber)

	if err != nil {
		return err
	}

	*o = DaysNumber(varDaysNumber)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "days")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDaysNumber struct {
	value *DaysNumber
	isSet bool
}

func (v NullableDaysNumber) Get() *DaysNumber {
	return v.value
}

func (v *NullableDaysNumber) Set(val *DaysNumber) {
	v.value = val
	v.isSet = true
}

func (v NullableDaysNumber) IsSet() bool {
	return v.isSet
}

func (v *NullableDaysNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaysNumber(val *DaysNumber) *NullableDaysNumber {
	return &NullableDaysNumber{value: val, isSet: true}
}

func (v NullableDaysNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaysNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


