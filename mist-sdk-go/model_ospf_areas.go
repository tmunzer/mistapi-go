/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the OspfAreas type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OspfAreas{}

// OspfAreas Junos OSPF areas
type OspfAreas struct {
	IncludeLoopback *bool `json:"include_loopback,omitempty"`
	// Networks to participate in an OSPF area.  Property key is the network name
	Networks *map[string]OspfAreasNetwork `json:"networks,omitempty"`
	Type *OspfAreasType `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OspfAreas OspfAreas

// NewOspfAreas instantiates a new OspfAreas object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOspfAreas() *OspfAreas {
	this := OspfAreas{}
	var includeLoopback bool = false
	this.IncludeLoopback = &includeLoopback
	var type_ OspfAreasType = OSPFAREASTYPE_DEFAULT
	this.Type = &type_
	return &this
}

// NewOspfAreasWithDefaults instantiates a new OspfAreas object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOspfAreasWithDefaults() *OspfAreas {
	this := OspfAreas{}
	var includeLoopback bool = false
	this.IncludeLoopback = &includeLoopback
	var type_ OspfAreasType = OSPFAREASTYPE_DEFAULT
	this.Type = &type_
	return &this
}

// GetIncludeLoopback returns the IncludeLoopback field value if set, zero value otherwise.
func (o *OspfAreas) GetIncludeLoopback() bool {
	if o == nil || IsNil(o.IncludeLoopback) {
		var ret bool
		return ret
	}
	return *o.IncludeLoopback
}

// GetIncludeLoopbackOk returns a tuple with the IncludeLoopback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreas) GetIncludeLoopbackOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeLoopback) {
		return nil, false
	}
	return o.IncludeLoopback, true
}

// HasIncludeLoopback returns a boolean if a field has been set.
func (o *OspfAreas) HasIncludeLoopback() bool {
	if o != nil && !IsNil(o.IncludeLoopback) {
		return true
	}

	return false
}

// SetIncludeLoopback gets a reference to the given bool and assigns it to the IncludeLoopback field.
func (o *OspfAreas) SetIncludeLoopback(v bool) {
	o.IncludeLoopback = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *OspfAreas) GetNetworks() map[string]OspfAreasNetwork {
	if o == nil || IsNil(o.Networks) {
		var ret map[string]OspfAreasNetwork
		return ret
	}
	return *o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreas) GetNetworksOk() (*map[string]OspfAreasNetwork, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *OspfAreas) HasNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given map[string]OspfAreasNetwork and assigns it to the Networks field.
func (o *OspfAreas) SetNetworks(v map[string]OspfAreasNetwork) {
	o.Networks = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OspfAreas) GetType() OspfAreasType {
	if o == nil || IsNil(o.Type) {
		var ret OspfAreasType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreas) GetTypeOk() (*OspfAreasType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OspfAreas) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given OspfAreasType and assigns it to the Type field.
func (o *OspfAreas) SetType(v OspfAreasType) {
	o.Type = &v
}

func (o OspfAreas) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OspfAreas) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IncludeLoopback) {
		toSerialize["include_loopback"] = o.IncludeLoopback
	}
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OspfAreas) UnmarshalJSON(data []byte) (err error) {
	varOspfAreas := _OspfAreas{}

	err = json.Unmarshal(data, &varOspfAreas)

	if err != nil {
		return err
	}

	*o = OspfAreas(varOspfAreas)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "include_loopback")
		delete(additionalProperties, "networks")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOspfAreas struct {
	value *OspfAreas
	isSet bool
}

func (v NullableOspfAreas) Get() *OspfAreas {
	return v.value
}

func (v *NullableOspfAreas) Set(val *OspfAreas) {
	v.value = val
	v.isSet = true
}

func (v NullableOspfAreas) IsSet() bool {
	return v.isSet
}

func (v *NullableOspfAreas) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOspfAreas(val *OspfAreas) *NullableOspfAreas {
	return &NullableOspfAreas{value: val, isSet: true}
}

func (v NullableOspfAreas) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOspfAreas) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


