/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ConstDeviceApExtios type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConstDeviceApExtios{}

// ConstDeviceApExtios struct for ConstDeviceApExtios
type ConstDeviceApExtios struct {
	DefaultDir *ConstDeviceApExtiosDefaultDir `json:"default_dir,omitempty"`
	Input *bool `json:"input,omitempty"`
	Output *bool `json:"output,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConstDeviceApExtios ConstDeviceApExtios

// NewConstDeviceApExtios instantiates a new ConstDeviceApExtios object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConstDeviceApExtios() *ConstDeviceApExtios {
	this := ConstDeviceApExtios{}
	return &this
}

// NewConstDeviceApExtiosWithDefaults instantiates a new ConstDeviceApExtios object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConstDeviceApExtiosWithDefaults() *ConstDeviceApExtios {
	this := ConstDeviceApExtios{}
	return &this
}

// GetDefaultDir returns the DefaultDir field value if set, zero value otherwise.
func (o *ConstDeviceApExtios) GetDefaultDir() ConstDeviceApExtiosDefaultDir {
	if o == nil || IsNil(o.DefaultDir) {
		var ret ConstDeviceApExtiosDefaultDir
		return ret
	}
	return *o.DefaultDir
}

// GetDefaultDirOk returns a tuple with the DefaultDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceApExtios) GetDefaultDirOk() (*ConstDeviceApExtiosDefaultDir, bool) {
	if o == nil || IsNil(o.DefaultDir) {
		return nil, false
	}
	return o.DefaultDir, true
}

// HasDefaultDir returns a boolean if a field has been set.
func (o *ConstDeviceApExtios) HasDefaultDir() bool {
	if o != nil && !IsNil(o.DefaultDir) {
		return true
	}

	return false
}

// SetDefaultDir gets a reference to the given ConstDeviceApExtiosDefaultDir and assigns it to the DefaultDir field.
func (o *ConstDeviceApExtios) SetDefaultDir(v ConstDeviceApExtiosDefaultDir) {
	o.DefaultDir = &v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *ConstDeviceApExtios) GetInput() bool {
	if o == nil || IsNil(o.Input) {
		var ret bool
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceApExtios) GetInputOk() (*bool, bool) {
	if o == nil || IsNil(o.Input) {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *ConstDeviceApExtios) HasInput() bool {
	if o != nil && !IsNil(o.Input) {
		return true
	}

	return false
}

// SetInput gets a reference to the given bool and assigns it to the Input field.
func (o *ConstDeviceApExtios) SetInput(v bool) {
	o.Input = &v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *ConstDeviceApExtios) GetOutput() bool {
	if o == nil || IsNil(o.Output) {
		var ret bool
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstDeviceApExtios) GetOutputOk() (*bool, bool) {
	if o == nil || IsNil(o.Output) {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *ConstDeviceApExtios) HasOutput() bool {
	if o != nil && !IsNil(o.Output) {
		return true
	}

	return false
}

// SetOutput gets a reference to the given bool and assigns it to the Output field.
func (o *ConstDeviceApExtios) SetOutput(v bool) {
	o.Output = &v
}

func (o ConstDeviceApExtios) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConstDeviceApExtios) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultDir) {
		toSerialize["default_dir"] = o.DefaultDir
	}
	if !IsNil(o.Input) {
		toSerialize["input"] = o.Input
	}
	if !IsNil(o.Output) {
		toSerialize["output"] = o.Output
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConstDeviceApExtios) UnmarshalJSON(data []byte) (err error) {
	varConstDeviceApExtios := _ConstDeviceApExtios{}

	err = json.Unmarshal(data, &varConstDeviceApExtios)

	if err != nil {
		return err
	}

	*o = ConstDeviceApExtios(varConstDeviceApExtios)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "default_dir")
		delete(additionalProperties, "input")
		delete(additionalProperties, "output")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConstDeviceApExtios struct {
	value *ConstDeviceApExtios
	isSet bool
}

func (v NullableConstDeviceApExtios) Get() *ConstDeviceApExtios {
	return v.value
}

func (v *NullableConstDeviceApExtios) Set(val *ConstDeviceApExtios) {
	v.value = val
	v.isSet = true
}

func (v NullableConstDeviceApExtios) IsSet() bool {
	return v.isSet
}

func (v *NullableConstDeviceApExtios) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConstDeviceApExtios(val *ConstDeviceApExtios) *NullableConstDeviceApExtios {
	return &NullableConstDeviceApExtios{value: val, isSet: true}
}

func (v NullableConstDeviceApExtios) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConstDeviceApExtios) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


