/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the OrgSettingCradlepoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgSettingCradlepoint{}

// OrgSettingCradlepoint struct for OrgSettingCradlepoint
type OrgSettingCradlepoint struct {
	CpApiId *string `json:"cp_api_id,omitempty"`
	CpApiKey *string `json:"cp_api_key,omitempty"`
	EcmApiId *string `json:"ecm_api_id,omitempty"`
	EcmApiKey *string `json:"ecm_api_key,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrgSettingCradlepoint OrgSettingCradlepoint

// NewOrgSettingCradlepoint instantiates a new OrgSettingCradlepoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgSettingCradlepoint() *OrgSettingCradlepoint {
	this := OrgSettingCradlepoint{}
	return &this
}

// NewOrgSettingCradlepointWithDefaults instantiates a new OrgSettingCradlepoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgSettingCradlepointWithDefaults() *OrgSettingCradlepoint {
	this := OrgSettingCradlepoint{}
	return &this
}

// GetCpApiId returns the CpApiId field value if set, zero value otherwise.
func (o *OrgSettingCradlepoint) GetCpApiId() string {
	if o == nil || IsNil(o.CpApiId) {
		var ret string
		return ret
	}
	return *o.CpApiId
}

// GetCpApiIdOk returns a tuple with the CpApiId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgSettingCradlepoint) GetCpApiIdOk() (*string, bool) {
	if o == nil || IsNil(o.CpApiId) {
		return nil, false
	}
	return o.CpApiId, true
}

// HasCpApiId returns a boolean if a field has been set.
func (o *OrgSettingCradlepoint) HasCpApiId() bool {
	if o != nil && !IsNil(o.CpApiId) {
		return true
	}

	return false
}

// SetCpApiId gets a reference to the given string and assigns it to the CpApiId field.
func (o *OrgSettingCradlepoint) SetCpApiId(v string) {
	o.CpApiId = &v
}

// GetCpApiKey returns the CpApiKey field value if set, zero value otherwise.
func (o *OrgSettingCradlepoint) GetCpApiKey() string {
	if o == nil || IsNil(o.CpApiKey) {
		var ret string
		return ret
	}
	return *o.CpApiKey
}

// GetCpApiKeyOk returns a tuple with the CpApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgSettingCradlepoint) GetCpApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.CpApiKey) {
		return nil, false
	}
	return o.CpApiKey, true
}

// HasCpApiKey returns a boolean if a field has been set.
func (o *OrgSettingCradlepoint) HasCpApiKey() bool {
	if o != nil && !IsNil(o.CpApiKey) {
		return true
	}

	return false
}

// SetCpApiKey gets a reference to the given string and assigns it to the CpApiKey field.
func (o *OrgSettingCradlepoint) SetCpApiKey(v string) {
	o.CpApiKey = &v
}

// GetEcmApiId returns the EcmApiId field value if set, zero value otherwise.
func (o *OrgSettingCradlepoint) GetEcmApiId() string {
	if o == nil || IsNil(o.EcmApiId) {
		var ret string
		return ret
	}
	return *o.EcmApiId
}

// GetEcmApiIdOk returns a tuple with the EcmApiId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgSettingCradlepoint) GetEcmApiIdOk() (*string, bool) {
	if o == nil || IsNil(o.EcmApiId) {
		return nil, false
	}
	return o.EcmApiId, true
}

// HasEcmApiId returns a boolean if a field has been set.
func (o *OrgSettingCradlepoint) HasEcmApiId() bool {
	if o != nil && !IsNil(o.EcmApiId) {
		return true
	}

	return false
}

// SetEcmApiId gets a reference to the given string and assigns it to the EcmApiId field.
func (o *OrgSettingCradlepoint) SetEcmApiId(v string) {
	o.EcmApiId = &v
}

// GetEcmApiKey returns the EcmApiKey field value if set, zero value otherwise.
func (o *OrgSettingCradlepoint) GetEcmApiKey() string {
	if o == nil || IsNil(o.EcmApiKey) {
		var ret string
		return ret
	}
	return *o.EcmApiKey
}

// GetEcmApiKeyOk returns a tuple with the EcmApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgSettingCradlepoint) GetEcmApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.EcmApiKey) {
		return nil, false
	}
	return o.EcmApiKey, true
}

// HasEcmApiKey returns a boolean if a field has been set.
func (o *OrgSettingCradlepoint) HasEcmApiKey() bool {
	if o != nil && !IsNil(o.EcmApiKey) {
		return true
	}

	return false
}

// SetEcmApiKey gets a reference to the given string and assigns it to the EcmApiKey field.
func (o *OrgSettingCradlepoint) SetEcmApiKey(v string) {
	o.EcmApiKey = &v
}

func (o OrgSettingCradlepoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgSettingCradlepoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CpApiId) {
		toSerialize["cp_api_id"] = o.CpApiId
	}
	if !IsNil(o.CpApiKey) {
		toSerialize["cp_api_key"] = o.CpApiKey
	}
	if !IsNil(o.EcmApiId) {
		toSerialize["ecm_api_id"] = o.EcmApiId
	}
	if !IsNil(o.EcmApiKey) {
		toSerialize["ecm_api_key"] = o.EcmApiKey
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrgSettingCradlepoint) UnmarshalJSON(data []byte) (err error) {
	varOrgSettingCradlepoint := _OrgSettingCradlepoint{}

	err = json.Unmarshal(data, &varOrgSettingCradlepoint)

	if err != nil {
		return err
	}

	*o = OrgSettingCradlepoint(varOrgSettingCradlepoint)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cp_api_id")
		delete(additionalProperties, "cp_api_key")
		delete(additionalProperties, "ecm_api_id")
		delete(additionalProperties, "ecm_api_key")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrgSettingCradlepoint struct {
	value *OrgSettingCradlepoint
	isSet bool
}

func (v NullableOrgSettingCradlepoint) Get() *OrgSettingCradlepoint {
	return v.value
}

func (v *NullableOrgSettingCradlepoint) Set(val *OrgSettingCradlepoint) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgSettingCradlepoint) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgSettingCradlepoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgSettingCradlepoint(val *OrgSettingCradlepoint) *NullableOrgSettingCradlepoint {
	return &NullableOrgSettingCradlepoint{value: val, isSet: true}
}

func (v NullableOrgSettingCradlepoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgSettingCradlepoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


