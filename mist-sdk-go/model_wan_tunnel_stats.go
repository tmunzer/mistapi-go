/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the WanTunnelStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WanTunnelStats{}

// WanTunnelStats struct for WanTunnelStats
type WanTunnelStats struct {
	// authentication algorithm
	AuthAlgo *string `json:"auth_algo,omitempty"`
	// encryption algorithm
	EncryptAlgo *string `json:"encrypt_algo,omitempty"`
	// ike version
	IkeVersion *string `json:"ike_version,omitempty"`
	// ip address
	Ip *string `json:"ip,omitempty"`
	// reason of why the tunnel is down
	LastEvent *string `json:"last_event,omitempty"`
	// router mac address
	Mac *string `json:"mac,omitempty"`
	// node0/node1
	Node *string `json:"node,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	// peer host
	PeerHost *string `json:"peer_host,omitempty"`
	// peer ip address
	PeerIp *string `json:"peer_ip,omitempty"`
	Priority *WanTunnelStatsPriority `json:"priority,omitempty"`
	Protocol *WanTunnelProtocol `json:"protocol,omitempty"`
	RxBytes *int32 `json:"rx_bytes,omitempty"`
	RxPkts *int32 `json:"rx_pkts,omitempty"`
	SiteId *string `json:"site_id,omitempty"`
	// Mist Tunnel Name
	TunnelName *string `json:"tunnel_name,omitempty"`
	TxBytes *int32 `json:"tx_bytes,omitempty"`
	TxPkts *int32 `json:"tx_pkts,omitempty"`
	Up *bool `json:"up,omitempty"`
	// duration from first (or last) SA was established
	Uptime *int32 `json:"uptime,omitempty"`
	// wan interface name
	WanName *string `json:"wan_name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WanTunnelStats WanTunnelStats

// NewWanTunnelStats instantiates a new WanTunnelStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWanTunnelStats() *WanTunnelStats {
	this := WanTunnelStats{}
	return &this
}

// NewWanTunnelStatsWithDefaults instantiates a new WanTunnelStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWanTunnelStatsWithDefaults() *WanTunnelStats {
	this := WanTunnelStats{}
	return &this
}

// GetAuthAlgo returns the AuthAlgo field value if set, zero value otherwise.
func (o *WanTunnelStats) GetAuthAlgo() string {
	if o == nil || IsNil(o.AuthAlgo) {
		var ret string
		return ret
	}
	return *o.AuthAlgo
}

// GetAuthAlgoOk returns a tuple with the AuthAlgo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetAuthAlgoOk() (*string, bool) {
	if o == nil || IsNil(o.AuthAlgo) {
		return nil, false
	}
	return o.AuthAlgo, true
}

// HasAuthAlgo returns a boolean if a field has been set.
func (o *WanTunnelStats) HasAuthAlgo() bool {
	if o != nil && !IsNil(o.AuthAlgo) {
		return true
	}

	return false
}

// SetAuthAlgo gets a reference to the given string and assigns it to the AuthAlgo field.
func (o *WanTunnelStats) SetAuthAlgo(v string) {
	o.AuthAlgo = &v
}

// GetEncryptAlgo returns the EncryptAlgo field value if set, zero value otherwise.
func (o *WanTunnelStats) GetEncryptAlgo() string {
	if o == nil || IsNil(o.EncryptAlgo) {
		var ret string
		return ret
	}
	return *o.EncryptAlgo
}

// GetEncryptAlgoOk returns a tuple with the EncryptAlgo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetEncryptAlgoOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptAlgo) {
		return nil, false
	}
	return o.EncryptAlgo, true
}

// HasEncryptAlgo returns a boolean if a field has been set.
func (o *WanTunnelStats) HasEncryptAlgo() bool {
	if o != nil && !IsNil(o.EncryptAlgo) {
		return true
	}

	return false
}

// SetEncryptAlgo gets a reference to the given string and assigns it to the EncryptAlgo field.
func (o *WanTunnelStats) SetEncryptAlgo(v string) {
	o.EncryptAlgo = &v
}

// GetIkeVersion returns the IkeVersion field value if set, zero value otherwise.
func (o *WanTunnelStats) GetIkeVersion() string {
	if o == nil || IsNil(o.IkeVersion) {
		var ret string
		return ret
	}
	return *o.IkeVersion
}

// GetIkeVersionOk returns a tuple with the IkeVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetIkeVersionOk() (*string, bool) {
	if o == nil || IsNil(o.IkeVersion) {
		return nil, false
	}
	return o.IkeVersion, true
}

// HasIkeVersion returns a boolean if a field has been set.
func (o *WanTunnelStats) HasIkeVersion() bool {
	if o != nil && !IsNil(o.IkeVersion) {
		return true
	}

	return false
}

// SetIkeVersion gets a reference to the given string and assigns it to the IkeVersion field.
func (o *WanTunnelStats) SetIkeVersion(v string) {
	o.IkeVersion = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *WanTunnelStats) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *WanTunnelStats) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *WanTunnelStats) SetIp(v string) {
	o.Ip = &v
}

// GetLastEvent returns the LastEvent field value if set, zero value otherwise.
func (o *WanTunnelStats) GetLastEvent() string {
	if o == nil || IsNil(o.LastEvent) {
		var ret string
		return ret
	}
	return *o.LastEvent
}

// GetLastEventOk returns a tuple with the LastEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetLastEventOk() (*string, bool) {
	if o == nil || IsNil(o.LastEvent) {
		return nil, false
	}
	return o.LastEvent, true
}

// HasLastEvent returns a boolean if a field has been set.
func (o *WanTunnelStats) HasLastEvent() bool {
	if o != nil && !IsNil(o.LastEvent) {
		return true
	}

	return false
}

// SetLastEvent gets a reference to the given string and assigns it to the LastEvent field.
func (o *WanTunnelStats) SetLastEvent(v string) {
	o.LastEvent = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *WanTunnelStats) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *WanTunnelStats) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *WanTunnelStats) SetMac(v string) {
	o.Mac = &v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *WanTunnelStats) GetNode() string {
	if o == nil || IsNil(o.Node) {
		var ret string
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetNodeOk() (*string, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *WanTunnelStats) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given string and assigns it to the Node field.
func (o *WanTunnelStats) SetNode(v string) {
	o.Node = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *WanTunnelStats) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *WanTunnelStats) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *WanTunnelStats) SetOrgId(v string) {
	o.OrgId = &v
}

// GetPeerHost returns the PeerHost field value if set, zero value otherwise.
func (o *WanTunnelStats) GetPeerHost() string {
	if o == nil || IsNil(o.PeerHost) {
		var ret string
		return ret
	}
	return *o.PeerHost
}

// GetPeerHostOk returns a tuple with the PeerHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetPeerHostOk() (*string, bool) {
	if o == nil || IsNil(o.PeerHost) {
		return nil, false
	}
	return o.PeerHost, true
}

// HasPeerHost returns a boolean if a field has been set.
func (o *WanTunnelStats) HasPeerHost() bool {
	if o != nil && !IsNil(o.PeerHost) {
		return true
	}

	return false
}

// SetPeerHost gets a reference to the given string and assigns it to the PeerHost field.
func (o *WanTunnelStats) SetPeerHost(v string) {
	o.PeerHost = &v
}

// GetPeerIp returns the PeerIp field value if set, zero value otherwise.
func (o *WanTunnelStats) GetPeerIp() string {
	if o == nil || IsNil(o.PeerIp) {
		var ret string
		return ret
	}
	return *o.PeerIp
}

// GetPeerIpOk returns a tuple with the PeerIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetPeerIpOk() (*string, bool) {
	if o == nil || IsNil(o.PeerIp) {
		return nil, false
	}
	return o.PeerIp, true
}

// HasPeerIp returns a boolean if a field has been set.
func (o *WanTunnelStats) HasPeerIp() bool {
	if o != nil && !IsNil(o.PeerIp) {
		return true
	}

	return false
}

// SetPeerIp gets a reference to the given string and assigns it to the PeerIp field.
func (o *WanTunnelStats) SetPeerIp(v string) {
	o.PeerIp = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *WanTunnelStats) GetPriority() WanTunnelStatsPriority {
	if o == nil || IsNil(o.Priority) {
		var ret WanTunnelStatsPriority
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetPriorityOk() (*WanTunnelStatsPriority, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *WanTunnelStats) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given WanTunnelStatsPriority and assigns it to the Priority field.
func (o *WanTunnelStats) SetPriority(v WanTunnelStatsPriority) {
	o.Priority = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *WanTunnelStats) GetProtocol() WanTunnelProtocol {
	if o == nil || IsNil(o.Protocol) {
		var ret WanTunnelProtocol
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetProtocolOk() (*WanTunnelProtocol, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *WanTunnelStats) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given WanTunnelProtocol and assigns it to the Protocol field.
func (o *WanTunnelStats) SetProtocol(v WanTunnelProtocol) {
	o.Protocol = &v
}

// GetRxBytes returns the RxBytes field value if set, zero value otherwise.
func (o *WanTunnelStats) GetRxBytes() int32 {
	if o == nil || IsNil(o.RxBytes) {
		var ret int32
		return ret
	}
	return *o.RxBytes
}

// GetRxBytesOk returns a tuple with the RxBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetRxBytesOk() (*int32, bool) {
	if o == nil || IsNil(o.RxBytes) {
		return nil, false
	}
	return o.RxBytes, true
}

// HasRxBytes returns a boolean if a field has been set.
func (o *WanTunnelStats) HasRxBytes() bool {
	if o != nil && !IsNil(o.RxBytes) {
		return true
	}

	return false
}

// SetRxBytes gets a reference to the given int32 and assigns it to the RxBytes field.
func (o *WanTunnelStats) SetRxBytes(v int32) {
	o.RxBytes = &v
}

// GetRxPkts returns the RxPkts field value if set, zero value otherwise.
func (o *WanTunnelStats) GetRxPkts() int32 {
	if o == nil || IsNil(o.RxPkts) {
		var ret int32
		return ret
	}
	return *o.RxPkts
}

// GetRxPktsOk returns a tuple with the RxPkts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetRxPktsOk() (*int32, bool) {
	if o == nil || IsNil(o.RxPkts) {
		return nil, false
	}
	return o.RxPkts, true
}

// HasRxPkts returns a boolean if a field has been set.
func (o *WanTunnelStats) HasRxPkts() bool {
	if o != nil && !IsNil(o.RxPkts) {
		return true
	}

	return false
}

// SetRxPkts gets a reference to the given int32 and assigns it to the RxPkts field.
func (o *WanTunnelStats) SetRxPkts(v int32) {
	o.RxPkts = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *WanTunnelStats) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *WanTunnelStats) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *WanTunnelStats) SetSiteId(v string) {
	o.SiteId = &v
}

// GetTunnelName returns the TunnelName field value if set, zero value otherwise.
func (o *WanTunnelStats) GetTunnelName() string {
	if o == nil || IsNil(o.TunnelName) {
		var ret string
		return ret
	}
	return *o.TunnelName
}

// GetTunnelNameOk returns a tuple with the TunnelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetTunnelNameOk() (*string, bool) {
	if o == nil || IsNil(o.TunnelName) {
		return nil, false
	}
	return o.TunnelName, true
}

// HasTunnelName returns a boolean if a field has been set.
func (o *WanTunnelStats) HasTunnelName() bool {
	if o != nil && !IsNil(o.TunnelName) {
		return true
	}

	return false
}

// SetTunnelName gets a reference to the given string and assigns it to the TunnelName field.
func (o *WanTunnelStats) SetTunnelName(v string) {
	o.TunnelName = &v
}

// GetTxBytes returns the TxBytes field value if set, zero value otherwise.
func (o *WanTunnelStats) GetTxBytes() int32 {
	if o == nil || IsNil(o.TxBytes) {
		var ret int32
		return ret
	}
	return *o.TxBytes
}

// GetTxBytesOk returns a tuple with the TxBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetTxBytesOk() (*int32, bool) {
	if o == nil || IsNil(o.TxBytes) {
		return nil, false
	}
	return o.TxBytes, true
}

// HasTxBytes returns a boolean if a field has been set.
func (o *WanTunnelStats) HasTxBytes() bool {
	if o != nil && !IsNil(o.TxBytes) {
		return true
	}

	return false
}

// SetTxBytes gets a reference to the given int32 and assigns it to the TxBytes field.
func (o *WanTunnelStats) SetTxBytes(v int32) {
	o.TxBytes = &v
}

// GetTxPkts returns the TxPkts field value if set, zero value otherwise.
func (o *WanTunnelStats) GetTxPkts() int32 {
	if o == nil || IsNil(o.TxPkts) {
		var ret int32
		return ret
	}
	return *o.TxPkts
}

// GetTxPktsOk returns a tuple with the TxPkts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetTxPktsOk() (*int32, bool) {
	if o == nil || IsNil(o.TxPkts) {
		return nil, false
	}
	return o.TxPkts, true
}

// HasTxPkts returns a boolean if a field has been set.
func (o *WanTunnelStats) HasTxPkts() bool {
	if o != nil && !IsNil(o.TxPkts) {
		return true
	}

	return false
}

// SetTxPkts gets a reference to the given int32 and assigns it to the TxPkts field.
func (o *WanTunnelStats) SetTxPkts(v int32) {
	o.TxPkts = &v
}

// GetUp returns the Up field value if set, zero value otherwise.
func (o *WanTunnelStats) GetUp() bool {
	if o == nil || IsNil(o.Up) {
		var ret bool
		return ret
	}
	return *o.Up
}

// GetUpOk returns a tuple with the Up field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetUpOk() (*bool, bool) {
	if o == nil || IsNil(o.Up) {
		return nil, false
	}
	return o.Up, true
}

// HasUp returns a boolean if a field has been set.
func (o *WanTunnelStats) HasUp() bool {
	if o != nil && !IsNil(o.Up) {
		return true
	}

	return false
}

// SetUp gets a reference to the given bool and assigns it to the Up field.
func (o *WanTunnelStats) SetUp(v bool) {
	o.Up = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *WanTunnelStats) GetUptime() int32 {
	if o == nil || IsNil(o.Uptime) {
		var ret int32
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetUptimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Uptime) {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *WanTunnelStats) HasUptime() bool {
	if o != nil && !IsNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given int32 and assigns it to the Uptime field.
func (o *WanTunnelStats) SetUptime(v int32) {
	o.Uptime = &v
}

// GetWanName returns the WanName field value if set, zero value otherwise.
func (o *WanTunnelStats) GetWanName() string {
	if o == nil || IsNil(o.WanName) {
		var ret string
		return ret
	}
	return *o.WanName
}

// GetWanNameOk returns a tuple with the WanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WanTunnelStats) GetWanNameOk() (*string, bool) {
	if o == nil || IsNil(o.WanName) {
		return nil, false
	}
	return o.WanName, true
}

// HasWanName returns a boolean if a field has been set.
func (o *WanTunnelStats) HasWanName() bool {
	if o != nil && !IsNil(o.WanName) {
		return true
	}

	return false
}

// SetWanName gets a reference to the given string and assigns it to the WanName field.
func (o *WanTunnelStats) SetWanName(v string) {
	o.WanName = &v
}

func (o WanTunnelStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WanTunnelStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthAlgo) {
		toSerialize["auth_algo"] = o.AuthAlgo
	}
	if !IsNil(o.EncryptAlgo) {
		toSerialize["encrypt_algo"] = o.EncryptAlgo
	}
	if !IsNil(o.IkeVersion) {
		toSerialize["ike_version"] = o.IkeVersion
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.LastEvent) {
		toSerialize["last_event"] = o.LastEvent
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.PeerHost) {
		toSerialize["peer_host"] = o.PeerHost
	}
	if !IsNil(o.PeerIp) {
		toSerialize["peer_ip"] = o.PeerIp
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.RxBytes) {
		toSerialize["rx_bytes"] = o.RxBytes
	}
	if !IsNil(o.RxPkts) {
		toSerialize["rx_pkts"] = o.RxPkts
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.TunnelName) {
		toSerialize["tunnel_name"] = o.TunnelName
	}
	if !IsNil(o.TxBytes) {
		toSerialize["tx_bytes"] = o.TxBytes
	}
	if !IsNil(o.TxPkts) {
		toSerialize["tx_pkts"] = o.TxPkts
	}
	if !IsNil(o.Up) {
		toSerialize["up"] = o.Up
	}
	if !IsNil(o.Uptime) {
		toSerialize["uptime"] = o.Uptime
	}
	if !IsNil(o.WanName) {
		toSerialize["wan_name"] = o.WanName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WanTunnelStats) UnmarshalJSON(data []byte) (err error) {
	varWanTunnelStats := _WanTunnelStats{}

	err = json.Unmarshal(data, &varWanTunnelStats)

	if err != nil {
		return err
	}

	*o = WanTunnelStats(varWanTunnelStats)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auth_algo")
		delete(additionalProperties, "encrypt_algo")
		delete(additionalProperties, "ike_version")
		delete(additionalProperties, "ip")
		delete(additionalProperties, "last_event")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "node")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "peer_host")
		delete(additionalProperties, "peer_ip")
		delete(additionalProperties, "priority")
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "rx_bytes")
		delete(additionalProperties, "rx_pkts")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "tunnel_name")
		delete(additionalProperties, "tx_bytes")
		delete(additionalProperties, "tx_pkts")
		delete(additionalProperties, "up")
		delete(additionalProperties, "uptime")
		delete(additionalProperties, "wan_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWanTunnelStats struct {
	value *WanTunnelStats
	isSet bool
}

func (v NullableWanTunnelStats) Get() *WanTunnelStats {
	return v.value
}

func (v *NullableWanTunnelStats) Set(val *WanTunnelStats) {
	v.value = val
	v.isSet = true
}

func (v NullableWanTunnelStats) IsSet() bool {
	return v.isSet
}

func (v *NullableWanTunnelStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWanTunnelStats(val *WanTunnelStats) *NullableWanTunnelStats {
	return &NullableWanTunnelStats{value: val, isSet: true}
}

func (v NullableWanTunnelStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWanTunnelStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


