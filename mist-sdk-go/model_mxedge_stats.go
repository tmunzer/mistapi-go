/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the MxedgeStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MxedgeStats{}

// MxedgeStats struct for MxedgeStats
type MxedgeStats struct {
	CpuStat *MxedgeStatsCpuStat `json:"cpu_stat,omitempty"`
	CreatedTime *int32 `json:"created_time,omitempty"`
	// alue indicating fips configuration on the device
	FipsEnabled *bool `json:"fips_enabled,omitempty"`
	ForSite *bool `json:"for_site,omitempty"`
	Id *string `json:"id,omitempty"`
	IpStat *MxedgeStatsIpStat `json:"ip_stat,omitempty"`
	// Stat for LAG (Link Aggregation Group). Property key is the LAG name
	LagStat *map[string]MxedgeStatsLagStat `json:"lag_stat,omitempty"`
	LastSeen *float32 `json:"last_seen,omitempty"`
	Mac *string `json:"mac,omitempty"`
	MemoryStat *MxedgeStatsMemoryStat `json:"memory_stat,omitempty"`
	Model *string `json:"model,omitempty"`
	ModifiedTime *int32 `json:"modified_time,omitempty"`
	MxagentRegistered *bool `json:"mxagent_registered,omitempty"`
	MxclusterId *string `json:"mxcluster_id,omitempty"`
	// The name of the tunnel
	Name *string `json:"name,omitempty"`
	NumTunnels *int32 `json:"num_tunnels,omitempty"`
	OobIpConfig *MxedgeOobIpConfig `json:"oob_ip_config,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	PortStat *map[string]MxedgeStatsPortStat `json:"port_stat,omitempty"`
	SensorStat map[string]interface{} `json:"sensor_stat,omitempty"`
	Serial NullableString `json:"serial,omitempty"`
	// stat for each services
	ServiceStat *map[string]MxedgeStatsServiceStat `json:"service_stat,omitempty"`
	Services []string `json:"services,omitempty"`
	SiteId *string `json:"site_id,omitempty"`
	Status *string `json:"status,omitempty"`
	TuntermIpConfig *MxedgeStatsTuntermIpConfig `json:"tunterm_ip_config,omitempty"`
	TuntermPortConfig *MxedgeStatsTuntermPortConfig `json:"tunterm_port_config,omitempty"`
	TuntermRegistered *bool `json:"tunterm_registered,omitempty"`
	TuntermStat *MxedgeStatsTuntermStat `json:"tunterm_stat,omitempty"`
	Uptime *int32 `json:"uptime,omitempty"`
	// Virtualization environment
	VirtualizationType *string `json:"virtualization_type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MxedgeStats MxedgeStats

// NewMxedgeStats instantiates a new MxedgeStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMxedgeStats() *MxedgeStats {
	this := MxedgeStats{}
	return &this
}

// NewMxedgeStatsWithDefaults instantiates a new MxedgeStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMxedgeStatsWithDefaults() *MxedgeStats {
	this := MxedgeStats{}
	return &this
}

// GetCpuStat returns the CpuStat field value if set, zero value otherwise.
func (o *MxedgeStats) GetCpuStat() MxedgeStatsCpuStat {
	if o == nil || IsNil(o.CpuStat) {
		var ret MxedgeStatsCpuStat
		return ret
	}
	return *o.CpuStat
}

// GetCpuStatOk returns a tuple with the CpuStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetCpuStatOk() (*MxedgeStatsCpuStat, bool) {
	if o == nil || IsNil(o.CpuStat) {
		return nil, false
	}
	return o.CpuStat, true
}

// HasCpuStat returns a boolean if a field has been set.
func (o *MxedgeStats) HasCpuStat() bool {
	if o != nil && !IsNil(o.CpuStat) {
		return true
	}

	return false
}

// SetCpuStat gets a reference to the given MxedgeStatsCpuStat and assigns it to the CpuStat field.
func (o *MxedgeStats) SetCpuStat(v MxedgeStatsCpuStat) {
	o.CpuStat = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *MxedgeStats) GetCreatedTime() int32 {
	if o == nil || IsNil(o.CreatedTime) {
		var ret int32
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetCreatedTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *MxedgeStats) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given int32 and assigns it to the CreatedTime field.
func (o *MxedgeStats) SetCreatedTime(v int32) {
	o.CreatedTime = &v
}

// GetFipsEnabled returns the FipsEnabled field value if set, zero value otherwise.
func (o *MxedgeStats) GetFipsEnabled() bool {
	if o == nil || IsNil(o.FipsEnabled) {
		var ret bool
		return ret
	}
	return *o.FipsEnabled
}

// GetFipsEnabledOk returns a tuple with the FipsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetFipsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.FipsEnabled) {
		return nil, false
	}
	return o.FipsEnabled, true
}

// HasFipsEnabled returns a boolean if a field has been set.
func (o *MxedgeStats) HasFipsEnabled() bool {
	if o != nil && !IsNil(o.FipsEnabled) {
		return true
	}

	return false
}

// SetFipsEnabled gets a reference to the given bool and assigns it to the FipsEnabled field.
func (o *MxedgeStats) SetFipsEnabled(v bool) {
	o.FipsEnabled = &v
}

// GetForSite returns the ForSite field value if set, zero value otherwise.
func (o *MxedgeStats) GetForSite() bool {
	if o == nil || IsNil(o.ForSite) {
		var ret bool
		return ret
	}
	return *o.ForSite
}

// GetForSiteOk returns a tuple with the ForSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetForSiteOk() (*bool, bool) {
	if o == nil || IsNil(o.ForSite) {
		return nil, false
	}
	return o.ForSite, true
}

// HasForSite returns a boolean if a field has been set.
func (o *MxedgeStats) HasForSite() bool {
	if o != nil && !IsNil(o.ForSite) {
		return true
	}

	return false
}

// SetForSite gets a reference to the given bool and assigns it to the ForSite field.
func (o *MxedgeStats) SetForSite(v bool) {
	o.ForSite = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MxedgeStats) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MxedgeStats) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MxedgeStats) SetId(v string) {
	o.Id = &v
}

// GetIpStat returns the IpStat field value if set, zero value otherwise.
func (o *MxedgeStats) GetIpStat() MxedgeStatsIpStat {
	if o == nil || IsNil(o.IpStat) {
		var ret MxedgeStatsIpStat
		return ret
	}
	return *o.IpStat
}

// GetIpStatOk returns a tuple with the IpStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetIpStatOk() (*MxedgeStatsIpStat, bool) {
	if o == nil || IsNil(o.IpStat) {
		return nil, false
	}
	return o.IpStat, true
}

// HasIpStat returns a boolean if a field has been set.
func (o *MxedgeStats) HasIpStat() bool {
	if o != nil && !IsNil(o.IpStat) {
		return true
	}

	return false
}

// SetIpStat gets a reference to the given MxedgeStatsIpStat and assigns it to the IpStat field.
func (o *MxedgeStats) SetIpStat(v MxedgeStatsIpStat) {
	o.IpStat = &v
}

// GetLagStat returns the LagStat field value if set, zero value otherwise.
func (o *MxedgeStats) GetLagStat() map[string]MxedgeStatsLagStat {
	if o == nil || IsNil(o.LagStat) {
		var ret map[string]MxedgeStatsLagStat
		return ret
	}
	return *o.LagStat
}

// GetLagStatOk returns a tuple with the LagStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetLagStatOk() (*map[string]MxedgeStatsLagStat, bool) {
	if o == nil || IsNil(o.LagStat) {
		return nil, false
	}
	return o.LagStat, true
}

// HasLagStat returns a boolean if a field has been set.
func (o *MxedgeStats) HasLagStat() bool {
	if o != nil && !IsNil(o.LagStat) {
		return true
	}

	return false
}

// SetLagStat gets a reference to the given map[string]MxedgeStatsLagStat and assigns it to the LagStat field.
func (o *MxedgeStats) SetLagStat(v map[string]MxedgeStatsLagStat) {
	o.LagStat = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *MxedgeStats) GetLastSeen() float32 {
	if o == nil || IsNil(o.LastSeen) {
		var ret float32
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetLastSeenOk() (*float32, bool) {
	if o == nil || IsNil(o.LastSeen) {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *MxedgeStats) HasLastSeen() bool {
	if o != nil && !IsNil(o.LastSeen) {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given float32 and assigns it to the LastSeen field.
func (o *MxedgeStats) SetLastSeen(v float32) {
	o.LastSeen = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *MxedgeStats) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *MxedgeStats) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *MxedgeStats) SetMac(v string) {
	o.Mac = &v
}

// GetMemoryStat returns the MemoryStat field value if set, zero value otherwise.
func (o *MxedgeStats) GetMemoryStat() MxedgeStatsMemoryStat {
	if o == nil || IsNil(o.MemoryStat) {
		var ret MxedgeStatsMemoryStat
		return ret
	}
	return *o.MemoryStat
}

// GetMemoryStatOk returns a tuple with the MemoryStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetMemoryStatOk() (*MxedgeStatsMemoryStat, bool) {
	if o == nil || IsNil(o.MemoryStat) {
		return nil, false
	}
	return o.MemoryStat, true
}

// HasMemoryStat returns a boolean if a field has been set.
func (o *MxedgeStats) HasMemoryStat() bool {
	if o != nil && !IsNil(o.MemoryStat) {
		return true
	}

	return false
}

// SetMemoryStat gets a reference to the given MxedgeStatsMemoryStat and assigns it to the MemoryStat field.
func (o *MxedgeStats) SetMemoryStat(v MxedgeStatsMemoryStat) {
	o.MemoryStat = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *MxedgeStats) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *MxedgeStats) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *MxedgeStats) SetModel(v string) {
	o.Model = &v
}

// GetModifiedTime returns the ModifiedTime field value if set, zero value otherwise.
func (o *MxedgeStats) GetModifiedTime() int32 {
	if o == nil || IsNil(o.ModifiedTime) {
		var ret int32
		return ret
	}
	return *o.ModifiedTime
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetModifiedTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ModifiedTime) {
		return nil, false
	}
	return o.ModifiedTime, true
}

// HasModifiedTime returns a boolean if a field has been set.
func (o *MxedgeStats) HasModifiedTime() bool {
	if o != nil && !IsNil(o.ModifiedTime) {
		return true
	}

	return false
}

// SetModifiedTime gets a reference to the given int32 and assigns it to the ModifiedTime field.
func (o *MxedgeStats) SetModifiedTime(v int32) {
	o.ModifiedTime = &v
}

// GetMxagentRegistered returns the MxagentRegistered field value if set, zero value otherwise.
func (o *MxedgeStats) GetMxagentRegistered() bool {
	if o == nil || IsNil(o.MxagentRegistered) {
		var ret bool
		return ret
	}
	return *o.MxagentRegistered
}

// GetMxagentRegisteredOk returns a tuple with the MxagentRegistered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetMxagentRegisteredOk() (*bool, bool) {
	if o == nil || IsNil(o.MxagentRegistered) {
		return nil, false
	}
	return o.MxagentRegistered, true
}

// HasMxagentRegistered returns a boolean if a field has been set.
func (o *MxedgeStats) HasMxagentRegistered() bool {
	if o != nil && !IsNil(o.MxagentRegistered) {
		return true
	}

	return false
}

// SetMxagentRegistered gets a reference to the given bool and assigns it to the MxagentRegistered field.
func (o *MxedgeStats) SetMxagentRegistered(v bool) {
	o.MxagentRegistered = &v
}

// GetMxclusterId returns the MxclusterId field value if set, zero value otherwise.
func (o *MxedgeStats) GetMxclusterId() string {
	if o == nil || IsNil(o.MxclusterId) {
		var ret string
		return ret
	}
	return *o.MxclusterId
}

// GetMxclusterIdOk returns a tuple with the MxclusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetMxclusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.MxclusterId) {
		return nil, false
	}
	return o.MxclusterId, true
}

// HasMxclusterId returns a boolean if a field has been set.
func (o *MxedgeStats) HasMxclusterId() bool {
	if o != nil && !IsNil(o.MxclusterId) {
		return true
	}

	return false
}

// SetMxclusterId gets a reference to the given string and assigns it to the MxclusterId field.
func (o *MxedgeStats) SetMxclusterId(v string) {
	o.MxclusterId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MxedgeStats) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MxedgeStats) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MxedgeStats) SetName(v string) {
	o.Name = &v
}

// GetNumTunnels returns the NumTunnels field value if set, zero value otherwise.
func (o *MxedgeStats) GetNumTunnels() int32 {
	if o == nil || IsNil(o.NumTunnels) {
		var ret int32
		return ret
	}
	return *o.NumTunnels
}

// GetNumTunnelsOk returns a tuple with the NumTunnels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetNumTunnelsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumTunnels) {
		return nil, false
	}
	return o.NumTunnels, true
}

// HasNumTunnels returns a boolean if a field has been set.
func (o *MxedgeStats) HasNumTunnels() bool {
	if o != nil && !IsNil(o.NumTunnels) {
		return true
	}

	return false
}

// SetNumTunnels gets a reference to the given int32 and assigns it to the NumTunnels field.
func (o *MxedgeStats) SetNumTunnels(v int32) {
	o.NumTunnels = &v
}

// GetOobIpConfig returns the OobIpConfig field value if set, zero value otherwise.
func (o *MxedgeStats) GetOobIpConfig() MxedgeOobIpConfig {
	if o == nil || IsNil(o.OobIpConfig) {
		var ret MxedgeOobIpConfig
		return ret
	}
	return *o.OobIpConfig
}

// GetOobIpConfigOk returns a tuple with the OobIpConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetOobIpConfigOk() (*MxedgeOobIpConfig, bool) {
	if o == nil || IsNil(o.OobIpConfig) {
		return nil, false
	}
	return o.OobIpConfig, true
}

// HasOobIpConfig returns a boolean if a field has been set.
func (o *MxedgeStats) HasOobIpConfig() bool {
	if o != nil && !IsNil(o.OobIpConfig) {
		return true
	}

	return false
}

// SetOobIpConfig gets a reference to the given MxedgeOobIpConfig and assigns it to the OobIpConfig field.
func (o *MxedgeStats) SetOobIpConfig(v MxedgeOobIpConfig) {
	o.OobIpConfig = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *MxedgeStats) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *MxedgeStats) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *MxedgeStats) SetOrgId(v string) {
	o.OrgId = &v
}

// GetPortStat returns the PortStat field value if set, zero value otherwise.
func (o *MxedgeStats) GetPortStat() map[string]MxedgeStatsPortStat {
	if o == nil || IsNil(o.PortStat) {
		var ret map[string]MxedgeStatsPortStat
		return ret
	}
	return *o.PortStat
}

// GetPortStatOk returns a tuple with the PortStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetPortStatOk() (*map[string]MxedgeStatsPortStat, bool) {
	if o == nil || IsNil(o.PortStat) {
		return nil, false
	}
	return o.PortStat, true
}

// HasPortStat returns a boolean if a field has been set.
func (o *MxedgeStats) HasPortStat() bool {
	if o != nil && !IsNil(o.PortStat) {
		return true
	}

	return false
}

// SetPortStat gets a reference to the given map[string]MxedgeStatsPortStat and assigns it to the PortStat field.
func (o *MxedgeStats) SetPortStat(v map[string]MxedgeStatsPortStat) {
	o.PortStat = &v
}

// GetSensorStat returns the SensorStat field value if set, zero value otherwise.
func (o *MxedgeStats) GetSensorStat() map[string]interface{} {
	if o == nil || IsNil(o.SensorStat) {
		var ret map[string]interface{}
		return ret
	}
	return o.SensorStat
}

// GetSensorStatOk returns a tuple with the SensorStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetSensorStatOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.SensorStat) {
		return map[string]interface{}{}, false
	}
	return o.SensorStat, true
}

// HasSensorStat returns a boolean if a field has been set.
func (o *MxedgeStats) HasSensorStat() bool {
	if o != nil && !IsNil(o.SensorStat) {
		return true
	}

	return false
}

// SetSensorStat gets a reference to the given map[string]interface{} and assigns it to the SensorStat field.
func (o *MxedgeStats) SetSensorStat(v map[string]interface{}) {
	o.SensorStat = v
}

// GetSerial returns the Serial field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MxedgeStats) GetSerial() string {
	if o == nil || IsNil(o.Serial.Get()) {
		var ret string
		return ret
	}
	return *o.Serial.Get()
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MxedgeStats) GetSerialOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Serial.Get(), o.Serial.IsSet()
}

// HasSerial returns a boolean if a field has been set.
func (o *MxedgeStats) HasSerial() bool {
	if o != nil && o.Serial.IsSet() {
		return true
	}

	return false
}

// SetSerial gets a reference to the given NullableString and assigns it to the Serial field.
func (o *MxedgeStats) SetSerial(v string) {
	o.Serial.Set(&v)
}
// SetSerialNil sets the value for Serial to be an explicit nil
func (o *MxedgeStats) SetSerialNil() {
	o.Serial.Set(nil)
}

// UnsetSerial ensures that no value is present for Serial, not even an explicit nil
func (o *MxedgeStats) UnsetSerial() {
	o.Serial.Unset()
}

// GetServiceStat returns the ServiceStat field value if set, zero value otherwise.
func (o *MxedgeStats) GetServiceStat() map[string]MxedgeStatsServiceStat {
	if o == nil || IsNil(o.ServiceStat) {
		var ret map[string]MxedgeStatsServiceStat
		return ret
	}
	return *o.ServiceStat
}

// GetServiceStatOk returns a tuple with the ServiceStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetServiceStatOk() (*map[string]MxedgeStatsServiceStat, bool) {
	if o == nil || IsNil(o.ServiceStat) {
		return nil, false
	}
	return o.ServiceStat, true
}

// HasServiceStat returns a boolean if a field has been set.
func (o *MxedgeStats) HasServiceStat() bool {
	if o != nil && !IsNil(o.ServiceStat) {
		return true
	}

	return false
}

// SetServiceStat gets a reference to the given map[string]MxedgeStatsServiceStat and assigns it to the ServiceStat field.
func (o *MxedgeStats) SetServiceStat(v map[string]MxedgeStatsServiceStat) {
	o.ServiceStat = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *MxedgeStats) GetServices() []string {
	if o == nil || IsNil(o.Services) {
		var ret []string
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetServicesOk() ([]string, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *MxedgeStats) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given []string and assigns it to the Services field.
func (o *MxedgeStats) SetServices(v []string) {
	o.Services = v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *MxedgeStats) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *MxedgeStats) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *MxedgeStats) SetSiteId(v string) {
	o.SiteId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MxedgeStats) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MxedgeStats) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MxedgeStats) SetStatus(v string) {
	o.Status = &v
}

// GetTuntermIpConfig returns the TuntermIpConfig field value if set, zero value otherwise.
func (o *MxedgeStats) GetTuntermIpConfig() MxedgeStatsTuntermIpConfig {
	if o == nil || IsNil(o.TuntermIpConfig) {
		var ret MxedgeStatsTuntermIpConfig
		return ret
	}
	return *o.TuntermIpConfig
}

// GetTuntermIpConfigOk returns a tuple with the TuntermIpConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetTuntermIpConfigOk() (*MxedgeStatsTuntermIpConfig, bool) {
	if o == nil || IsNil(o.TuntermIpConfig) {
		return nil, false
	}
	return o.TuntermIpConfig, true
}

// HasTuntermIpConfig returns a boolean if a field has been set.
func (o *MxedgeStats) HasTuntermIpConfig() bool {
	if o != nil && !IsNil(o.TuntermIpConfig) {
		return true
	}

	return false
}

// SetTuntermIpConfig gets a reference to the given MxedgeStatsTuntermIpConfig and assigns it to the TuntermIpConfig field.
func (o *MxedgeStats) SetTuntermIpConfig(v MxedgeStatsTuntermIpConfig) {
	o.TuntermIpConfig = &v
}

// GetTuntermPortConfig returns the TuntermPortConfig field value if set, zero value otherwise.
func (o *MxedgeStats) GetTuntermPortConfig() MxedgeStatsTuntermPortConfig {
	if o == nil || IsNil(o.TuntermPortConfig) {
		var ret MxedgeStatsTuntermPortConfig
		return ret
	}
	return *o.TuntermPortConfig
}

// GetTuntermPortConfigOk returns a tuple with the TuntermPortConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetTuntermPortConfigOk() (*MxedgeStatsTuntermPortConfig, bool) {
	if o == nil || IsNil(o.TuntermPortConfig) {
		return nil, false
	}
	return o.TuntermPortConfig, true
}

// HasTuntermPortConfig returns a boolean if a field has been set.
func (o *MxedgeStats) HasTuntermPortConfig() bool {
	if o != nil && !IsNil(o.TuntermPortConfig) {
		return true
	}

	return false
}

// SetTuntermPortConfig gets a reference to the given MxedgeStatsTuntermPortConfig and assigns it to the TuntermPortConfig field.
func (o *MxedgeStats) SetTuntermPortConfig(v MxedgeStatsTuntermPortConfig) {
	o.TuntermPortConfig = &v
}

// GetTuntermRegistered returns the TuntermRegistered field value if set, zero value otherwise.
func (o *MxedgeStats) GetTuntermRegistered() bool {
	if o == nil || IsNil(o.TuntermRegistered) {
		var ret bool
		return ret
	}
	return *o.TuntermRegistered
}

// GetTuntermRegisteredOk returns a tuple with the TuntermRegistered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetTuntermRegisteredOk() (*bool, bool) {
	if o == nil || IsNil(o.TuntermRegistered) {
		return nil, false
	}
	return o.TuntermRegistered, true
}

// HasTuntermRegistered returns a boolean if a field has been set.
func (o *MxedgeStats) HasTuntermRegistered() bool {
	if o != nil && !IsNil(o.TuntermRegistered) {
		return true
	}

	return false
}

// SetTuntermRegistered gets a reference to the given bool and assigns it to the TuntermRegistered field.
func (o *MxedgeStats) SetTuntermRegistered(v bool) {
	o.TuntermRegistered = &v
}

// GetTuntermStat returns the TuntermStat field value if set, zero value otherwise.
func (o *MxedgeStats) GetTuntermStat() MxedgeStatsTuntermStat {
	if o == nil || IsNil(o.TuntermStat) {
		var ret MxedgeStatsTuntermStat
		return ret
	}
	return *o.TuntermStat
}

// GetTuntermStatOk returns a tuple with the TuntermStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetTuntermStatOk() (*MxedgeStatsTuntermStat, bool) {
	if o == nil || IsNil(o.TuntermStat) {
		return nil, false
	}
	return o.TuntermStat, true
}

// HasTuntermStat returns a boolean if a field has been set.
func (o *MxedgeStats) HasTuntermStat() bool {
	if o != nil && !IsNil(o.TuntermStat) {
		return true
	}

	return false
}

// SetTuntermStat gets a reference to the given MxedgeStatsTuntermStat and assigns it to the TuntermStat field.
func (o *MxedgeStats) SetTuntermStat(v MxedgeStatsTuntermStat) {
	o.TuntermStat = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *MxedgeStats) GetUptime() int32 {
	if o == nil || IsNil(o.Uptime) {
		var ret int32
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetUptimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Uptime) {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *MxedgeStats) HasUptime() bool {
	if o != nil && !IsNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given int32 and assigns it to the Uptime field.
func (o *MxedgeStats) SetUptime(v int32) {
	o.Uptime = &v
}

// GetVirtualizationType returns the VirtualizationType field value if set, zero value otherwise.
func (o *MxedgeStats) GetVirtualizationType() string {
	if o == nil || IsNil(o.VirtualizationType) {
		var ret string
		return ret
	}
	return *o.VirtualizationType
}

// GetVirtualizationTypeOk returns a tuple with the VirtualizationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeStats) GetVirtualizationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualizationType) {
		return nil, false
	}
	return o.VirtualizationType, true
}

// HasVirtualizationType returns a boolean if a field has been set.
func (o *MxedgeStats) HasVirtualizationType() bool {
	if o != nil && !IsNil(o.VirtualizationType) {
		return true
	}

	return false
}

// SetVirtualizationType gets a reference to the given string and assigns it to the VirtualizationType field.
func (o *MxedgeStats) SetVirtualizationType(v string) {
	o.VirtualizationType = &v
}

func (o MxedgeStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MxedgeStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CpuStat) {
		toSerialize["cpu_stat"] = o.CpuStat
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.FipsEnabled) {
		toSerialize["fips_enabled"] = o.FipsEnabled
	}
	if !IsNil(o.ForSite) {
		toSerialize["for_site"] = o.ForSite
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IpStat) {
		toSerialize["ip_stat"] = o.IpStat
	}
	if !IsNil(o.LagStat) {
		toSerialize["lag_stat"] = o.LagStat
	}
	if !IsNil(o.LastSeen) {
		toSerialize["last_seen"] = o.LastSeen
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.MemoryStat) {
		toSerialize["memory_stat"] = o.MemoryStat
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.ModifiedTime) {
		toSerialize["modified_time"] = o.ModifiedTime
	}
	if !IsNil(o.MxagentRegistered) {
		toSerialize["mxagent_registered"] = o.MxagentRegistered
	}
	if !IsNil(o.MxclusterId) {
		toSerialize["mxcluster_id"] = o.MxclusterId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NumTunnels) {
		toSerialize["num_tunnels"] = o.NumTunnels
	}
	if !IsNil(o.OobIpConfig) {
		toSerialize["oob_ip_config"] = o.OobIpConfig
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.PortStat) {
		toSerialize["port_stat"] = o.PortStat
	}
	if !IsNil(o.SensorStat) {
		toSerialize["sensor_stat"] = o.SensorStat
	}
	if o.Serial.IsSet() {
		toSerialize["serial"] = o.Serial.Get()
	}
	if !IsNil(o.ServiceStat) {
		toSerialize["service_stat"] = o.ServiceStat
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TuntermIpConfig) {
		toSerialize["tunterm_ip_config"] = o.TuntermIpConfig
	}
	if !IsNil(o.TuntermPortConfig) {
		toSerialize["tunterm_port_config"] = o.TuntermPortConfig
	}
	if !IsNil(o.TuntermRegistered) {
		toSerialize["tunterm_registered"] = o.TuntermRegistered
	}
	if !IsNil(o.TuntermStat) {
		toSerialize["tunterm_stat"] = o.TuntermStat
	}
	if !IsNil(o.Uptime) {
		toSerialize["uptime"] = o.Uptime
	}
	if !IsNil(o.VirtualizationType) {
		toSerialize["virtualization_type"] = o.VirtualizationType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MxedgeStats) UnmarshalJSON(data []byte) (err error) {
	varMxedgeStats := _MxedgeStats{}

	err = json.Unmarshal(data, &varMxedgeStats)

	if err != nil {
		return err
	}

	*o = MxedgeStats(varMxedgeStats)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cpu_stat")
		delete(additionalProperties, "created_time")
		delete(additionalProperties, "fips_enabled")
		delete(additionalProperties, "for_site")
		delete(additionalProperties, "id")
		delete(additionalProperties, "ip_stat")
		delete(additionalProperties, "lag_stat")
		delete(additionalProperties, "last_seen")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "memory_stat")
		delete(additionalProperties, "model")
		delete(additionalProperties, "modified_time")
		delete(additionalProperties, "mxagent_registered")
		delete(additionalProperties, "mxcluster_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "num_tunnels")
		delete(additionalProperties, "oob_ip_config")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "port_stat")
		delete(additionalProperties, "sensor_stat")
		delete(additionalProperties, "serial")
		delete(additionalProperties, "service_stat")
		delete(additionalProperties, "services")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "status")
		delete(additionalProperties, "tunterm_ip_config")
		delete(additionalProperties, "tunterm_port_config")
		delete(additionalProperties, "tunterm_registered")
		delete(additionalProperties, "tunterm_stat")
		delete(additionalProperties, "uptime")
		delete(additionalProperties, "virtualization_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMxedgeStats struct {
	value *MxedgeStats
	isSet bool
}

func (v NullableMxedgeStats) Get() *MxedgeStats {
	return v.value
}

func (v *NullableMxedgeStats) Set(val *MxedgeStats) {
	v.value = val
	v.isSet = true
}

func (v NullableMxedgeStats) IsSet() bool {
	return v.isSet
}

func (v *NullableMxedgeStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMxedgeStats(val *MxedgeStats) *NullableMxedgeStats {
	return &NullableMxedgeStats{value: val, isSet: true}
}

func (v NullableMxedgeStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMxedgeStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


