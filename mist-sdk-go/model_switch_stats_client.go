/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the SwitchStatsClient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SwitchStatsClient{}

// SwitchStatsClient struct for SwitchStatsClient
type SwitchStatsClient struct {
	DeviceMac *string `json:"device_mac,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Mac *string `json:"mac,omitempty"`
	PortId *string `json:"port_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SwitchStatsClient SwitchStatsClient

// NewSwitchStatsClient instantiates a new SwitchStatsClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSwitchStatsClient() *SwitchStatsClient {
	this := SwitchStatsClient{}
	return &this
}

// NewSwitchStatsClientWithDefaults instantiates a new SwitchStatsClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSwitchStatsClientWithDefaults() *SwitchStatsClient {
	this := SwitchStatsClient{}
	return &this
}

// GetDeviceMac returns the DeviceMac field value if set, zero value otherwise.
func (o *SwitchStatsClient) GetDeviceMac() string {
	if o == nil || IsNil(o.DeviceMac) {
		var ret string
		return ret
	}
	return *o.DeviceMac
}

// GetDeviceMacOk returns a tuple with the DeviceMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchStatsClient) GetDeviceMacOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceMac) {
		return nil, false
	}
	return o.DeviceMac, true
}

// HasDeviceMac returns a boolean if a field has been set.
func (o *SwitchStatsClient) HasDeviceMac() bool {
	if o != nil && !IsNil(o.DeviceMac) {
		return true
	}

	return false
}

// SetDeviceMac gets a reference to the given string and assigns it to the DeviceMac field.
func (o *SwitchStatsClient) SetDeviceMac(v string) {
	o.DeviceMac = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *SwitchStatsClient) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchStatsClient) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *SwitchStatsClient) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *SwitchStatsClient) SetHostname(v string) {
	o.Hostname = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *SwitchStatsClient) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchStatsClient) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *SwitchStatsClient) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *SwitchStatsClient) SetMac(v string) {
	o.Mac = &v
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *SwitchStatsClient) GetPortId() string {
	if o == nil || IsNil(o.PortId) {
		var ret string
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchStatsClient) GetPortIdOk() (*string, bool) {
	if o == nil || IsNil(o.PortId) {
		return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *SwitchStatsClient) HasPortId() bool {
	if o != nil && !IsNil(o.PortId) {
		return true
	}

	return false
}

// SetPortId gets a reference to the given string and assigns it to the PortId field.
func (o *SwitchStatsClient) SetPortId(v string) {
	o.PortId = &v
}

func (o SwitchStatsClient) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SwitchStatsClient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceMac) {
		toSerialize["device_mac"] = o.DeviceMac
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.PortId) {
		toSerialize["port_id"] = o.PortId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SwitchStatsClient) UnmarshalJSON(data []byte) (err error) {
	varSwitchStatsClient := _SwitchStatsClient{}

	err = json.Unmarshal(data, &varSwitchStatsClient)

	if err != nil {
		return err
	}

	*o = SwitchStatsClient(varSwitchStatsClient)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "device_mac")
		delete(additionalProperties, "hostname")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "port_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSwitchStatsClient struct {
	value *SwitchStatsClient
	isSet bool
}

func (v NullableSwitchStatsClient) Get() *SwitchStatsClient {
	return v.value
}

func (v *NullableSwitchStatsClient) Set(val *SwitchStatsClient) {
	v.value = val
	v.isSet = true
}

func (v NullableSwitchStatsClient) IsSet() bool {
	return v.isSet
}

func (v *NullableSwitchStatsClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSwitchStatsClient(val *SwitchStatsClient) *NullableSwitchStatsClient {
	return &NullableSwitchStatsClient{value: val, isSet: true}
}

func (v NullableSwitchStatsClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSwitchStatsClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


