/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the MxtunnelIpsecExtraRoute type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MxtunnelIpsecExtraRoute{}

// MxtunnelIpsecExtraRoute struct for MxtunnelIpsecExtraRoute
type MxtunnelIpsecExtraRoute struct {
	Dest *string `json:"dest,omitempty"`
	NextHop *string `json:"next_hop,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MxtunnelIpsecExtraRoute MxtunnelIpsecExtraRoute

// NewMxtunnelIpsecExtraRoute instantiates a new MxtunnelIpsecExtraRoute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMxtunnelIpsecExtraRoute() *MxtunnelIpsecExtraRoute {
	this := MxtunnelIpsecExtraRoute{}
	return &this
}

// NewMxtunnelIpsecExtraRouteWithDefaults instantiates a new MxtunnelIpsecExtraRoute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMxtunnelIpsecExtraRouteWithDefaults() *MxtunnelIpsecExtraRoute {
	this := MxtunnelIpsecExtraRoute{}
	return &this
}

// GetDest returns the Dest field value if set, zero value otherwise.
func (o *MxtunnelIpsecExtraRoute) GetDest() string {
	if o == nil || IsNil(o.Dest) {
		var ret string
		return ret
	}
	return *o.Dest
}

// GetDestOk returns a tuple with the Dest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxtunnelIpsecExtraRoute) GetDestOk() (*string, bool) {
	if o == nil || IsNil(o.Dest) {
		return nil, false
	}
	return o.Dest, true
}

// HasDest returns a boolean if a field has been set.
func (o *MxtunnelIpsecExtraRoute) HasDest() bool {
	if o != nil && !IsNil(o.Dest) {
		return true
	}

	return false
}

// SetDest gets a reference to the given string and assigns it to the Dest field.
func (o *MxtunnelIpsecExtraRoute) SetDest(v string) {
	o.Dest = &v
}

// GetNextHop returns the NextHop field value if set, zero value otherwise.
func (o *MxtunnelIpsecExtraRoute) GetNextHop() string {
	if o == nil || IsNil(o.NextHop) {
		var ret string
		return ret
	}
	return *o.NextHop
}

// GetNextHopOk returns a tuple with the NextHop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxtunnelIpsecExtraRoute) GetNextHopOk() (*string, bool) {
	if o == nil || IsNil(o.NextHop) {
		return nil, false
	}
	return o.NextHop, true
}

// HasNextHop returns a boolean if a field has been set.
func (o *MxtunnelIpsecExtraRoute) HasNextHop() bool {
	if o != nil && !IsNil(o.NextHop) {
		return true
	}

	return false
}

// SetNextHop gets a reference to the given string and assigns it to the NextHop field.
func (o *MxtunnelIpsecExtraRoute) SetNextHop(v string) {
	o.NextHop = &v
}

func (o MxtunnelIpsecExtraRoute) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MxtunnelIpsecExtraRoute) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dest) {
		toSerialize["dest"] = o.Dest
	}
	if !IsNil(o.NextHop) {
		toSerialize["next_hop"] = o.NextHop
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MxtunnelIpsecExtraRoute) UnmarshalJSON(data []byte) (err error) {
	varMxtunnelIpsecExtraRoute := _MxtunnelIpsecExtraRoute{}

	err = json.Unmarshal(data, &varMxtunnelIpsecExtraRoute)

	if err != nil {
		return err
	}

	*o = MxtunnelIpsecExtraRoute(varMxtunnelIpsecExtraRoute)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dest")
		delete(additionalProperties, "next_hop")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMxtunnelIpsecExtraRoute struct {
	value *MxtunnelIpsecExtraRoute
	isSet bool
}

func (v NullableMxtunnelIpsecExtraRoute) Get() *MxtunnelIpsecExtraRoute {
	return v.value
}

func (v *NullableMxtunnelIpsecExtraRoute) Set(val *MxtunnelIpsecExtraRoute) {
	v.value = val
	v.isSet = true
}

func (v NullableMxtunnelIpsecExtraRoute) IsSet() bool {
	return v.isSet
}

func (v *NullableMxtunnelIpsecExtraRoute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMxtunnelIpsecExtraRoute(val *MxtunnelIpsecExtraRoute) *NullableMxtunnelIpsecExtraRoute {
	return &NullableMxtunnelIpsecExtraRoute{value: val, isSet: true}
}

func (v NullableMxtunnelIpsecExtraRoute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMxtunnelIpsecExtraRoute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


