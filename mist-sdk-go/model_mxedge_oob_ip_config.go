/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the MxedgeOobIpConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MxedgeOobIpConfig{}

// MxedgeOobIpConfig ip configuration of the Mist Edge out-of_band management interface
type MxedgeOobIpConfig struct {
	Autoconf6 *bool `json:"autoconf6,omitempty"`
	Dhcp6 *bool `json:"dhcp6,omitempty"`
	// IPv4 ignored if `type`!=`static` IPv6 ignored if `type6`!=`static`
	Dns []string `json:"dns,omitempty"`
	// if `type`=`static`
	Gateway *string `json:"gateway,omitempty"`
	Gateway6 *string `json:"gateway6,omitempty"`
	// if `type`=`static`
	Ip *string `json:"ip,omitempty"`
	Ip6 *string `json:"ip6,omitempty"`
	// if `type`=`static`
	Netmask *string `json:"netmask,omitempty"`
	Netmask6 *string `json:"netmask6,omitempty"`
	Type *IpType `json:"type,omitempty"`
	Type6 *IpType `json:"type6,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MxedgeOobIpConfig MxedgeOobIpConfig

// NewMxedgeOobIpConfig instantiates a new MxedgeOobIpConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMxedgeOobIpConfig() *MxedgeOobIpConfig {
	this := MxedgeOobIpConfig{}
	var autoconf6 bool = true
	this.Autoconf6 = &autoconf6
	var dhcp6 bool = true
	this.Dhcp6 = &dhcp6
	var type_ IpType = IPTYPE_DHCP
	this.Type = &type_
	var type6 IpType = IPTYPE_DHCP
	this.Type6 = &type6
	return &this
}

// NewMxedgeOobIpConfigWithDefaults instantiates a new MxedgeOobIpConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMxedgeOobIpConfigWithDefaults() *MxedgeOobIpConfig {
	this := MxedgeOobIpConfig{}
	var autoconf6 bool = true
	this.Autoconf6 = &autoconf6
	var dhcp6 bool = true
	this.Dhcp6 = &dhcp6
	var type_ IpType = IPTYPE_DHCP
	this.Type = &type_
	var type6 IpType = IPTYPE_DHCP
	this.Type6 = &type6
	return &this
}

// GetAutoconf6 returns the Autoconf6 field value if set, zero value otherwise.
func (o *MxedgeOobIpConfig) GetAutoconf6() bool {
	if o == nil || IsNil(o.Autoconf6) {
		var ret bool
		return ret
	}
	return *o.Autoconf6
}

// GetAutoconf6Ok returns a tuple with the Autoconf6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeOobIpConfig) GetAutoconf6Ok() (*bool, bool) {
	if o == nil || IsNil(o.Autoconf6) {
		return nil, false
	}
	return o.Autoconf6, true
}

// HasAutoconf6 returns a boolean if a field has been set.
func (o *MxedgeOobIpConfig) HasAutoconf6() bool {
	if o != nil && !IsNil(o.Autoconf6) {
		return true
	}

	return false
}

// SetAutoconf6 gets a reference to the given bool and assigns it to the Autoconf6 field.
func (o *MxedgeOobIpConfig) SetAutoconf6(v bool) {
	o.Autoconf6 = &v
}

// GetDhcp6 returns the Dhcp6 field value if set, zero value otherwise.
func (o *MxedgeOobIpConfig) GetDhcp6() bool {
	if o == nil || IsNil(o.Dhcp6) {
		var ret bool
		return ret
	}
	return *o.Dhcp6
}

// GetDhcp6Ok returns a tuple with the Dhcp6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeOobIpConfig) GetDhcp6Ok() (*bool, bool) {
	if o == nil || IsNil(o.Dhcp6) {
		return nil, false
	}
	return o.Dhcp6, true
}

// HasDhcp6 returns a boolean if a field has been set.
func (o *MxedgeOobIpConfig) HasDhcp6() bool {
	if o != nil && !IsNil(o.Dhcp6) {
		return true
	}

	return false
}

// SetDhcp6 gets a reference to the given bool and assigns it to the Dhcp6 field.
func (o *MxedgeOobIpConfig) SetDhcp6(v bool) {
	o.Dhcp6 = &v
}

// GetDns returns the Dns field value if set, zero value otherwise.
func (o *MxedgeOobIpConfig) GetDns() []string {
	if o == nil || IsNil(o.Dns) {
		var ret []string
		return ret
	}
	return o.Dns
}

// GetDnsOk returns a tuple with the Dns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeOobIpConfig) GetDnsOk() ([]string, bool) {
	if o == nil || IsNil(o.Dns) {
		return nil, false
	}
	return o.Dns, true
}

// HasDns returns a boolean if a field has been set.
func (o *MxedgeOobIpConfig) HasDns() bool {
	if o != nil && !IsNil(o.Dns) {
		return true
	}

	return false
}

// SetDns gets a reference to the given []string and assigns it to the Dns field.
func (o *MxedgeOobIpConfig) SetDns(v []string) {
	o.Dns = v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *MxedgeOobIpConfig) GetGateway() string {
	if o == nil || IsNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeOobIpConfig) GetGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *MxedgeOobIpConfig) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *MxedgeOobIpConfig) SetGateway(v string) {
	o.Gateway = &v
}

// GetGateway6 returns the Gateway6 field value if set, zero value otherwise.
func (o *MxedgeOobIpConfig) GetGateway6() string {
	if o == nil || IsNil(o.Gateway6) {
		var ret string
		return ret
	}
	return *o.Gateway6
}

// GetGateway6Ok returns a tuple with the Gateway6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeOobIpConfig) GetGateway6Ok() (*string, bool) {
	if o == nil || IsNil(o.Gateway6) {
		return nil, false
	}
	return o.Gateway6, true
}

// HasGateway6 returns a boolean if a field has been set.
func (o *MxedgeOobIpConfig) HasGateway6() bool {
	if o != nil && !IsNil(o.Gateway6) {
		return true
	}

	return false
}

// SetGateway6 gets a reference to the given string and assigns it to the Gateway6 field.
func (o *MxedgeOobIpConfig) SetGateway6(v string) {
	o.Gateway6 = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *MxedgeOobIpConfig) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeOobIpConfig) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *MxedgeOobIpConfig) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *MxedgeOobIpConfig) SetIp(v string) {
	o.Ip = &v
}

// GetIp6 returns the Ip6 field value if set, zero value otherwise.
func (o *MxedgeOobIpConfig) GetIp6() string {
	if o == nil || IsNil(o.Ip6) {
		var ret string
		return ret
	}
	return *o.Ip6
}

// GetIp6Ok returns a tuple with the Ip6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeOobIpConfig) GetIp6Ok() (*string, bool) {
	if o == nil || IsNil(o.Ip6) {
		return nil, false
	}
	return o.Ip6, true
}

// HasIp6 returns a boolean if a field has been set.
func (o *MxedgeOobIpConfig) HasIp6() bool {
	if o != nil && !IsNil(o.Ip6) {
		return true
	}

	return false
}

// SetIp6 gets a reference to the given string and assigns it to the Ip6 field.
func (o *MxedgeOobIpConfig) SetIp6(v string) {
	o.Ip6 = &v
}

// GetNetmask returns the Netmask field value if set, zero value otherwise.
func (o *MxedgeOobIpConfig) GetNetmask() string {
	if o == nil || IsNil(o.Netmask) {
		var ret string
		return ret
	}
	return *o.Netmask
}

// GetNetmaskOk returns a tuple with the Netmask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeOobIpConfig) GetNetmaskOk() (*string, bool) {
	if o == nil || IsNil(o.Netmask) {
		return nil, false
	}
	return o.Netmask, true
}

// HasNetmask returns a boolean if a field has been set.
func (o *MxedgeOobIpConfig) HasNetmask() bool {
	if o != nil && !IsNil(o.Netmask) {
		return true
	}

	return false
}

// SetNetmask gets a reference to the given string and assigns it to the Netmask field.
func (o *MxedgeOobIpConfig) SetNetmask(v string) {
	o.Netmask = &v
}

// GetNetmask6 returns the Netmask6 field value if set, zero value otherwise.
func (o *MxedgeOobIpConfig) GetNetmask6() string {
	if o == nil || IsNil(o.Netmask6) {
		var ret string
		return ret
	}
	return *o.Netmask6
}

// GetNetmask6Ok returns a tuple with the Netmask6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeOobIpConfig) GetNetmask6Ok() (*string, bool) {
	if o == nil || IsNil(o.Netmask6) {
		return nil, false
	}
	return o.Netmask6, true
}

// HasNetmask6 returns a boolean if a field has been set.
func (o *MxedgeOobIpConfig) HasNetmask6() bool {
	if o != nil && !IsNil(o.Netmask6) {
		return true
	}

	return false
}

// SetNetmask6 gets a reference to the given string and assigns it to the Netmask6 field.
func (o *MxedgeOobIpConfig) SetNetmask6(v string) {
	o.Netmask6 = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MxedgeOobIpConfig) GetType() IpType {
	if o == nil || IsNil(o.Type) {
		var ret IpType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeOobIpConfig) GetTypeOk() (*IpType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MxedgeOobIpConfig) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given IpType and assigns it to the Type field.
func (o *MxedgeOobIpConfig) SetType(v IpType) {
	o.Type = &v
}

// GetType6 returns the Type6 field value if set, zero value otherwise.
func (o *MxedgeOobIpConfig) GetType6() IpType {
	if o == nil || IsNil(o.Type6) {
		var ret IpType
		return ret
	}
	return *o.Type6
}

// GetType6Ok returns a tuple with the Type6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeOobIpConfig) GetType6Ok() (*IpType, bool) {
	if o == nil || IsNil(o.Type6) {
		return nil, false
	}
	return o.Type6, true
}

// HasType6 returns a boolean if a field has been set.
func (o *MxedgeOobIpConfig) HasType6() bool {
	if o != nil && !IsNil(o.Type6) {
		return true
	}

	return false
}

// SetType6 gets a reference to the given IpType and assigns it to the Type6 field.
func (o *MxedgeOobIpConfig) SetType6(v IpType) {
	o.Type6 = &v
}

func (o MxedgeOobIpConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MxedgeOobIpConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Autoconf6) {
		toSerialize["autoconf6"] = o.Autoconf6
	}
	if !IsNil(o.Dhcp6) {
		toSerialize["dhcp6"] = o.Dhcp6
	}
	if !IsNil(o.Dns) {
		toSerialize["dns"] = o.Dns
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.Gateway6) {
		toSerialize["gateway6"] = o.Gateway6
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Ip6) {
		toSerialize["ip6"] = o.Ip6
	}
	if !IsNil(o.Netmask) {
		toSerialize["netmask"] = o.Netmask
	}
	if !IsNil(o.Netmask6) {
		toSerialize["netmask6"] = o.Netmask6
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Type6) {
		toSerialize["type6"] = o.Type6
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MxedgeOobIpConfig) UnmarshalJSON(data []byte) (err error) {
	varMxedgeOobIpConfig := _MxedgeOobIpConfig{}

	err = json.Unmarshal(data, &varMxedgeOobIpConfig)

	if err != nil {
		return err
	}

	*o = MxedgeOobIpConfig(varMxedgeOobIpConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "autoconf6")
		delete(additionalProperties, "dhcp6")
		delete(additionalProperties, "dns")
		delete(additionalProperties, "gateway")
		delete(additionalProperties, "gateway6")
		delete(additionalProperties, "ip")
		delete(additionalProperties, "ip6")
		delete(additionalProperties, "netmask")
		delete(additionalProperties, "netmask6")
		delete(additionalProperties, "type")
		delete(additionalProperties, "type6")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMxedgeOobIpConfig struct {
	value *MxedgeOobIpConfig
	isSet bool
}

func (v NullableMxedgeOobIpConfig) Get() *MxedgeOobIpConfig {
	return v.value
}

func (v *NullableMxedgeOobIpConfig) Set(val *MxedgeOobIpConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMxedgeOobIpConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMxedgeOobIpConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMxedgeOobIpConfig(val *MxedgeOobIpConfig) *NullableMxedgeOobIpConfig {
	return &NullableMxedgeOobIpConfig{value: val, isSet: true}
}

func (v NullableMxedgeOobIpConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMxedgeOobIpConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


