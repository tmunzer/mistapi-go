/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the SnmpConfigV2cConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnmpConfigV2cConfig{}

// SnmpConfigV2cConfig struct for SnmpConfigV2cConfig
type SnmpConfigV2cConfig struct {
	Authorization *string `json:"authorization,omitempty"`
	// client_list_name here should refer to client_list above
	ClientListName *string `json:"client_list_name,omitempty"`
	CommunityName *string `json:"community_name,omitempty"`
	// view name here should be defined in views above
	View *string `json:"view,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SnmpConfigV2cConfig SnmpConfigV2cConfig

// NewSnmpConfigV2cConfig instantiates a new SnmpConfigV2cConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnmpConfigV2cConfig() *SnmpConfigV2cConfig {
	this := SnmpConfigV2cConfig{}
	return &this
}

// NewSnmpConfigV2cConfigWithDefaults instantiates a new SnmpConfigV2cConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnmpConfigV2cConfigWithDefaults() *SnmpConfigV2cConfig {
	this := SnmpConfigV2cConfig{}
	return &this
}

// GetAuthorization returns the Authorization field value if set, zero value otherwise.
func (o *SnmpConfigV2cConfig) GetAuthorization() string {
	if o == nil || IsNil(o.Authorization) {
		var ret string
		return ret
	}
	return *o.Authorization
}

// GetAuthorizationOk returns a tuple with the Authorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnmpConfigV2cConfig) GetAuthorizationOk() (*string, bool) {
	if o == nil || IsNil(o.Authorization) {
		return nil, false
	}
	return o.Authorization, true
}

// HasAuthorization returns a boolean if a field has been set.
func (o *SnmpConfigV2cConfig) HasAuthorization() bool {
	if o != nil && !IsNil(o.Authorization) {
		return true
	}

	return false
}

// SetAuthorization gets a reference to the given string and assigns it to the Authorization field.
func (o *SnmpConfigV2cConfig) SetAuthorization(v string) {
	o.Authorization = &v
}

// GetClientListName returns the ClientListName field value if set, zero value otherwise.
func (o *SnmpConfigV2cConfig) GetClientListName() string {
	if o == nil || IsNil(o.ClientListName) {
		var ret string
		return ret
	}
	return *o.ClientListName
}

// GetClientListNameOk returns a tuple with the ClientListName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnmpConfigV2cConfig) GetClientListNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClientListName) {
		return nil, false
	}
	return o.ClientListName, true
}

// HasClientListName returns a boolean if a field has been set.
func (o *SnmpConfigV2cConfig) HasClientListName() bool {
	if o != nil && !IsNil(o.ClientListName) {
		return true
	}

	return false
}

// SetClientListName gets a reference to the given string and assigns it to the ClientListName field.
func (o *SnmpConfigV2cConfig) SetClientListName(v string) {
	o.ClientListName = &v
}

// GetCommunityName returns the CommunityName field value if set, zero value otherwise.
func (o *SnmpConfigV2cConfig) GetCommunityName() string {
	if o == nil || IsNil(o.CommunityName) {
		var ret string
		return ret
	}
	return *o.CommunityName
}

// GetCommunityNameOk returns a tuple with the CommunityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnmpConfigV2cConfig) GetCommunityNameOk() (*string, bool) {
	if o == nil || IsNil(o.CommunityName) {
		return nil, false
	}
	return o.CommunityName, true
}

// HasCommunityName returns a boolean if a field has been set.
func (o *SnmpConfigV2cConfig) HasCommunityName() bool {
	if o != nil && !IsNil(o.CommunityName) {
		return true
	}

	return false
}

// SetCommunityName gets a reference to the given string and assigns it to the CommunityName field.
func (o *SnmpConfigV2cConfig) SetCommunityName(v string) {
	o.CommunityName = &v
}

// GetView returns the View field value if set, zero value otherwise.
func (o *SnmpConfigV2cConfig) GetView() string {
	if o == nil || IsNil(o.View) {
		var ret string
		return ret
	}
	return *o.View
}

// GetViewOk returns a tuple with the View field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnmpConfigV2cConfig) GetViewOk() (*string, bool) {
	if o == nil || IsNil(o.View) {
		return nil, false
	}
	return o.View, true
}

// HasView returns a boolean if a field has been set.
func (o *SnmpConfigV2cConfig) HasView() bool {
	if o != nil && !IsNil(o.View) {
		return true
	}

	return false
}

// SetView gets a reference to the given string and assigns it to the View field.
func (o *SnmpConfigV2cConfig) SetView(v string) {
	o.View = &v
}

func (o SnmpConfigV2cConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnmpConfigV2cConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Authorization) {
		toSerialize["authorization"] = o.Authorization
	}
	if !IsNil(o.ClientListName) {
		toSerialize["client_list_name"] = o.ClientListName
	}
	if !IsNil(o.CommunityName) {
		toSerialize["community_name"] = o.CommunityName
	}
	if !IsNil(o.View) {
		toSerialize["view"] = o.View
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SnmpConfigV2cConfig) UnmarshalJSON(data []byte) (err error) {
	varSnmpConfigV2cConfig := _SnmpConfigV2cConfig{}

	err = json.Unmarshal(data, &varSnmpConfigV2cConfig)

	if err != nil {
		return err
	}

	*o = SnmpConfigV2cConfig(varSnmpConfigV2cConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "authorization")
		delete(additionalProperties, "client_list_name")
		delete(additionalProperties, "community_name")
		delete(additionalProperties, "view")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSnmpConfigV2cConfig struct {
	value *SnmpConfigV2cConfig
	isSet bool
}

func (v NullableSnmpConfigV2cConfig) Get() *SnmpConfigV2cConfig {
	return v.value
}

func (v *NullableSnmpConfigV2cConfig) Set(val *SnmpConfigV2cConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSnmpConfigV2cConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSnmpConfigV2cConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnmpConfigV2cConfig(val *SnmpConfigV2cConfig) *NullableSnmpConfigV2cConfig {
	return &NullableSnmpConfigV2cConfig{value: val, isSet: true}
}

func (v NullableSnmpConfigV2cConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnmpConfigV2cConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


