/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ResponseOrgSearchItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseOrgSearchItem{}

// ResponseOrgSearchItem struct for ResponseOrgSearchItem
type ResponseOrgSearchItem struct {
	MspId *string `json:"msp_id,omitempty"`
	// org name
	Name *string `json:"name,omitempty"`
	NumAps *int32 `json:"num_aps,omitempty"`
	NumGateways *int32 `json:"num_gateways,omitempty"`
	NumSites *int32 `json:"num_sites,omitempty"`
	NumSwitches *int32 `json:"num_switches,omitempty"`
	NumUnassignedAps *int32 `json:"num_unassigned_aps,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	SubAnaEntitled *int32 `json:"sub_ana_entitled,omitempty"`
	SubAnaRequired *int32 `json:"sub_ana_required,omitempty"`
	SubAstEntitled *int32 `json:"sub_ast_entitled,omitempty"`
	SubAstRequired *int32 `json:"sub_ast_required,omitempty"`
	SubEngEntitled *int32 `json:"sub_eng_entitled,omitempty"`
	SubEngRequired *int32 `json:"sub_eng_required,omitempty"`
	SubEx12Required *int32 `json:"sub_ex12_required,omitempty"`
	// if this org has sufficient subscription
	SubInsufficient *bool `json:"sub_insufficient,omitempty"`
	SubManEntitled *int32 `json:"sub_man_entitled,omitempty"`
	SubManRequired *int32 `json:"sub_man_required,omitempty"`
	SubMeEntitled *int32 `json:"sub_me_entitled,omitempty"`
	SubVnaEntitled *int32 `json:"sub_vna_entitled,omitempty"`
	SubVnaRequired *int32 `json:"sub_vna_required,omitempty"`
	Timestamp *float32 `json:"timestamp,omitempty"`
	// if this org is under trial period
	TrialEnabled *bool `json:"trial_enabled,omitempty"`
	// a list of types that enabled by usage
	UsageTypes []string `json:"usage_types,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResponseOrgSearchItem ResponseOrgSearchItem

// NewResponseOrgSearchItem instantiates a new ResponseOrgSearchItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseOrgSearchItem() *ResponseOrgSearchItem {
	this := ResponseOrgSearchItem{}
	return &this
}

// NewResponseOrgSearchItemWithDefaults instantiates a new ResponseOrgSearchItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseOrgSearchItemWithDefaults() *ResponseOrgSearchItem {
	this := ResponseOrgSearchItem{}
	return &this
}

// GetMspId returns the MspId field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetMspId() string {
	if o == nil || IsNil(o.MspId) {
		var ret string
		return ret
	}
	return *o.MspId
}

// GetMspIdOk returns a tuple with the MspId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetMspIdOk() (*string, bool) {
	if o == nil || IsNil(o.MspId) {
		return nil, false
	}
	return o.MspId, true
}

// HasMspId returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasMspId() bool {
	if o != nil && !IsNil(o.MspId) {
		return true
	}

	return false
}

// SetMspId gets a reference to the given string and assigns it to the MspId field.
func (o *ResponseOrgSearchItem) SetMspId(v string) {
	o.MspId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ResponseOrgSearchItem) SetName(v string) {
	o.Name = &v
}

// GetNumAps returns the NumAps field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetNumAps() int32 {
	if o == nil || IsNil(o.NumAps) {
		var ret int32
		return ret
	}
	return *o.NumAps
}

// GetNumApsOk returns a tuple with the NumAps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetNumApsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumAps) {
		return nil, false
	}
	return o.NumAps, true
}

// HasNumAps returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasNumAps() bool {
	if o != nil && !IsNil(o.NumAps) {
		return true
	}

	return false
}

// SetNumAps gets a reference to the given int32 and assigns it to the NumAps field.
func (o *ResponseOrgSearchItem) SetNumAps(v int32) {
	o.NumAps = &v
}

// GetNumGateways returns the NumGateways field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetNumGateways() int32 {
	if o == nil || IsNil(o.NumGateways) {
		var ret int32
		return ret
	}
	return *o.NumGateways
}

// GetNumGatewaysOk returns a tuple with the NumGateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetNumGatewaysOk() (*int32, bool) {
	if o == nil || IsNil(o.NumGateways) {
		return nil, false
	}
	return o.NumGateways, true
}

// HasNumGateways returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasNumGateways() bool {
	if o != nil && !IsNil(o.NumGateways) {
		return true
	}

	return false
}

// SetNumGateways gets a reference to the given int32 and assigns it to the NumGateways field.
func (o *ResponseOrgSearchItem) SetNumGateways(v int32) {
	o.NumGateways = &v
}

// GetNumSites returns the NumSites field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetNumSites() int32 {
	if o == nil || IsNil(o.NumSites) {
		var ret int32
		return ret
	}
	return *o.NumSites
}

// GetNumSitesOk returns a tuple with the NumSites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetNumSitesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumSites) {
		return nil, false
	}
	return o.NumSites, true
}

// HasNumSites returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasNumSites() bool {
	if o != nil && !IsNil(o.NumSites) {
		return true
	}

	return false
}

// SetNumSites gets a reference to the given int32 and assigns it to the NumSites field.
func (o *ResponseOrgSearchItem) SetNumSites(v int32) {
	o.NumSites = &v
}

// GetNumSwitches returns the NumSwitches field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetNumSwitches() int32 {
	if o == nil || IsNil(o.NumSwitches) {
		var ret int32
		return ret
	}
	return *o.NumSwitches
}

// GetNumSwitchesOk returns a tuple with the NumSwitches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetNumSwitchesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumSwitches) {
		return nil, false
	}
	return o.NumSwitches, true
}

// HasNumSwitches returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasNumSwitches() bool {
	if o != nil && !IsNil(o.NumSwitches) {
		return true
	}

	return false
}

// SetNumSwitches gets a reference to the given int32 and assigns it to the NumSwitches field.
func (o *ResponseOrgSearchItem) SetNumSwitches(v int32) {
	o.NumSwitches = &v
}

// GetNumUnassignedAps returns the NumUnassignedAps field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetNumUnassignedAps() int32 {
	if o == nil || IsNil(o.NumUnassignedAps) {
		var ret int32
		return ret
	}
	return *o.NumUnassignedAps
}

// GetNumUnassignedApsOk returns a tuple with the NumUnassignedAps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetNumUnassignedApsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumUnassignedAps) {
		return nil, false
	}
	return o.NumUnassignedAps, true
}

// HasNumUnassignedAps returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasNumUnassignedAps() bool {
	if o != nil && !IsNil(o.NumUnassignedAps) {
		return true
	}

	return false
}

// SetNumUnassignedAps gets a reference to the given int32 and assigns it to the NumUnassignedAps field.
func (o *ResponseOrgSearchItem) SetNumUnassignedAps(v int32) {
	o.NumUnassignedAps = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *ResponseOrgSearchItem) SetOrgId(v string) {
	o.OrgId = &v
}

// GetSubAnaEntitled returns the SubAnaEntitled field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetSubAnaEntitled() int32 {
	if o == nil || IsNil(o.SubAnaEntitled) {
		var ret int32
		return ret
	}
	return *o.SubAnaEntitled
}

// GetSubAnaEntitledOk returns a tuple with the SubAnaEntitled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetSubAnaEntitledOk() (*int32, bool) {
	if o == nil || IsNil(o.SubAnaEntitled) {
		return nil, false
	}
	return o.SubAnaEntitled, true
}

// HasSubAnaEntitled returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasSubAnaEntitled() bool {
	if o != nil && !IsNil(o.SubAnaEntitled) {
		return true
	}

	return false
}

// SetSubAnaEntitled gets a reference to the given int32 and assigns it to the SubAnaEntitled field.
func (o *ResponseOrgSearchItem) SetSubAnaEntitled(v int32) {
	o.SubAnaEntitled = &v
}

// GetSubAnaRequired returns the SubAnaRequired field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetSubAnaRequired() int32 {
	if o == nil || IsNil(o.SubAnaRequired) {
		var ret int32
		return ret
	}
	return *o.SubAnaRequired
}

// GetSubAnaRequiredOk returns a tuple with the SubAnaRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetSubAnaRequiredOk() (*int32, bool) {
	if o == nil || IsNil(o.SubAnaRequired) {
		return nil, false
	}
	return o.SubAnaRequired, true
}

// HasSubAnaRequired returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasSubAnaRequired() bool {
	if o != nil && !IsNil(o.SubAnaRequired) {
		return true
	}

	return false
}

// SetSubAnaRequired gets a reference to the given int32 and assigns it to the SubAnaRequired field.
func (o *ResponseOrgSearchItem) SetSubAnaRequired(v int32) {
	o.SubAnaRequired = &v
}

// GetSubAstEntitled returns the SubAstEntitled field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetSubAstEntitled() int32 {
	if o == nil || IsNil(o.SubAstEntitled) {
		var ret int32
		return ret
	}
	return *o.SubAstEntitled
}

// GetSubAstEntitledOk returns a tuple with the SubAstEntitled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetSubAstEntitledOk() (*int32, bool) {
	if o == nil || IsNil(o.SubAstEntitled) {
		return nil, false
	}
	return o.SubAstEntitled, true
}

// HasSubAstEntitled returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasSubAstEntitled() bool {
	if o != nil && !IsNil(o.SubAstEntitled) {
		return true
	}

	return false
}

// SetSubAstEntitled gets a reference to the given int32 and assigns it to the SubAstEntitled field.
func (o *ResponseOrgSearchItem) SetSubAstEntitled(v int32) {
	o.SubAstEntitled = &v
}

// GetSubAstRequired returns the SubAstRequired field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetSubAstRequired() int32 {
	if o == nil || IsNil(o.SubAstRequired) {
		var ret int32
		return ret
	}
	return *o.SubAstRequired
}

// GetSubAstRequiredOk returns a tuple with the SubAstRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetSubAstRequiredOk() (*int32, bool) {
	if o == nil || IsNil(o.SubAstRequired) {
		return nil, false
	}
	return o.SubAstRequired, true
}

// HasSubAstRequired returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasSubAstRequired() bool {
	if o != nil && !IsNil(o.SubAstRequired) {
		return true
	}

	return false
}

// SetSubAstRequired gets a reference to the given int32 and assigns it to the SubAstRequired field.
func (o *ResponseOrgSearchItem) SetSubAstRequired(v int32) {
	o.SubAstRequired = &v
}

// GetSubEngEntitled returns the SubEngEntitled field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetSubEngEntitled() int32 {
	if o == nil || IsNil(o.SubEngEntitled) {
		var ret int32
		return ret
	}
	return *o.SubEngEntitled
}

// GetSubEngEntitledOk returns a tuple with the SubEngEntitled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetSubEngEntitledOk() (*int32, bool) {
	if o == nil || IsNil(o.SubEngEntitled) {
		return nil, false
	}
	return o.SubEngEntitled, true
}

// HasSubEngEntitled returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasSubEngEntitled() bool {
	if o != nil && !IsNil(o.SubEngEntitled) {
		return true
	}

	return false
}

// SetSubEngEntitled gets a reference to the given int32 and assigns it to the SubEngEntitled field.
func (o *ResponseOrgSearchItem) SetSubEngEntitled(v int32) {
	o.SubEngEntitled = &v
}

// GetSubEngRequired returns the SubEngRequired field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetSubEngRequired() int32 {
	if o == nil || IsNil(o.SubEngRequired) {
		var ret int32
		return ret
	}
	return *o.SubEngRequired
}

// GetSubEngRequiredOk returns a tuple with the SubEngRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetSubEngRequiredOk() (*int32, bool) {
	if o == nil || IsNil(o.SubEngRequired) {
		return nil, false
	}
	return o.SubEngRequired, true
}

// HasSubEngRequired returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasSubEngRequired() bool {
	if o != nil && !IsNil(o.SubEngRequired) {
		return true
	}

	return false
}

// SetSubEngRequired gets a reference to the given int32 and assigns it to the SubEngRequired field.
func (o *ResponseOrgSearchItem) SetSubEngRequired(v int32) {
	o.SubEngRequired = &v
}

// GetSubEx12Required returns the SubEx12Required field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetSubEx12Required() int32 {
	if o == nil || IsNil(o.SubEx12Required) {
		var ret int32
		return ret
	}
	return *o.SubEx12Required
}

// GetSubEx12RequiredOk returns a tuple with the SubEx12Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetSubEx12RequiredOk() (*int32, bool) {
	if o == nil || IsNil(o.SubEx12Required) {
		return nil, false
	}
	return o.SubEx12Required, true
}

// HasSubEx12Required returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasSubEx12Required() bool {
	if o != nil && !IsNil(o.SubEx12Required) {
		return true
	}

	return false
}

// SetSubEx12Required gets a reference to the given int32 and assigns it to the SubEx12Required field.
func (o *ResponseOrgSearchItem) SetSubEx12Required(v int32) {
	o.SubEx12Required = &v
}

// GetSubInsufficient returns the SubInsufficient field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetSubInsufficient() bool {
	if o == nil || IsNil(o.SubInsufficient) {
		var ret bool
		return ret
	}
	return *o.SubInsufficient
}

// GetSubInsufficientOk returns a tuple with the SubInsufficient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetSubInsufficientOk() (*bool, bool) {
	if o == nil || IsNil(o.SubInsufficient) {
		return nil, false
	}
	return o.SubInsufficient, true
}

// HasSubInsufficient returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasSubInsufficient() bool {
	if o != nil && !IsNil(o.SubInsufficient) {
		return true
	}

	return false
}

// SetSubInsufficient gets a reference to the given bool and assigns it to the SubInsufficient field.
func (o *ResponseOrgSearchItem) SetSubInsufficient(v bool) {
	o.SubInsufficient = &v
}

// GetSubManEntitled returns the SubManEntitled field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetSubManEntitled() int32 {
	if o == nil || IsNil(o.SubManEntitled) {
		var ret int32
		return ret
	}
	return *o.SubManEntitled
}

// GetSubManEntitledOk returns a tuple with the SubManEntitled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetSubManEntitledOk() (*int32, bool) {
	if o == nil || IsNil(o.SubManEntitled) {
		return nil, false
	}
	return o.SubManEntitled, true
}

// HasSubManEntitled returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasSubManEntitled() bool {
	if o != nil && !IsNil(o.SubManEntitled) {
		return true
	}

	return false
}

// SetSubManEntitled gets a reference to the given int32 and assigns it to the SubManEntitled field.
func (o *ResponseOrgSearchItem) SetSubManEntitled(v int32) {
	o.SubManEntitled = &v
}

// GetSubManRequired returns the SubManRequired field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetSubManRequired() int32 {
	if o == nil || IsNil(o.SubManRequired) {
		var ret int32
		return ret
	}
	return *o.SubManRequired
}

// GetSubManRequiredOk returns a tuple with the SubManRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetSubManRequiredOk() (*int32, bool) {
	if o == nil || IsNil(o.SubManRequired) {
		return nil, false
	}
	return o.SubManRequired, true
}

// HasSubManRequired returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasSubManRequired() bool {
	if o != nil && !IsNil(o.SubManRequired) {
		return true
	}

	return false
}

// SetSubManRequired gets a reference to the given int32 and assigns it to the SubManRequired field.
func (o *ResponseOrgSearchItem) SetSubManRequired(v int32) {
	o.SubManRequired = &v
}

// GetSubMeEntitled returns the SubMeEntitled field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetSubMeEntitled() int32 {
	if o == nil || IsNil(o.SubMeEntitled) {
		var ret int32
		return ret
	}
	return *o.SubMeEntitled
}

// GetSubMeEntitledOk returns a tuple with the SubMeEntitled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetSubMeEntitledOk() (*int32, bool) {
	if o == nil || IsNil(o.SubMeEntitled) {
		return nil, false
	}
	return o.SubMeEntitled, true
}

// HasSubMeEntitled returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasSubMeEntitled() bool {
	if o != nil && !IsNil(o.SubMeEntitled) {
		return true
	}

	return false
}

// SetSubMeEntitled gets a reference to the given int32 and assigns it to the SubMeEntitled field.
func (o *ResponseOrgSearchItem) SetSubMeEntitled(v int32) {
	o.SubMeEntitled = &v
}

// GetSubVnaEntitled returns the SubVnaEntitled field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetSubVnaEntitled() int32 {
	if o == nil || IsNil(o.SubVnaEntitled) {
		var ret int32
		return ret
	}
	return *o.SubVnaEntitled
}

// GetSubVnaEntitledOk returns a tuple with the SubVnaEntitled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetSubVnaEntitledOk() (*int32, bool) {
	if o == nil || IsNil(o.SubVnaEntitled) {
		return nil, false
	}
	return o.SubVnaEntitled, true
}

// HasSubVnaEntitled returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasSubVnaEntitled() bool {
	if o != nil && !IsNil(o.SubVnaEntitled) {
		return true
	}

	return false
}

// SetSubVnaEntitled gets a reference to the given int32 and assigns it to the SubVnaEntitled field.
func (o *ResponseOrgSearchItem) SetSubVnaEntitled(v int32) {
	o.SubVnaEntitled = &v
}

// GetSubVnaRequired returns the SubVnaRequired field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetSubVnaRequired() int32 {
	if o == nil || IsNil(o.SubVnaRequired) {
		var ret int32
		return ret
	}
	return *o.SubVnaRequired
}

// GetSubVnaRequiredOk returns a tuple with the SubVnaRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetSubVnaRequiredOk() (*int32, bool) {
	if o == nil || IsNil(o.SubVnaRequired) {
		return nil, false
	}
	return o.SubVnaRequired, true
}

// HasSubVnaRequired returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasSubVnaRequired() bool {
	if o != nil && !IsNil(o.SubVnaRequired) {
		return true
	}

	return false
}

// SetSubVnaRequired gets a reference to the given int32 and assigns it to the SubVnaRequired field.
func (o *ResponseOrgSearchItem) SetSubVnaRequired(v int32) {
	o.SubVnaRequired = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetTimestamp() float32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret float32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given float32 and assigns it to the Timestamp field.
func (o *ResponseOrgSearchItem) SetTimestamp(v float32) {
	o.Timestamp = &v
}

// GetTrialEnabled returns the TrialEnabled field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetTrialEnabled() bool {
	if o == nil || IsNil(o.TrialEnabled) {
		var ret bool
		return ret
	}
	return *o.TrialEnabled
}

// GetTrialEnabledOk returns a tuple with the TrialEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetTrialEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.TrialEnabled) {
		return nil, false
	}
	return o.TrialEnabled, true
}

// HasTrialEnabled returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasTrialEnabled() bool {
	if o != nil && !IsNil(o.TrialEnabled) {
		return true
	}

	return false
}

// SetTrialEnabled gets a reference to the given bool and assigns it to the TrialEnabled field.
func (o *ResponseOrgSearchItem) SetTrialEnabled(v bool) {
	o.TrialEnabled = &v
}

// GetUsageTypes returns the UsageTypes field value if set, zero value otherwise.
func (o *ResponseOrgSearchItem) GetUsageTypes() []string {
	if o == nil || IsNil(o.UsageTypes) {
		var ret []string
		return ret
	}
	return o.UsageTypes
}

// GetUsageTypesOk returns a tuple with the UsageTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseOrgSearchItem) GetUsageTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.UsageTypes) {
		return nil, false
	}
	return o.UsageTypes, true
}

// HasUsageTypes returns a boolean if a field has been set.
func (o *ResponseOrgSearchItem) HasUsageTypes() bool {
	if o != nil && !IsNil(o.UsageTypes) {
		return true
	}

	return false
}

// SetUsageTypes gets a reference to the given []string and assigns it to the UsageTypes field.
func (o *ResponseOrgSearchItem) SetUsageTypes(v []string) {
	o.UsageTypes = v
}

func (o ResponseOrgSearchItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseOrgSearchItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MspId) {
		toSerialize["msp_id"] = o.MspId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NumAps) {
		toSerialize["num_aps"] = o.NumAps
	}
	if !IsNil(o.NumGateways) {
		toSerialize["num_gateways"] = o.NumGateways
	}
	if !IsNil(o.NumSites) {
		toSerialize["num_sites"] = o.NumSites
	}
	if !IsNil(o.NumSwitches) {
		toSerialize["num_switches"] = o.NumSwitches
	}
	if !IsNil(o.NumUnassignedAps) {
		toSerialize["num_unassigned_aps"] = o.NumUnassignedAps
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.SubAnaEntitled) {
		toSerialize["sub_ana_entitled"] = o.SubAnaEntitled
	}
	if !IsNil(o.SubAnaRequired) {
		toSerialize["sub_ana_required"] = o.SubAnaRequired
	}
	if !IsNil(o.SubAstEntitled) {
		toSerialize["sub_ast_entitled"] = o.SubAstEntitled
	}
	if !IsNil(o.SubAstRequired) {
		toSerialize["sub_ast_required"] = o.SubAstRequired
	}
	if !IsNil(o.SubEngEntitled) {
		toSerialize["sub_eng_entitled"] = o.SubEngEntitled
	}
	if !IsNil(o.SubEngRequired) {
		toSerialize["sub_eng_required"] = o.SubEngRequired
	}
	if !IsNil(o.SubEx12Required) {
		toSerialize["sub_ex12_required"] = o.SubEx12Required
	}
	if !IsNil(o.SubInsufficient) {
		toSerialize["sub_insufficient"] = o.SubInsufficient
	}
	if !IsNil(o.SubManEntitled) {
		toSerialize["sub_man_entitled"] = o.SubManEntitled
	}
	if !IsNil(o.SubManRequired) {
		toSerialize["sub_man_required"] = o.SubManRequired
	}
	if !IsNil(o.SubMeEntitled) {
		toSerialize["sub_me_entitled"] = o.SubMeEntitled
	}
	if !IsNil(o.SubVnaEntitled) {
		toSerialize["sub_vna_entitled"] = o.SubVnaEntitled
	}
	if !IsNil(o.SubVnaRequired) {
		toSerialize["sub_vna_required"] = o.SubVnaRequired
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.TrialEnabled) {
		toSerialize["trial_enabled"] = o.TrialEnabled
	}
	if !IsNil(o.UsageTypes) {
		toSerialize["usage_types"] = o.UsageTypes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResponseOrgSearchItem) UnmarshalJSON(data []byte) (err error) {
	varResponseOrgSearchItem := _ResponseOrgSearchItem{}

	err = json.Unmarshal(data, &varResponseOrgSearchItem)

	if err != nil {
		return err
	}

	*o = ResponseOrgSearchItem(varResponseOrgSearchItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "msp_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "num_aps")
		delete(additionalProperties, "num_gateways")
		delete(additionalProperties, "num_sites")
		delete(additionalProperties, "num_switches")
		delete(additionalProperties, "num_unassigned_aps")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "sub_ana_entitled")
		delete(additionalProperties, "sub_ana_required")
		delete(additionalProperties, "sub_ast_entitled")
		delete(additionalProperties, "sub_ast_required")
		delete(additionalProperties, "sub_eng_entitled")
		delete(additionalProperties, "sub_eng_required")
		delete(additionalProperties, "sub_ex12_required")
		delete(additionalProperties, "sub_insufficient")
		delete(additionalProperties, "sub_man_entitled")
		delete(additionalProperties, "sub_man_required")
		delete(additionalProperties, "sub_me_entitled")
		delete(additionalProperties, "sub_vna_entitled")
		delete(additionalProperties, "sub_vna_required")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "trial_enabled")
		delete(additionalProperties, "usage_types")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResponseOrgSearchItem struct {
	value *ResponseOrgSearchItem
	isSet bool
}

func (v NullableResponseOrgSearchItem) Get() *ResponseOrgSearchItem {
	return v.value
}

func (v *NullableResponseOrgSearchItem) Set(val *ResponseOrgSearchItem) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseOrgSearchItem) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseOrgSearchItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseOrgSearchItem(val *ResponseOrgSearchItem) *NullableResponseOrgSearchItem {
	return &NullableResponseOrgSearchItem{value: val, isSet: true}
}

func (v NullableResponseOrgSearchItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseOrgSearchItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


