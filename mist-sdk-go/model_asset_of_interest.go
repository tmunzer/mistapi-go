/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the AssetOfInterest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetOfInterest{}

// AssetOfInterest struct for AssetOfInterest
type AssetOfInterest struct {
	CheckpointPrep *float32 `json:"_checkpoint_prep,omitempty"`
	CheckpointPreparer *float32 `json:"_checkpoint_preparer,omitempty"`
	CheckpointScan *float32 `json:"_checkpoint_scan,omitempty"`
	Timestamp *float32 `json:"_timestamp,omitempty"`
	Ttl *float32 `json:"_ttl,omitempty"`
	ApMac *string `json:"ap_mac,omitempty"`
	Beam *float32 `json:"beam,omitempty"`
	By *string `json:"by,omitempty"`
	CurrSite *string `json:"curr_site,omitempty"`
	DeviceName *string `json:"device_name,omitempty"`
	Id *string `json:"id,omitempty"`
	LastSeen *float32 `json:"last_seen,omitempty"`
	Mac *string `json:"mac,omitempty"`
	Manufacture *string `json:"manufacture,omitempty"`
	MapId *string `json:"map_id,omitempty"`
	Name *string `json:"name,omitempty"`
	Rssi *float32 `json:"rssi,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AssetOfInterest AssetOfInterest

// NewAssetOfInterest instantiates a new AssetOfInterest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetOfInterest() *AssetOfInterest {
	this := AssetOfInterest{}
	return &this
}

// NewAssetOfInterestWithDefaults instantiates a new AssetOfInterest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetOfInterestWithDefaults() *AssetOfInterest {
	this := AssetOfInterest{}
	return &this
}

// GetCheckpointPrep returns the CheckpointPrep field value if set, zero value otherwise.
func (o *AssetOfInterest) GetCheckpointPrep() float32 {
	if o == nil || IsNil(o.CheckpointPrep) {
		var ret float32
		return ret
	}
	return *o.CheckpointPrep
}

// GetCheckpointPrepOk returns a tuple with the CheckpointPrep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetCheckpointPrepOk() (*float32, bool) {
	if o == nil || IsNil(o.CheckpointPrep) {
		return nil, false
	}
	return o.CheckpointPrep, true
}

// HasCheckpointPrep returns a boolean if a field has been set.
func (o *AssetOfInterest) HasCheckpointPrep() bool {
	if o != nil && !IsNil(o.CheckpointPrep) {
		return true
	}

	return false
}

// SetCheckpointPrep gets a reference to the given float32 and assigns it to the CheckpointPrep field.
func (o *AssetOfInterest) SetCheckpointPrep(v float32) {
	o.CheckpointPrep = &v
}

// GetCheckpointPreparer returns the CheckpointPreparer field value if set, zero value otherwise.
func (o *AssetOfInterest) GetCheckpointPreparer() float32 {
	if o == nil || IsNil(o.CheckpointPreparer) {
		var ret float32
		return ret
	}
	return *o.CheckpointPreparer
}

// GetCheckpointPreparerOk returns a tuple with the CheckpointPreparer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetCheckpointPreparerOk() (*float32, bool) {
	if o == nil || IsNil(o.CheckpointPreparer) {
		return nil, false
	}
	return o.CheckpointPreparer, true
}

// HasCheckpointPreparer returns a boolean if a field has been set.
func (o *AssetOfInterest) HasCheckpointPreparer() bool {
	if o != nil && !IsNil(o.CheckpointPreparer) {
		return true
	}

	return false
}

// SetCheckpointPreparer gets a reference to the given float32 and assigns it to the CheckpointPreparer field.
func (o *AssetOfInterest) SetCheckpointPreparer(v float32) {
	o.CheckpointPreparer = &v
}

// GetCheckpointScan returns the CheckpointScan field value if set, zero value otherwise.
func (o *AssetOfInterest) GetCheckpointScan() float32 {
	if o == nil || IsNil(o.CheckpointScan) {
		var ret float32
		return ret
	}
	return *o.CheckpointScan
}

// GetCheckpointScanOk returns a tuple with the CheckpointScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetCheckpointScanOk() (*float32, bool) {
	if o == nil || IsNil(o.CheckpointScan) {
		return nil, false
	}
	return o.CheckpointScan, true
}

// HasCheckpointScan returns a boolean if a field has been set.
func (o *AssetOfInterest) HasCheckpointScan() bool {
	if o != nil && !IsNil(o.CheckpointScan) {
		return true
	}

	return false
}

// SetCheckpointScan gets a reference to the given float32 and assigns it to the CheckpointScan field.
func (o *AssetOfInterest) SetCheckpointScan(v float32) {
	o.CheckpointScan = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *AssetOfInterest) GetTimestamp() float32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret float32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *AssetOfInterest) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given float32 and assigns it to the Timestamp field.
func (o *AssetOfInterest) SetTimestamp(v float32) {
	o.Timestamp = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *AssetOfInterest) GetTtl() float32 {
	if o == nil || IsNil(o.Ttl) {
		var ret float32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetTtlOk() (*float32, bool) {
	if o == nil || IsNil(o.Ttl) {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *AssetOfInterest) HasTtl() bool {
	if o != nil && !IsNil(o.Ttl) {
		return true
	}

	return false
}

// SetTtl gets a reference to the given float32 and assigns it to the Ttl field.
func (o *AssetOfInterest) SetTtl(v float32) {
	o.Ttl = &v
}

// GetApMac returns the ApMac field value if set, zero value otherwise.
func (o *AssetOfInterest) GetApMac() string {
	if o == nil || IsNil(o.ApMac) {
		var ret string
		return ret
	}
	return *o.ApMac
}

// GetApMacOk returns a tuple with the ApMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetApMacOk() (*string, bool) {
	if o == nil || IsNil(o.ApMac) {
		return nil, false
	}
	return o.ApMac, true
}

// HasApMac returns a boolean if a field has been set.
func (o *AssetOfInterest) HasApMac() bool {
	if o != nil && !IsNil(o.ApMac) {
		return true
	}

	return false
}

// SetApMac gets a reference to the given string and assigns it to the ApMac field.
func (o *AssetOfInterest) SetApMac(v string) {
	o.ApMac = &v
}

// GetBeam returns the Beam field value if set, zero value otherwise.
func (o *AssetOfInterest) GetBeam() float32 {
	if o == nil || IsNil(o.Beam) {
		var ret float32
		return ret
	}
	return *o.Beam
}

// GetBeamOk returns a tuple with the Beam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetBeamOk() (*float32, bool) {
	if o == nil || IsNil(o.Beam) {
		return nil, false
	}
	return o.Beam, true
}

// HasBeam returns a boolean if a field has been set.
func (o *AssetOfInterest) HasBeam() bool {
	if o != nil && !IsNil(o.Beam) {
		return true
	}

	return false
}

// SetBeam gets a reference to the given float32 and assigns it to the Beam field.
func (o *AssetOfInterest) SetBeam(v float32) {
	o.Beam = &v
}

// GetBy returns the By field value if set, zero value otherwise.
func (o *AssetOfInterest) GetBy() string {
	if o == nil || IsNil(o.By) {
		var ret string
		return ret
	}
	return *o.By
}

// GetByOk returns a tuple with the By field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetByOk() (*string, bool) {
	if o == nil || IsNil(o.By) {
		return nil, false
	}
	return o.By, true
}

// HasBy returns a boolean if a field has been set.
func (o *AssetOfInterest) HasBy() bool {
	if o != nil && !IsNil(o.By) {
		return true
	}

	return false
}

// SetBy gets a reference to the given string and assigns it to the By field.
func (o *AssetOfInterest) SetBy(v string) {
	o.By = &v
}

// GetCurrSite returns the CurrSite field value if set, zero value otherwise.
func (o *AssetOfInterest) GetCurrSite() string {
	if o == nil || IsNil(o.CurrSite) {
		var ret string
		return ret
	}
	return *o.CurrSite
}

// GetCurrSiteOk returns a tuple with the CurrSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetCurrSiteOk() (*string, bool) {
	if o == nil || IsNil(o.CurrSite) {
		return nil, false
	}
	return o.CurrSite, true
}

// HasCurrSite returns a boolean if a field has been set.
func (o *AssetOfInterest) HasCurrSite() bool {
	if o != nil && !IsNil(o.CurrSite) {
		return true
	}

	return false
}

// SetCurrSite gets a reference to the given string and assigns it to the CurrSite field.
func (o *AssetOfInterest) SetCurrSite(v string) {
	o.CurrSite = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *AssetOfInterest) GetDeviceName() string {
	if o == nil || IsNil(o.DeviceName) {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetDeviceNameOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceName) {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *AssetOfInterest) HasDeviceName() bool {
	if o != nil && !IsNil(o.DeviceName) {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *AssetOfInterest) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AssetOfInterest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AssetOfInterest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AssetOfInterest) SetId(v string) {
	o.Id = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *AssetOfInterest) GetLastSeen() float32 {
	if o == nil || IsNil(o.LastSeen) {
		var ret float32
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetLastSeenOk() (*float32, bool) {
	if o == nil || IsNil(o.LastSeen) {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *AssetOfInterest) HasLastSeen() bool {
	if o != nil && !IsNil(o.LastSeen) {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given float32 and assigns it to the LastSeen field.
func (o *AssetOfInterest) SetLastSeen(v float32) {
	o.LastSeen = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *AssetOfInterest) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *AssetOfInterest) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *AssetOfInterest) SetMac(v string) {
	o.Mac = &v
}

// GetManufacture returns the Manufacture field value if set, zero value otherwise.
func (o *AssetOfInterest) GetManufacture() string {
	if o == nil || IsNil(o.Manufacture) {
		var ret string
		return ret
	}
	return *o.Manufacture
}

// GetManufactureOk returns a tuple with the Manufacture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetManufactureOk() (*string, bool) {
	if o == nil || IsNil(o.Manufacture) {
		return nil, false
	}
	return o.Manufacture, true
}

// HasManufacture returns a boolean if a field has been set.
func (o *AssetOfInterest) HasManufacture() bool {
	if o != nil && !IsNil(o.Manufacture) {
		return true
	}

	return false
}

// SetManufacture gets a reference to the given string and assigns it to the Manufacture field.
func (o *AssetOfInterest) SetManufacture(v string) {
	o.Manufacture = &v
}

// GetMapId returns the MapId field value if set, zero value otherwise.
func (o *AssetOfInterest) GetMapId() string {
	if o == nil || IsNil(o.MapId) {
		var ret string
		return ret
	}
	return *o.MapId
}

// GetMapIdOk returns a tuple with the MapId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetMapIdOk() (*string, bool) {
	if o == nil || IsNil(o.MapId) {
		return nil, false
	}
	return o.MapId, true
}

// HasMapId returns a boolean if a field has been set.
func (o *AssetOfInterest) HasMapId() bool {
	if o != nil && !IsNil(o.MapId) {
		return true
	}

	return false
}

// SetMapId gets a reference to the given string and assigns it to the MapId field.
func (o *AssetOfInterest) SetMapId(v string) {
	o.MapId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AssetOfInterest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AssetOfInterest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AssetOfInterest) SetName(v string) {
	o.Name = &v
}

// GetRssi returns the Rssi field value if set, zero value otherwise.
func (o *AssetOfInterest) GetRssi() float32 {
	if o == nil || IsNil(o.Rssi) {
		var ret float32
		return ret
	}
	return *o.Rssi
}

// GetRssiOk returns a tuple with the Rssi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetOfInterest) GetRssiOk() (*float32, bool) {
	if o == nil || IsNil(o.Rssi) {
		return nil, false
	}
	return o.Rssi, true
}

// HasRssi returns a boolean if a field has been set.
func (o *AssetOfInterest) HasRssi() bool {
	if o != nil && !IsNil(o.Rssi) {
		return true
	}

	return false
}

// SetRssi gets a reference to the given float32 and assigns it to the Rssi field.
func (o *AssetOfInterest) SetRssi(v float32) {
	o.Rssi = &v
}

func (o AssetOfInterest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetOfInterest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CheckpointPrep) {
		toSerialize["_checkpoint_prep"] = o.CheckpointPrep
	}
	if !IsNil(o.CheckpointPreparer) {
		toSerialize["_checkpoint_preparer"] = o.CheckpointPreparer
	}
	if !IsNil(o.CheckpointScan) {
		toSerialize["_checkpoint_scan"] = o.CheckpointScan
	}
	if !IsNil(o.Timestamp) {
		toSerialize["_timestamp"] = o.Timestamp
	}
	if !IsNil(o.Ttl) {
		toSerialize["_ttl"] = o.Ttl
	}
	if !IsNil(o.ApMac) {
		toSerialize["ap_mac"] = o.ApMac
	}
	if !IsNil(o.Beam) {
		toSerialize["beam"] = o.Beam
	}
	if !IsNil(o.By) {
		toSerialize["by"] = o.By
	}
	if !IsNil(o.CurrSite) {
		toSerialize["curr_site"] = o.CurrSite
	}
	if !IsNil(o.DeviceName) {
		toSerialize["device_name"] = o.DeviceName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastSeen) {
		toSerialize["last_seen"] = o.LastSeen
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.Manufacture) {
		toSerialize["manufacture"] = o.Manufacture
	}
	if !IsNil(o.MapId) {
		toSerialize["map_id"] = o.MapId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Rssi) {
		toSerialize["rssi"] = o.Rssi
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AssetOfInterest) UnmarshalJSON(data []byte) (err error) {
	varAssetOfInterest := _AssetOfInterest{}

	err = json.Unmarshal(data, &varAssetOfInterest)

	if err != nil {
		return err
	}

	*o = AssetOfInterest(varAssetOfInterest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "_checkpoint_prep")
		delete(additionalProperties, "_checkpoint_preparer")
		delete(additionalProperties, "_checkpoint_scan")
		delete(additionalProperties, "_timestamp")
		delete(additionalProperties, "_ttl")
		delete(additionalProperties, "ap_mac")
		delete(additionalProperties, "beam")
		delete(additionalProperties, "by")
		delete(additionalProperties, "curr_site")
		delete(additionalProperties, "device_name")
		delete(additionalProperties, "id")
		delete(additionalProperties, "last_seen")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "manufacture")
		delete(additionalProperties, "map_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "rssi")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssetOfInterest struct {
	value *AssetOfInterest
	isSet bool
}

func (v NullableAssetOfInterest) Get() *AssetOfInterest {
	return v.value
}

func (v *NullableAssetOfInterest) Set(val *AssetOfInterest) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetOfInterest) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetOfInterest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetOfInterest(val *AssetOfInterest) *NullableAssetOfInterest {
	return &NullableAssetOfInterest{value: val, isSet: true}
}

func (v NullableAssetOfInterest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetOfInterest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


