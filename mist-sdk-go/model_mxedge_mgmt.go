/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the MxedgeMgmt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MxedgeMgmt{}

// MxedgeMgmt struct for MxedgeMgmt
type MxedgeMgmt struct {
	FipsEnabled *bool `json:"fips_enabled,omitempty"`
	MistPassword *string `json:"mist_password,omitempty"`
	OobIpType *MxedgeMgmtOobIpType `json:"oob_ip_type,omitempty"`
	OobIpType6 *MxedgeMgmtOobIpType6 `json:"oob_ip_type6,omitempty"`
	RootPassword *string `json:"root_password,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MxedgeMgmt MxedgeMgmt

// NewMxedgeMgmt instantiates a new MxedgeMgmt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMxedgeMgmt() *MxedgeMgmt {
	this := MxedgeMgmt{}
	var fipsEnabled bool = false
	this.FipsEnabled = &fipsEnabled
	var oobIpType MxedgeMgmtOobIpType = MXEDGEMGMTOOBIPTYPE_DHCP
	this.OobIpType = &oobIpType
	var oobIpType6 MxedgeMgmtOobIpType6 = MXEDGEMGMTOOBIPTYPE6_AUTOCONF
	this.OobIpType6 = &oobIpType6
	return &this
}

// NewMxedgeMgmtWithDefaults instantiates a new MxedgeMgmt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMxedgeMgmtWithDefaults() *MxedgeMgmt {
	this := MxedgeMgmt{}
	var fipsEnabled bool = false
	this.FipsEnabled = &fipsEnabled
	var oobIpType MxedgeMgmtOobIpType = MXEDGEMGMTOOBIPTYPE_DHCP
	this.OobIpType = &oobIpType
	var oobIpType6 MxedgeMgmtOobIpType6 = MXEDGEMGMTOOBIPTYPE6_AUTOCONF
	this.OobIpType6 = &oobIpType6
	return &this
}

// GetFipsEnabled returns the FipsEnabled field value if set, zero value otherwise.
func (o *MxedgeMgmt) GetFipsEnabled() bool {
	if o == nil || IsNil(o.FipsEnabled) {
		var ret bool
		return ret
	}
	return *o.FipsEnabled
}

// GetFipsEnabledOk returns a tuple with the FipsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeMgmt) GetFipsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.FipsEnabled) {
		return nil, false
	}
	return o.FipsEnabled, true
}

// HasFipsEnabled returns a boolean if a field has been set.
func (o *MxedgeMgmt) HasFipsEnabled() bool {
	if o != nil && !IsNil(o.FipsEnabled) {
		return true
	}

	return false
}

// SetFipsEnabled gets a reference to the given bool and assigns it to the FipsEnabled field.
func (o *MxedgeMgmt) SetFipsEnabled(v bool) {
	o.FipsEnabled = &v
}

// GetMistPassword returns the MistPassword field value if set, zero value otherwise.
func (o *MxedgeMgmt) GetMistPassword() string {
	if o == nil || IsNil(o.MistPassword) {
		var ret string
		return ret
	}
	return *o.MistPassword
}

// GetMistPasswordOk returns a tuple with the MistPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeMgmt) GetMistPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.MistPassword) {
		return nil, false
	}
	return o.MistPassword, true
}

// HasMistPassword returns a boolean if a field has been set.
func (o *MxedgeMgmt) HasMistPassword() bool {
	if o != nil && !IsNil(o.MistPassword) {
		return true
	}

	return false
}

// SetMistPassword gets a reference to the given string and assigns it to the MistPassword field.
func (o *MxedgeMgmt) SetMistPassword(v string) {
	o.MistPassword = &v
}

// GetOobIpType returns the OobIpType field value if set, zero value otherwise.
func (o *MxedgeMgmt) GetOobIpType() MxedgeMgmtOobIpType {
	if o == nil || IsNil(o.OobIpType) {
		var ret MxedgeMgmtOobIpType
		return ret
	}
	return *o.OobIpType
}

// GetOobIpTypeOk returns a tuple with the OobIpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeMgmt) GetOobIpTypeOk() (*MxedgeMgmtOobIpType, bool) {
	if o == nil || IsNil(o.OobIpType) {
		return nil, false
	}
	return o.OobIpType, true
}

// HasOobIpType returns a boolean if a field has been set.
func (o *MxedgeMgmt) HasOobIpType() bool {
	if o != nil && !IsNil(o.OobIpType) {
		return true
	}

	return false
}

// SetOobIpType gets a reference to the given MxedgeMgmtOobIpType and assigns it to the OobIpType field.
func (o *MxedgeMgmt) SetOobIpType(v MxedgeMgmtOobIpType) {
	o.OobIpType = &v
}

// GetOobIpType6 returns the OobIpType6 field value if set, zero value otherwise.
func (o *MxedgeMgmt) GetOobIpType6() MxedgeMgmtOobIpType6 {
	if o == nil || IsNil(o.OobIpType6) {
		var ret MxedgeMgmtOobIpType6
		return ret
	}
	return *o.OobIpType6
}

// GetOobIpType6Ok returns a tuple with the OobIpType6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeMgmt) GetOobIpType6Ok() (*MxedgeMgmtOobIpType6, bool) {
	if o == nil || IsNil(o.OobIpType6) {
		return nil, false
	}
	return o.OobIpType6, true
}

// HasOobIpType6 returns a boolean if a field has been set.
func (o *MxedgeMgmt) HasOobIpType6() bool {
	if o != nil && !IsNil(o.OobIpType6) {
		return true
	}

	return false
}

// SetOobIpType6 gets a reference to the given MxedgeMgmtOobIpType6 and assigns it to the OobIpType6 field.
func (o *MxedgeMgmt) SetOobIpType6(v MxedgeMgmtOobIpType6) {
	o.OobIpType6 = &v
}

// GetRootPassword returns the RootPassword field value if set, zero value otherwise.
func (o *MxedgeMgmt) GetRootPassword() string {
	if o == nil || IsNil(o.RootPassword) {
		var ret string
		return ret
	}
	return *o.RootPassword
}

// GetRootPasswordOk returns a tuple with the RootPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeMgmt) GetRootPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.RootPassword) {
		return nil, false
	}
	return o.RootPassword, true
}

// HasRootPassword returns a boolean if a field has been set.
func (o *MxedgeMgmt) HasRootPassword() bool {
	if o != nil && !IsNil(o.RootPassword) {
		return true
	}

	return false
}

// SetRootPassword gets a reference to the given string and assigns it to the RootPassword field.
func (o *MxedgeMgmt) SetRootPassword(v string) {
	o.RootPassword = &v
}

func (o MxedgeMgmt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MxedgeMgmt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FipsEnabled) {
		toSerialize["fips_enabled"] = o.FipsEnabled
	}
	if !IsNil(o.MistPassword) {
		toSerialize["mist_password"] = o.MistPassword
	}
	if !IsNil(o.OobIpType) {
		toSerialize["oob_ip_type"] = o.OobIpType
	}
	if !IsNil(o.OobIpType6) {
		toSerialize["oob_ip_type6"] = o.OobIpType6
	}
	if !IsNil(o.RootPassword) {
		toSerialize["root_password"] = o.RootPassword
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MxedgeMgmt) UnmarshalJSON(data []byte) (err error) {
	varMxedgeMgmt := _MxedgeMgmt{}

	err = json.Unmarshal(data, &varMxedgeMgmt)

	if err != nil {
		return err
	}

	*o = MxedgeMgmt(varMxedgeMgmt)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "fips_enabled")
		delete(additionalProperties, "mist_password")
		delete(additionalProperties, "oob_ip_type")
		delete(additionalProperties, "oob_ip_type6")
		delete(additionalProperties, "root_password")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMxedgeMgmt struct {
	value *MxedgeMgmt
	isSet bool
}

func (v NullableMxedgeMgmt) Get() *MxedgeMgmt {
	return v.value
}

func (v *NullableMxedgeMgmt) Set(val *MxedgeMgmt) {
	v.value = val
	v.isSet = true
}

func (v NullableMxedgeMgmt) IsSet() bool {
	return v.isSet
}

func (v *NullableMxedgeMgmt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMxedgeMgmt(val *MxedgeMgmt) *NullableMxedgeMgmt {
	return &NullableMxedgeMgmt{value: val, isSet: true}
}

func (v NullableMxedgeMgmt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMxedgeMgmt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


