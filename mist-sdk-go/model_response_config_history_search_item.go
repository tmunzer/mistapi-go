/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the ResponseConfigHistorySearchItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseConfigHistorySearchItem{}

// ResponseConfigHistorySearchItem struct for ResponseConfigHistorySearchItem
type ResponseConfigHistorySearchItem struct {
	Channel24 int32 `json:"channel_24"`
	Channel5 int32 `json:"channel_5"`
	RadioMacs []string `json:"radio_macs,omitempty"`
	Radios []ResponseConfigHistorySearchItemRadio `json:"radios,omitempty"`
	SecpolicyViolated bool `json:"secpolicy_violated"`
	Ssids []string `json:"ssids,omitempty"`
	Ssids24 []string `json:"ssids_24,omitempty"`
	Ssids5 []string `json:"ssids_5,omitempty"`
	Timestamp float32 `json:"timestamp"`
	Version string `json:"version"`
	Wlans []ResponseConfigHistorySearchItemWlan `json:"wlans,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResponseConfigHistorySearchItem ResponseConfigHistorySearchItem

// NewResponseConfigHistorySearchItem instantiates a new ResponseConfigHistorySearchItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseConfigHistorySearchItem(channel24 int32, channel5 int32, secpolicyViolated bool, timestamp float32, version string) *ResponseConfigHistorySearchItem {
	this := ResponseConfigHistorySearchItem{}
	this.Channel24 = channel24
	this.Channel5 = channel5
	this.SecpolicyViolated = secpolicyViolated
	this.Timestamp = timestamp
	this.Version = version
	return &this
}

// NewResponseConfigHistorySearchItemWithDefaults instantiates a new ResponseConfigHistorySearchItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseConfigHistorySearchItemWithDefaults() *ResponseConfigHistorySearchItem {
	this := ResponseConfigHistorySearchItem{}
	return &this
}

// GetChannel24 returns the Channel24 field value
func (o *ResponseConfigHistorySearchItem) GetChannel24() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Channel24
}

// GetChannel24Ok returns a tuple with the Channel24 field value
// and a boolean to check if the value has been set.
func (o *ResponseConfigHistorySearchItem) GetChannel24Ok() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channel24, true
}

// SetChannel24 sets field value
func (o *ResponseConfigHistorySearchItem) SetChannel24(v int32) {
	o.Channel24 = v
}

// GetChannel5 returns the Channel5 field value
func (o *ResponseConfigHistorySearchItem) GetChannel5() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Channel5
}

// GetChannel5Ok returns a tuple with the Channel5 field value
// and a boolean to check if the value has been set.
func (o *ResponseConfigHistorySearchItem) GetChannel5Ok() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channel5, true
}

// SetChannel5 sets field value
func (o *ResponseConfigHistorySearchItem) SetChannel5(v int32) {
	o.Channel5 = v
}

// GetRadioMacs returns the RadioMacs field value if set, zero value otherwise.
func (o *ResponseConfigHistorySearchItem) GetRadioMacs() []string {
	if o == nil || IsNil(o.RadioMacs) {
		var ret []string
		return ret
	}
	return o.RadioMacs
}

// GetRadioMacsOk returns a tuple with the RadioMacs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseConfigHistorySearchItem) GetRadioMacsOk() ([]string, bool) {
	if o == nil || IsNil(o.RadioMacs) {
		return nil, false
	}
	return o.RadioMacs, true
}

// HasRadioMacs returns a boolean if a field has been set.
func (o *ResponseConfigHistorySearchItem) HasRadioMacs() bool {
	if o != nil && !IsNil(o.RadioMacs) {
		return true
	}

	return false
}

// SetRadioMacs gets a reference to the given []string and assigns it to the RadioMacs field.
func (o *ResponseConfigHistorySearchItem) SetRadioMacs(v []string) {
	o.RadioMacs = v
}

// GetRadios returns the Radios field value if set, zero value otherwise.
func (o *ResponseConfigHistorySearchItem) GetRadios() []ResponseConfigHistorySearchItemRadio {
	if o == nil || IsNil(o.Radios) {
		var ret []ResponseConfigHistorySearchItemRadio
		return ret
	}
	return o.Radios
}

// GetRadiosOk returns a tuple with the Radios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseConfigHistorySearchItem) GetRadiosOk() ([]ResponseConfigHistorySearchItemRadio, bool) {
	if o == nil || IsNil(o.Radios) {
		return nil, false
	}
	return o.Radios, true
}

// HasRadios returns a boolean if a field has been set.
func (o *ResponseConfigHistorySearchItem) HasRadios() bool {
	if o != nil && !IsNil(o.Radios) {
		return true
	}

	return false
}

// SetRadios gets a reference to the given []ResponseConfigHistorySearchItemRadio and assigns it to the Radios field.
func (o *ResponseConfigHistorySearchItem) SetRadios(v []ResponseConfigHistorySearchItemRadio) {
	o.Radios = v
}

// GetSecpolicyViolated returns the SecpolicyViolated field value
func (o *ResponseConfigHistorySearchItem) GetSecpolicyViolated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SecpolicyViolated
}

// GetSecpolicyViolatedOk returns a tuple with the SecpolicyViolated field value
// and a boolean to check if the value has been set.
func (o *ResponseConfigHistorySearchItem) GetSecpolicyViolatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecpolicyViolated, true
}

// SetSecpolicyViolated sets field value
func (o *ResponseConfigHistorySearchItem) SetSecpolicyViolated(v bool) {
	o.SecpolicyViolated = v
}

// GetSsids returns the Ssids field value if set, zero value otherwise.
func (o *ResponseConfigHistorySearchItem) GetSsids() []string {
	if o == nil || IsNil(o.Ssids) {
		var ret []string
		return ret
	}
	return o.Ssids
}

// GetSsidsOk returns a tuple with the Ssids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseConfigHistorySearchItem) GetSsidsOk() ([]string, bool) {
	if o == nil || IsNil(o.Ssids) {
		return nil, false
	}
	return o.Ssids, true
}

// HasSsids returns a boolean if a field has been set.
func (o *ResponseConfigHistorySearchItem) HasSsids() bool {
	if o != nil && !IsNil(o.Ssids) {
		return true
	}

	return false
}

// SetSsids gets a reference to the given []string and assigns it to the Ssids field.
func (o *ResponseConfigHistorySearchItem) SetSsids(v []string) {
	o.Ssids = v
}

// GetSsids24 returns the Ssids24 field value if set, zero value otherwise.
func (o *ResponseConfigHistorySearchItem) GetSsids24() []string {
	if o == nil || IsNil(o.Ssids24) {
		var ret []string
		return ret
	}
	return o.Ssids24
}

// GetSsids24Ok returns a tuple with the Ssids24 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseConfigHistorySearchItem) GetSsids24Ok() ([]string, bool) {
	if o == nil || IsNil(o.Ssids24) {
		return nil, false
	}
	return o.Ssids24, true
}

// HasSsids24 returns a boolean if a field has been set.
func (o *ResponseConfigHistorySearchItem) HasSsids24() bool {
	if o != nil && !IsNil(o.Ssids24) {
		return true
	}

	return false
}

// SetSsids24 gets a reference to the given []string and assigns it to the Ssids24 field.
func (o *ResponseConfigHistorySearchItem) SetSsids24(v []string) {
	o.Ssids24 = v
}

// GetSsids5 returns the Ssids5 field value if set, zero value otherwise.
func (o *ResponseConfigHistorySearchItem) GetSsids5() []string {
	if o == nil || IsNil(o.Ssids5) {
		var ret []string
		return ret
	}
	return o.Ssids5
}

// GetSsids5Ok returns a tuple with the Ssids5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseConfigHistorySearchItem) GetSsids5Ok() ([]string, bool) {
	if o == nil || IsNil(o.Ssids5) {
		return nil, false
	}
	return o.Ssids5, true
}

// HasSsids5 returns a boolean if a field has been set.
func (o *ResponseConfigHistorySearchItem) HasSsids5() bool {
	if o != nil && !IsNil(o.Ssids5) {
		return true
	}

	return false
}

// SetSsids5 gets a reference to the given []string and assigns it to the Ssids5 field.
func (o *ResponseConfigHistorySearchItem) SetSsids5(v []string) {
	o.Ssids5 = v
}

// GetTimestamp returns the Timestamp field value
func (o *ResponseConfigHistorySearchItem) GetTimestamp() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *ResponseConfigHistorySearchItem) GetTimestampOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *ResponseConfigHistorySearchItem) SetTimestamp(v float32) {
	o.Timestamp = v
}

// GetVersion returns the Version field value
func (o *ResponseConfigHistorySearchItem) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ResponseConfigHistorySearchItem) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ResponseConfigHistorySearchItem) SetVersion(v string) {
	o.Version = v
}

// GetWlans returns the Wlans field value if set, zero value otherwise.
func (o *ResponseConfigHistorySearchItem) GetWlans() []ResponseConfigHistorySearchItemWlan {
	if o == nil || IsNil(o.Wlans) {
		var ret []ResponseConfigHistorySearchItemWlan
		return ret
	}
	return o.Wlans
}

// GetWlansOk returns a tuple with the Wlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseConfigHistorySearchItem) GetWlansOk() ([]ResponseConfigHistorySearchItemWlan, bool) {
	if o == nil || IsNil(o.Wlans) {
		return nil, false
	}
	return o.Wlans, true
}

// HasWlans returns a boolean if a field has been set.
func (o *ResponseConfigHistorySearchItem) HasWlans() bool {
	if o != nil && !IsNil(o.Wlans) {
		return true
	}

	return false
}

// SetWlans gets a reference to the given []ResponseConfigHistorySearchItemWlan and assigns it to the Wlans field.
func (o *ResponseConfigHistorySearchItem) SetWlans(v []ResponseConfigHistorySearchItemWlan) {
	o.Wlans = v
}

func (o ResponseConfigHistorySearchItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseConfigHistorySearchItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["channel_24"] = o.Channel24
	toSerialize["channel_5"] = o.Channel5
	if !IsNil(o.RadioMacs) {
		toSerialize["radio_macs"] = o.RadioMacs
	}
	if !IsNil(o.Radios) {
		toSerialize["radios"] = o.Radios
	}
	toSerialize["secpolicy_violated"] = o.SecpolicyViolated
	if !IsNil(o.Ssids) {
		toSerialize["ssids"] = o.Ssids
	}
	if !IsNil(o.Ssids24) {
		toSerialize["ssids_24"] = o.Ssids24
	}
	if !IsNil(o.Ssids5) {
		toSerialize["ssids_5"] = o.Ssids5
	}
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["version"] = o.Version
	if !IsNil(o.Wlans) {
		toSerialize["wlans"] = o.Wlans
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResponseConfigHistorySearchItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"channel_24",
		"channel_5",
		"secpolicy_violated",
		"timestamp",
		"version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResponseConfigHistorySearchItem := _ResponseConfigHistorySearchItem{}

	err = json.Unmarshal(data, &varResponseConfigHistorySearchItem)

	if err != nil {
		return err
	}

	*o = ResponseConfigHistorySearchItem(varResponseConfigHistorySearchItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "channel_24")
		delete(additionalProperties, "channel_5")
		delete(additionalProperties, "radio_macs")
		delete(additionalProperties, "radios")
		delete(additionalProperties, "secpolicy_violated")
		delete(additionalProperties, "ssids")
		delete(additionalProperties, "ssids_24")
		delete(additionalProperties, "ssids_5")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "version")
		delete(additionalProperties, "wlans")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResponseConfigHistorySearchItem struct {
	value *ResponseConfigHistorySearchItem
	isSet bool
}

func (v NullableResponseConfigHistorySearchItem) Get() *ResponseConfigHistorySearchItem {
	return v.value
}

func (v *NullableResponseConfigHistorySearchItem) Set(val *ResponseConfigHistorySearchItem) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseConfigHistorySearchItem) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseConfigHistorySearchItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseConfigHistorySearchItem(val *ResponseConfigHistorySearchItem) *NullableResponseConfigHistorySearchItem {
	return &NullableResponseConfigHistorySearchItem{value: val, isSet: true}
}

func (v NullableResponseConfigHistorySearchItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseConfigHistorySearchItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


