/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ApClientBridge type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApClientBridge{}

// ApClientBridge struct for ApClientBridge
type ApClientBridge struct {
	Auth *ApClientBridgeAuth `json:"auth,omitempty"`
	// when acted as client bridge: * only 5G radio can be used * will not serve as AP on any radios
	Enabled *bool `json:"enabled,omitempty"`
	Ssid *string `json:"ssid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApClientBridge ApClientBridge

// NewApClientBridge instantiates a new ApClientBridge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApClientBridge() *ApClientBridge {
	this := ApClientBridge{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// NewApClientBridgeWithDefaults instantiates a new ApClientBridge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApClientBridgeWithDefaults() *ApClientBridge {
	this := ApClientBridge{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *ApClientBridge) GetAuth() ApClientBridgeAuth {
	if o == nil || IsNil(o.Auth) {
		var ret ApClientBridgeAuth
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApClientBridge) GetAuthOk() (*ApClientBridgeAuth, bool) {
	if o == nil || IsNil(o.Auth) {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *ApClientBridge) HasAuth() bool {
	if o != nil && !IsNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given ApClientBridgeAuth and assigns it to the Auth field.
func (o *ApClientBridge) SetAuth(v ApClientBridgeAuth) {
	o.Auth = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApClientBridge) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApClientBridge) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApClientBridge) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApClientBridge) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetSsid returns the Ssid field value if set, zero value otherwise.
func (o *ApClientBridge) GetSsid() string {
	if o == nil || IsNil(o.Ssid) {
		var ret string
		return ret
	}
	return *o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApClientBridge) GetSsidOk() (*string, bool) {
	if o == nil || IsNil(o.Ssid) {
		return nil, false
	}
	return o.Ssid, true
}

// HasSsid returns a boolean if a field has been set.
func (o *ApClientBridge) HasSsid() bool {
	if o != nil && !IsNil(o.Ssid) {
		return true
	}

	return false
}

// SetSsid gets a reference to the given string and assigns it to the Ssid field.
func (o *ApClientBridge) SetSsid(v string) {
	o.Ssid = &v
}

func (o ApClientBridge) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApClientBridge) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Auth) {
		toSerialize["auth"] = o.Auth
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Ssid) {
		toSerialize["ssid"] = o.Ssid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApClientBridge) UnmarshalJSON(data []byte) (err error) {
	varApClientBridge := _ApClientBridge{}

	err = json.Unmarshal(data, &varApClientBridge)

	if err != nil {
		return err
	}

	*o = ApClientBridge(varApClientBridge)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auth")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "ssid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApClientBridge struct {
	value *ApClientBridge
	isSet bool
}

func (v NullableApClientBridge) Get() *ApClientBridge {
	return v.value
}

func (v *NullableApClientBridge) Set(val *ApClientBridge) {
	v.value = val
	v.isSet = true
}

func (v NullableApClientBridge) IsSet() bool {
	return v.isSet
}

func (v *NullableApClientBridge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApClientBridge(val *ApClientBridge) *NullableApClientBridge {
	return &NullableApClientBridge{value: val, isSet: true}
}

func (v NullableApClientBridge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApClientBridge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


