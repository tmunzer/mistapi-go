/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ZoneStatsClientsWaits type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZoneStatsClientsWaits{}

// ZoneStatsClientsWaits client wait time right now
type ZoneStatsClientsWaits struct {
	// average wait time in seconds
	Avg *float32 `json:"avg,omitempty"`
	// longest wait time in seconds
	Max *float32 `json:"max,omitempty"`
	// shortest wait time in seconds
	Min *float32 `json:"min,omitempty"`
	// 95th percentile of all the wait time(s)
	P95 *float32 `json:"p95,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ZoneStatsClientsWaits ZoneStatsClientsWaits

// NewZoneStatsClientsWaits instantiates a new ZoneStatsClientsWaits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneStatsClientsWaits() *ZoneStatsClientsWaits {
	this := ZoneStatsClientsWaits{}
	return &this
}

// NewZoneStatsClientsWaitsWithDefaults instantiates a new ZoneStatsClientsWaits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneStatsClientsWaitsWithDefaults() *ZoneStatsClientsWaits {
	this := ZoneStatsClientsWaits{}
	return &this
}

// GetAvg returns the Avg field value if set, zero value otherwise.
func (o *ZoneStatsClientsWaits) GetAvg() float32 {
	if o == nil || IsNil(o.Avg) {
		var ret float32
		return ret
	}
	return *o.Avg
}

// GetAvgOk returns a tuple with the Avg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneStatsClientsWaits) GetAvgOk() (*float32, bool) {
	if o == nil || IsNil(o.Avg) {
		return nil, false
	}
	return o.Avg, true
}

// HasAvg returns a boolean if a field has been set.
func (o *ZoneStatsClientsWaits) HasAvg() bool {
	if o != nil && !IsNil(o.Avg) {
		return true
	}

	return false
}

// SetAvg gets a reference to the given float32 and assigns it to the Avg field.
func (o *ZoneStatsClientsWaits) SetAvg(v float32) {
	o.Avg = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *ZoneStatsClientsWaits) GetMax() float32 {
	if o == nil || IsNil(o.Max) {
		var ret float32
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneStatsClientsWaits) GetMaxOk() (*float32, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *ZoneStatsClientsWaits) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given float32 and assigns it to the Max field.
func (o *ZoneStatsClientsWaits) SetMax(v float32) {
	o.Max = &v
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *ZoneStatsClientsWaits) GetMin() float32 {
	if o == nil || IsNil(o.Min) {
		var ret float32
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneStatsClientsWaits) GetMinOk() (*float32, bool) {
	if o == nil || IsNil(o.Min) {
		return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *ZoneStatsClientsWaits) HasMin() bool {
	if o != nil && !IsNil(o.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given float32 and assigns it to the Min field.
func (o *ZoneStatsClientsWaits) SetMin(v float32) {
	o.Min = &v
}

// GetP95 returns the P95 field value if set, zero value otherwise.
func (o *ZoneStatsClientsWaits) GetP95() float32 {
	if o == nil || IsNil(o.P95) {
		var ret float32
		return ret
	}
	return *o.P95
}

// GetP95Ok returns a tuple with the P95 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneStatsClientsWaits) GetP95Ok() (*float32, bool) {
	if o == nil || IsNil(o.P95) {
		return nil, false
	}
	return o.P95, true
}

// HasP95 returns a boolean if a field has been set.
func (o *ZoneStatsClientsWaits) HasP95() bool {
	if o != nil && !IsNil(o.P95) {
		return true
	}

	return false
}

// SetP95 gets a reference to the given float32 and assigns it to the P95 field.
func (o *ZoneStatsClientsWaits) SetP95(v float32) {
	o.P95 = &v
}

func (o ZoneStatsClientsWaits) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZoneStatsClientsWaits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Avg) {
		toSerialize["avg"] = o.Avg
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Min) {
		toSerialize["min"] = o.Min
	}
	if !IsNil(o.P95) {
		toSerialize["p95"] = o.P95
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ZoneStatsClientsWaits) UnmarshalJSON(data []byte) (err error) {
	varZoneStatsClientsWaits := _ZoneStatsClientsWaits{}

	err = json.Unmarshal(data, &varZoneStatsClientsWaits)

	if err != nil {
		return err
	}

	*o = ZoneStatsClientsWaits(varZoneStatsClientsWaits)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "avg")
		delete(additionalProperties, "max")
		delete(additionalProperties, "min")
		delete(additionalProperties, "p95")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableZoneStatsClientsWaits struct {
	value *ZoneStatsClientsWaits
	isSet bool
}

func (v NullableZoneStatsClientsWaits) Get() *ZoneStatsClientsWaits {
	return v.value
}

func (v *NullableZoneStatsClientsWaits) Set(val *ZoneStatsClientsWaits) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneStatsClientsWaits) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneStatsClientsWaits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneStatsClientsWaits(val *ZoneStatsClientsWaits) *NullableZoneStatsClientsWaits {
	return &NullableZoneStatsClientsWaits{value: val, isSet: true}
}

func (v NullableZoneStatsClientsWaits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneStatsClientsWaits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


