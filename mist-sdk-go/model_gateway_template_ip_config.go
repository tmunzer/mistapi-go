/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the GatewayTemplateIpConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayTemplateIpConfig{}

// GatewayTemplateIpConfig struct for GatewayTemplateIpConfig
type GatewayTemplateIpConfig struct {
	Ip *string `json:"ip,omitempty"`
	Netmask *string `json:"netmask,omitempty"`
	// optional list of secondary IPs in CIDR format
	SecondaryIps []string `json:"secondary_ips,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayTemplateIpConfig GatewayTemplateIpConfig

// NewGatewayTemplateIpConfig instantiates a new GatewayTemplateIpConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayTemplateIpConfig() *GatewayTemplateIpConfig {
	this := GatewayTemplateIpConfig{}
	return &this
}

// NewGatewayTemplateIpConfigWithDefaults instantiates a new GatewayTemplateIpConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayTemplateIpConfigWithDefaults() *GatewayTemplateIpConfig {
	this := GatewayTemplateIpConfig{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *GatewayTemplateIpConfig) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplateIpConfig) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *GatewayTemplateIpConfig) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *GatewayTemplateIpConfig) SetIp(v string) {
	o.Ip = &v
}

// GetNetmask returns the Netmask field value if set, zero value otherwise.
func (o *GatewayTemplateIpConfig) GetNetmask() string {
	if o == nil || IsNil(o.Netmask) {
		var ret string
		return ret
	}
	return *o.Netmask
}

// GetNetmaskOk returns a tuple with the Netmask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplateIpConfig) GetNetmaskOk() (*string, bool) {
	if o == nil || IsNil(o.Netmask) {
		return nil, false
	}
	return o.Netmask, true
}

// HasNetmask returns a boolean if a field has been set.
func (o *GatewayTemplateIpConfig) HasNetmask() bool {
	if o != nil && !IsNil(o.Netmask) {
		return true
	}

	return false
}

// SetNetmask gets a reference to the given string and assigns it to the Netmask field.
func (o *GatewayTemplateIpConfig) SetNetmask(v string) {
	o.Netmask = &v
}

// GetSecondaryIps returns the SecondaryIps field value if set, zero value otherwise.
func (o *GatewayTemplateIpConfig) GetSecondaryIps() []string {
	if o == nil || IsNil(o.SecondaryIps) {
		var ret []string
		return ret
	}
	return o.SecondaryIps
}

// GetSecondaryIpsOk returns a tuple with the SecondaryIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplateIpConfig) GetSecondaryIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.SecondaryIps) {
		return nil, false
	}
	return o.SecondaryIps, true
}

// HasSecondaryIps returns a boolean if a field has been set.
func (o *GatewayTemplateIpConfig) HasSecondaryIps() bool {
	if o != nil && !IsNil(o.SecondaryIps) {
		return true
	}

	return false
}

// SetSecondaryIps gets a reference to the given []string and assigns it to the SecondaryIps field.
func (o *GatewayTemplateIpConfig) SetSecondaryIps(v []string) {
	o.SecondaryIps = v
}

func (o GatewayTemplateIpConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayTemplateIpConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Netmask) {
		toSerialize["netmask"] = o.Netmask
	}
	if !IsNil(o.SecondaryIps) {
		toSerialize["secondary_ips"] = o.SecondaryIps
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayTemplateIpConfig) UnmarshalJSON(data []byte) (err error) {
	varGatewayTemplateIpConfig := _GatewayTemplateIpConfig{}

	err = json.Unmarshal(data, &varGatewayTemplateIpConfig)

	if err != nil {
		return err
	}

	*o = GatewayTemplateIpConfig(varGatewayTemplateIpConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ip")
		delete(additionalProperties, "netmask")
		delete(additionalProperties, "secondary_ips")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayTemplateIpConfig struct {
	value *GatewayTemplateIpConfig
	isSet bool
}

func (v NullableGatewayTemplateIpConfig) Get() *GatewayTemplateIpConfig {
	return v.value
}

func (v *NullableGatewayTemplateIpConfig) Set(val *GatewayTemplateIpConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayTemplateIpConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayTemplateIpConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayTemplateIpConfig(val *GatewayTemplateIpConfig) *NullableGatewayTemplateIpConfig {
	return &NullableGatewayTemplateIpConfig{value: val, isSet: true}
}

func (v NullableGatewayTemplateIpConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayTemplateIpConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


