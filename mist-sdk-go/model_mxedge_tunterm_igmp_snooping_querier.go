/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the MxedgeTuntermIgmpSnoopingQuerier type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MxedgeTuntermIgmpSnoopingQuerier{}

// MxedgeTuntermIgmpSnoopingQuerier struct for MxedgeTuntermIgmpSnoopingQuerier
type MxedgeTuntermIgmpSnoopingQuerier struct {
	// querier’s query response interval, in tenths-of-seconds
	MaxResponseTime *int32 `json:"max_response_time,omitempty"`
	// the MTU we use (needed when forming large IGMPv3 Reports)
	Mtu *int32 `json:"mtu,omitempty"`
	// querier’s query interval, in seconds
	QueryInterval *int32 `json:"query_interval,omitempty"`
	// querier’s robustness
	Robustness *int32 `json:"robustness,omitempty"`
	// querier’s maximum protocol version
	Version *int32 `json:"version,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MxedgeTuntermIgmpSnoopingQuerier MxedgeTuntermIgmpSnoopingQuerier

// NewMxedgeTuntermIgmpSnoopingQuerier instantiates a new MxedgeTuntermIgmpSnoopingQuerier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMxedgeTuntermIgmpSnoopingQuerier() *MxedgeTuntermIgmpSnoopingQuerier {
	this := MxedgeTuntermIgmpSnoopingQuerier{}
	return &this
}

// NewMxedgeTuntermIgmpSnoopingQuerierWithDefaults instantiates a new MxedgeTuntermIgmpSnoopingQuerier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMxedgeTuntermIgmpSnoopingQuerierWithDefaults() *MxedgeTuntermIgmpSnoopingQuerier {
	this := MxedgeTuntermIgmpSnoopingQuerier{}
	return &this
}

// GetMaxResponseTime returns the MaxResponseTime field value if set, zero value otherwise.
func (o *MxedgeTuntermIgmpSnoopingQuerier) GetMaxResponseTime() int32 {
	if o == nil || IsNil(o.MaxResponseTime) {
		var ret int32
		return ret
	}
	return *o.MaxResponseTime
}

// GetMaxResponseTimeOk returns a tuple with the MaxResponseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeTuntermIgmpSnoopingQuerier) GetMaxResponseTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxResponseTime) {
		return nil, false
	}
	return o.MaxResponseTime, true
}

// HasMaxResponseTime returns a boolean if a field has been set.
func (o *MxedgeTuntermIgmpSnoopingQuerier) HasMaxResponseTime() bool {
	if o != nil && !IsNil(o.MaxResponseTime) {
		return true
	}

	return false
}

// SetMaxResponseTime gets a reference to the given int32 and assigns it to the MaxResponseTime field.
func (o *MxedgeTuntermIgmpSnoopingQuerier) SetMaxResponseTime(v int32) {
	o.MaxResponseTime = &v
}

// GetMtu returns the Mtu field value if set, zero value otherwise.
func (o *MxedgeTuntermIgmpSnoopingQuerier) GetMtu() int32 {
	if o == nil || IsNil(o.Mtu) {
		var ret int32
		return ret
	}
	return *o.Mtu
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeTuntermIgmpSnoopingQuerier) GetMtuOk() (*int32, bool) {
	if o == nil || IsNil(o.Mtu) {
		return nil, false
	}
	return o.Mtu, true
}

// HasMtu returns a boolean if a field has been set.
func (o *MxedgeTuntermIgmpSnoopingQuerier) HasMtu() bool {
	if o != nil && !IsNil(o.Mtu) {
		return true
	}

	return false
}

// SetMtu gets a reference to the given int32 and assigns it to the Mtu field.
func (o *MxedgeTuntermIgmpSnoopingQuerier) SetMtu(v int32) {
	o.Mtu = &v
}

// GetQueryInterval returns the QueryInterval field value if set, zero value otherwise.
func (o *MxedgeTuntermIgmpSnoopingQuerier) GetQueryInterval() int32 {
	if o == nil || IsNil(o.QueryInterval) {
		var ret int32
		return ret
	}
	return *o.QueryInterval
}

// GetQueryIntervalOk returns a tuple with the QueryInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeTuntermIgmpSnoopingQuerier) GetQueryIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.QueryInterval) {
		return nil, false
	}
	return o.QueryInterval, true
}

// HasQueryInterval returns a boolean if a field has been set.
func (o *MxedgeTuntermIgmpSnoopingQuerier) HasQueryInterval() bool {
	if o != nil && !IsNil(o.QueryInterval) {
		return true
	}

	return false
}

// SetQueryInterval gets a reference to the given int32 and assigns it to the QueryInterval field.
func (o *MxedgeTuntermIgmpSnoopingQuerier) SetQueryInterval(v int32) {
	o.QueryInterval = &v
}

// GetRobustness returns the Robustness field value if set, zero value otherwise.
func (o *MxedgeTuntermIgmpSnoopingQuerier) GetRobustness() int32 {
	if o == nil || IsNil(o.Robustness) {
		var ret int32
		return ret
	}
	return *o.Robustness
}

// GetRobustnessOk returns a tuple with the Robustness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeTuntermIgmpSnoopingQuerier) GetRobustnessOk() (*int32, bool) {
	if o == nil || IsNil(o.Robustness) {
		return nil, false
	}
	return o.Robustness, true
}

// HasRobustness returns a boolean if a field has been set.
func (o *MxedgeTuntermIgmpSnoopingQuerier) HasRobustness() bool {
	if o != nil && !IsNil(o.Robustness) {
		return true
	}

	return false
}

// SetRobustness gets a reference to the given int32 and assigns it to the Robustness field.
func (o *MxedgeTuntermIgmpSnoopingQuerier) SetRobustness(v int32) {
	o.Robustness = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *MxedgeTuntermIgmpSnoopingQuerier) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxedgeTuntermIgmpSnoopingQuerier) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MxedgeTuntermIgmpSnoopingQuerier) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *MxedgeTuntermIgmpSnoopingQuerier) SetVersion(v int32) {
	o.Version = &v
}

func (o MxedgeTuntermIgmpSnoopingQuerier) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MxedgeTuntermIgmpSnoopingQuerier) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxResponseTime) {
		toSerialize["max_response_time"] = o.MaxResponseTime
	}
	if !IsNil(o.Mtu) {
		toSerialize["mtu"] = o.Mtu
	}
	if !IsNil(o.QueryInterval) {
		toSerialize["query_interval"] = o.QueryInterval
	}
	if !IsNil(o.Robustness) {
		toSerialize["robustness"] = o.Robustness
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MxedgeTuntermIgmpSnoopingQuerier) UnmarshalJSON(data []byte) (err error) {
	varMxedgeTuntermIgmpSnoopingQuerier := _MxedgeTuntermIgmpSnoopingQuerier{}

	err = json.Unmarshal(data, &varMxedgeTuntermIgmpSnoopingQuerier)

	if err != nil {
		return err
	}

	*o = MxedgeTuntermIgmpSnoopingQuerier(varMxedgeTuntermIgmpSnoopingQuerier)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "max_response_time")
		delete(additionalProperties, "mtu")
		delete(additionalProperties, "query_interval")
		delete(additionalProperties, "robustness")
		delete(additionalProperties, "version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMxedgeTuntermIgmpSnoopingQuerier struct {
	value *MxedgeTuntermIgmpSnoopingQuerier
	isSet bool
}

func (v NullableMxedgeTuntermIgmpSnoopingQuerier) Get() *MxedgeTuntermIgmpSnoopingQuerier {
	return v.value
}

func (v *NullableMxedgeTuntermIgmpSnoopingQuerier) Set(val *MxedgeTuntermIgmpSnoopingQuerier) {
	v.value = val
	v.isSet = true
}

func (v NullableMxedgeTuntermIgmpSnoopingQuerier) IsSet() bool {
	return v.isSet
}

func (v *NullableMxedgeTuntermIgmpSnoopingQuerier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMxedgeTuntermIgmpSnoopingQuerier(val *MxedgeTuntermIgmpSnoopingQuerier) *NullableMxedgeTuntermIgmpSnoopingQuerier {
	return &NullableMxedgeTuntermIgmpSnoopingQuerier{value: val, isSet: true}
}

func (v NullableMxedgeTuntermIgmpSnoopingQuerier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMxedgeTuntermIgmpSnoopingQuerier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


