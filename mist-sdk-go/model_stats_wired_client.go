/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the StatsWiredClient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatsWiredClient{}

// StatsWiredClient struct for StatsWiredClient
type StatsWiredClient struct {
	Id *string `json:"_id,omitempty"`
	// TTL of the validity of the stat
	Ttl *float32 `json:"_ttl,omitempty"`
	// client authorization status
	AuthState *string `json:"auth_state,omitempty"`
	// Device ID the client is connected to
	DeviceId *string `json:"device_id,omitempty"`
	// port on AP where the wired client is connected
	EthPort *string `json:"eth_port,omitempty"`
	// time when last Tx/Rx observed
	LastSeen *float32 `json:"last_seen,omitempty"`
	// client mac
	Mac string `json:"mac"`
	// amount of traffic sent to client since client connects
	RxBytes *float32 `json:"rx_bytes,omitempty"`
	// amount of traffic sent to client since client connects
	RxPkts *float32 `json:"rx_pkts,omitempty"`
	SiteId *string `json:"site_id,omitempty"`
	//  amount of traffic received from client since client connects
	TxBytes *float32 `json:"tx_bytes,omitempty"`
	// amount of traffic received from client since client connects
	TxPkts *float32 `json:"tx_pkts,omitempty"`
	// how long, in seconds, has the client been connected
	Uptime *float32 `json:"uptime,omitempty"`
	// vlan id, could be empty
	VlanId *float32 `json:"vlan_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StatsWiredClient StatsWiredClient

// NewStatsWiredClient instantiates a new StatsWiredClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatsWiredClient(mac string) *StatsWiredClient {
	this := StatsWiredClient{}
	this.Mac = mac
	return &this
}

// NewStatsWiredClientWithDefaults instantiates a new StatsWiredClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatsWiredClientWithDefaults() *StatsWiredClient {
	this := StatsWiredClient{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StatsWiredClient) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StatsWiredClient) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StatsWiredClient) SetId(v string) {
	o.Id = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *StatsWiredClient) GetTtl() float32 {
	if o == nil || IsNil(o.Ttl) {
		var ret float32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetTtlOk() (*float32, bool) {
	if o == nil || IsNil(o.Ttl) {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *StatsWiredClient) HasTtl() bool {
	if o != nil && !IsNil(o.Ttl) {
		return true
	}

	return false
}

// SetTtl gets a reference to the given float32 and assigns it to the Ttl field.
func (o *StatsWiredClient) SetTtl(v float32) {
	o.Ttl = &v
}

// GetAuthState returns the AuthState field value if set, zero value otherwise.
func (o *StatsWiredClient) GetAuthState() string {
	if o == nil || IsNil(o.AuthState) {
		var ret string
		return ret
	}
	return *o.AuthState
}

// GetAuthStateOk returns a tuple with the AuthState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetAuthStateOk() (*string, bool) {
	if o == nil || IsNil(o.AuthState) {
		return nil, false
	}
	return o.AuthState, true
}

// HasAuthState returns a boolean if a field has been set.
func (o *StatsWiredClient) HasAuthState() bool {
	if o != nil && !IsNil(o.AuthState) {
		return true
	}

	return false
}

// SetAuthState gets a reference to the given string and assigns it to the AuthState field.
func (o *StatsWiredClient) SetAuthState(v string) {
	o.AuthState = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *StatsWiredClient) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *StatsWiredClient) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *StatsWiredClient) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetEthPort returns the EthPort field value if set, zero value otherwise.
func (o *StatsWiredClient) GetEthPort() string {
	if o == nil || IsNil(o.EthPort) {
		var ret string
		return ret
	}
	return *o.EthPort
}

// GetEthPortOk returns a tuple with the EthPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetEthPortOk() (*string, bool) {
	if o == nil || IsNil(o.EthPort) {
		return nil, false
	}
	return o.EthPort, true
}

// HasEthPort returns a boolean if a field has been set.
func (o *StatsWiredClient) HasEthPort() bool {
	if o != nil && !IsNil(o.EthPort) {
		return true
	}

	return false
}

// SetEthPort gets a reference to the given string and assigns it to the EthPort field.
func (o *StatsWiredClient) SetEthPort(v string) {
	o.EthPort = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *StatsWiredClient) GetLastSeen() float32 {
	if o == nil || IsNil(o.LastSeen) {
		var ret float32
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetLastSeenOk() (*float32, bool) {
	if o == nil || IsNil(o.LastSeen) {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *StatsWiredClient) HasLastSeen() bool {
	if o != nil && !IsNil(o.LastSeen) {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given float32 and assigns it to the LastSeen field.
func (o *StatsWiredClient) SetLastSeen(v float32) {
	o.LastSeen = &v
}

// GetMac returns the Mac field value
func (o *StatsWiredClient) GetMac() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mac
}

// GetMacOk returns a tuple with the Mac field value
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetMacOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mac, true
}

// SetMac sets field value
func (o *StatsWiredClient) SetMac(v string) {
	o.Mac = v
}

// GetRxBytes returns the RxBytes field value if set, zero value otherwise.
func (o *StatsWiredClient) GetRxBytes() float32 {
	if o == nil || IsNil(o.RxBytes) {
		var ret float32
		return ret
	}
	return *o.RxBytes
}

// GetRxBytesOk returns a tuple with the RxBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetRxBytesOk() (*float32, bool) {
	if o == nil || IsNil(o.RxBytes) {
		return nil, false
	}
	return o.RxBytes, true
}

// HasRxBytes returns a boolean if a field has been set.
func (o *StatsWiredClient) HasRxBytes() bool {
	if o != nil && !IsNil(o.RxBytes) {
		return true
	}

	return false
}

// SetRxBytes gets a reference to the given float32 and assigns it to the RxBytes field.
func (o *StatsWiredClient) SetRxBytes(v float32) {
	o.RxBytes = &v
}

// GetRxPkts returns the RxPkts field value if set, zero value otherwise.
func (o *StatsWiredClient) GetRxPkts() float32 {
	if o == nil || IsNil(o.RxPkts) {
		var ret float32
		return ret
	}
	return *o.RxPkts
}

// GetRxPktsOk returns a tuple with the RxPkts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetRxPktsOk() (*float32, bool) {
	if o == nil || IsNil(o.RxPkts) {
		return nil, false
	}
	return o.RxPkts, true
}

// HasRxPkts returns a boolean if a field has been set.
func (o *StatsWiredClient) HasRxPkts() bool {
	if o != nil && !IsNil(o.RxPkts) {
		return true
	}

	return false
}

// SetRxPkts gets a reference to the given float32 and assigns it to the RxPkts field.
func (o *StatsWiredClient) SetRxPkts(v float32) {
	o.RxPkts = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *StatsWiredClient) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *StatsWiredClient) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *StatsWiredClient) SetSiteId(v string) {
	o.SiteId = &v
}

// GetTxBytes returns the TxBytes field value if set, zero value otherwise.
func (o *StatsWiredClient) GetTxBytes() float32 {
	if o == nil || IsNil(o.TxBytes) {
		var ret float32
		return ret
	}
	return *o.TxBytes
}

// GetTxBytesOk returns a tuple with the TxBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetTxBytesOk() (*float32, bool) {
	if o == nil || IsNil(o.TxBytes) {
		return nil, false
	}
	return o.TxBytes, true
}

// HasTxBytes returns a boolean if a field has been set.
func (o *StatsWiredClient) HasTxBytes() bool {
	if o != nil && !IsNil(o.TxBytes) {
		return true
	}

	return false
}

// SetTxBytes gets a reference to the given float32 and assigns it to the TxBytes field.
func (o *StatsWiredClient) SetTxBytes(v float32) {
	o.TxBytes = &v
}

// GetTxPkts returns the TxPkts field value if set, zero value otherwise.
func (o *StatsWiredClient) GetTxPkts() float32 {
	if o == nil || IsNil(o.TxPkts) {
		var ret float32
		return ret
	}
	return *o.TxPkts
}

// GetTxPktsOk returns a tuple with the TxPkts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetTxPktsOk() (*float32, bool) {
	if o == nil || IsNil(o.TxPkts) {
		return nil, false
	}
	return o.TxPkts, true
}

// HasTxPkts returns a boolean if a field has been set.
func (o *StatsWiredClient) HasTxPkts() bool {
	if o != nil && !IsNil(o.TxPkts) {
		return true
	}

	return false
}

// SetTxPkts gets a reference to the given float32 and assigns it to the TxPkts field.
func (o *StatsWiredClient) SetTxPkts(v float32) {
	o.TxPkts = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *StatsWiredClient) GetUptime() float32 {
	if o == nil || IsNil(o.Uptime) {
		var ret float32
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetUptimeOk() (*float32, bool) {
	if o == nil || IsNil(o.Uptime) {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *StatsWiredClient) HasUptime() bool {
	if o != nil && !IsNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given float32 and assigns it to the Uptime field.
func (o *StatsWiredClient) SetUptime(v float32) {
	o.Uptime = &v
}

// GetVlanId returns the VlanId field value if set, zero value otherwise.
func (o *StatsWiredClient) GetVlanId() float32 {
	if o == nil || IsNil(o.VlanId) {
		var ret float32
		return ret
	}
	return *o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsWiredClient) GetVlanIdOk() (*float32, bool) {
	if o == nil || IsNil(o.VlanId) {
		return nil, false
	}
	return o.VlanId, true
}

// HasVlanId returns a boolean if a field has been set.
func (o *StatsWiredClient) HasVlanId() bool {
	if o != nil && !IsNil(o.VlanId) {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given float32 and assigns it to the VlanId field.
func (o *StatsWiredClient) SetVlanId(v float32) {
	o.VlanId = &v
}

func (o StatsWiredClient) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatsWiredClient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["_id"] = o.Id
	}
	if !IsNil(o.Ttl) {
		toSerialize["_ttl"] = o.Ttl
	}
	if !IsNil(o.AuthState) {
		toSerialize["auth_state"] = o.AuthState
	}
	if !IsNil(o.DeviceId) {
		toSerialize["device_id"] = o.DeviceId
	}
	if !IsNil(o.EthPort) {
		toSerialize["eth_port"] = o.EthPort
	}
	if !IsNil(o.LastSeen) {
		toSerialize["last_seen"] = o.LastSeen
	}
	toSerialize["mac"] = o.Mac
	if !IsNil(o.RxBytes) {
		toSerialize["rx_bytes"] = o.RxBytes
	}
	if !IsNil(o.RxPkts) {
		toSerialize["rx_pkts"] = o.RxPkts
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.TxBytes) {
		toSerialize["tx_bytes"] = o.TxBytes
	}
	if !IsNil(o.TxPkts) {
		toSerialize["tx_pkts"] = o.TxPkts
	}
	if !IsNil(o.Uptime) {
		toSerialize["uptime"] = o.Uptime
	}
	if !IsNil(o.VlanId) {
		toSerialize["vlan_id"] = o.VlanId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StatsWiredClient) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mac",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStatsWiredClient := _StatsWiredClient{}

	err = json.Unmarshal(data, &varStatsWiredClient)

	if err != nil {
		return err
	}

	*o = StatsWiredClient(varStatsWiredClient)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "_id")
		delete(additionalProperties, "_ttl")
		delete(additionalProperties, "auth_state")
		delete(additionalProperties, "device_id")
		delete(additionalProperties, "eth_port")
		delete(additionalProperties, "last_seen")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "rx_bytes")
		delete(additionalProperties, "rx_pkts")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "tx_bytes")
		delete(additionalProperties, "tx_pkts")
		delete(additionalProperties, "uptime")
		delete(additionalProperties, "vlan_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStatsWiredClient struct {
	value *StatsWiredClient
	isSet bool
}

func (v NullableStatsWiredClient) Get() *StatsWiredClient {
	return v.value
}

func (v *NullableStatsWiredClient) Set(val *StatsWiredClient) {
	v.value = val
	v.isSet = true
}

func (v NullableStatsWiredClient) IsSet() bool {
	return v.isSet
}

func (v *NullableStatsWiredClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatsWiredClient(val *StatsWiredClient) *NullableStatsWiredClient {
	return &NullableStatsWiredClient{value: val, isSet: true}
}

func (v NullableStatsWiredClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatsWiredClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


