/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ApStatsFwupdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApStatsFwupdate{}

// ApStatsFwupdate struct for ApStatsFwupdate
type ApStatsFwupdate struct {
	Progress *int32 `json:"progress,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusId *int32 `json:"status_id,omitempty"`
	Timestamp *int32 `json:"timestamp,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApStatsFwupdate ApStatsFwupdate

// NewApStatsFwupdate instantiates a new ApStatsFwupdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApStatsFwupdate() *ApStatsFwupdate {
	this := ApStatsFwupdate{}
	return &this
}

// NewApStatsFwupdateWithDefaults instantiates a new ApStatsFwupdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApStatsFwupdateWithDefaults() *ApStatsFwupdate {
	this := ApStatsFwupdate{}
	return &this
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *ApStatsFwupdate) GetProgress() int32 {
	if o == nil || IsNil(o.Progress) {
		var ret int32
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsFwupdate) GetProgressOk() (*int32, bool) {
	if o == nil || IsNil(o.Progress) {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *ApStatsFwupdate) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given int32 and assigns it to the Progress field.
func (o *ApStatsFwupdate) SetProgress(v int32) {
	o.Progress = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApStatsFwupdate) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsFwupdate) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApStatsFwupdate) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApStatsFwupdate) SetStatus(v string) {
	o.Status = &v
}

// GetStatusId returns the StatusId field value if set, zero value otherwise.
func (o *ApStatsFwupdate) GetStatusId() int32 {
	if o == nil || IsNil(o.StatusId) {
		var ret int32
		return ret
	}
	return *o.StatusId
}

// GetStatusIdOk returns a tuple with the StatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsFwupdate) GetStatusIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusId) {
		return nil, false
	}
	return o.StatusId, true
}

// HasStatusId returns a boolean if a field has been set.
func (o *ApStatsFwupdate) HasStatusId() bool {
	if o != nil && !IsNil(o.StatusId) {
		return true
	}

	return false
}

// SetStatusId gets a reference to the given int32 and assigns it to the StatusId field.
func (o *ApStatsFwupdate) SetStatusId(v int32) {
	o.StatusId = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ApStatsFwupdate) GetTimestamp() int32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsFwupdate) GetTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ApStatsFwupdate) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *ApStatsFwupdate) SetTimestamp(v int32) {
	o.Timestamp = &v
}

func (o ApStatsFwupdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApStatsFwupdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusId) {
		toSerialize["status_id"] = o.StatusId
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApStatsFwupdate) UnmarshalJSON(data []byte) (err error) {
	varApStatsFwupdate := _ApStatsFwupdate{}

	err = json.Unmarshal(data, &varApStatsFwupdate)

	if err != nil {
		return err
	}

	*o = ApStatsFwupdate(varApStatsFwupdate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "progress")
		delete(additionalProperties, "status")
		delete(additionalProperties, "status_id")
		delete(additionalProperties, "timestamp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApStatsFwupdate struct {
	value *ApStatsFwupdate
	isSet bool
}

func (v NullableApStatsFwupdate) Get() *ApStatsFwupdate {
	return v.value
}

func (v *NullableApStatsFwupdate) Set(val *ApStatsFwupdate) {
	v.value = val
	v.isSet = true
}

func (v NullableApStatsFwupdate) IsSet() bool {
	return v.isSet
}

func (v *NullableApStatsFwupdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApStatsFwupdate(val *ApStatsFwupdate) *NullableApStatsFwupdate {
	return &NullableApStatsFwupdate{value: val, isSet: true}
}

func (v NullableApStatsFwupdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApStatsFwupdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


