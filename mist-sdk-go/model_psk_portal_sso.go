/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the PskPortalSso type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PskPortalSso{}

// PskPortalSso if `auth`==`sso`
type PskPortalSso struct {
	// // allowed roles for accessing psk portal, if none, any role is permitted
	AllowedRoles []string `json:"allowed_roles,omitempty"`
	IdpCert *string `json:"idp_cert,omitempty"`
	IdpSignAlgo *string `json:"idp_sign_algo,omitempty"`
	IdpSsoUrl *string `json:"idp_sso_url,omitempty"`
	Issuer *string `json:"issuer,omitempty"`
	NameidFormat *string `json:"nameid_format,omitempty"`
	// Property key is the role name, property value is the SSO Attribute
	RoleMapping *map[string]string `json:"role_mapping,omitempty"`
	// if enabled, the `role` above will be ignored
	UseSsoRoleForPskRole *bool `json:"use_sso_role_for_psk_role,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PskPortalSso PskPortalSso

// NewPskPortalSso instantiates a new PskPortalSso object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPskPortalSso() *PskPortalSso {
	this := PskPortalSso{}
	return &this
}

// NewPskPortalSsoWithDefaults instantiates a new PskPortalSso object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPskPortalSsoWithDefaults() *PskPortalSso {
	this := PskPortalSso{}
	return &this
}

// GetAllowedRoles returns the AllowedRoles field value if set, zero value otherwise.
func (o *PskPortalSso) GetAllowedRoles() []string {
	if o == nil || IsNil(o.AllowedRoles) {
		var ret []string
		return ret
	}
	return o.AllowedRoles
}

// GetAllowedRolesOk returns a tuple with the AllowedRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortalSso) GetAllowedRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedRoles) {
		return nil, false
	}
	return o.AllowedRoles, true
}

// HasAllowedRoles returns a boolean if a field has been set.
func (o *PskPortalSso) HasAllowedRoles() bool {
	if o != nil && !IsNil(o.AllowedRoles) {
		return true
	}

	return false
}

// SetAllowedRoles gets a reference to the given []string and assigns it to the AllowedRoles field.
func (o *PskPortalSso) SetAllowedRoles(v []string) {
	o.AllowedRoles = v
}

// GetIdpCert returns the IdpCert field value if set, zero value otherwise.
func (o *PskPortalSso) GetIdpCert() string {
	if o == nil || IsNil(o.IdpCert) {
		var ret string
		return ret
	}
	return *o.IdpCert
}

// GetIdpCertOk returns a tuple with the IdpCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortalSso) GetIdpCertOk() (*string, bool) {
	if o == nil || IsNil(o.IdpCert) {
		return nil, false
	}
	return o.IdpCert, true
}

// HasIdpCert returns a boolean if a field has been set.
func (o *PskPortalSso) HasIdpCert() bool {
	if o != nil && !IsNil(o.IdpCert) {
		return true
	}

	return false
}

// SetIdpCert gets a reference to the given string and assigns it to the IdpCert field.
func (o *PskPortalSso) SetIdpCert(v string) {
	o.IdpCert = &v
}

// GetIdpSignAlgo returns the IdpSignAlgo field value if set, zero value otherwise.
func (o *PskPortalSso) GetIdpSignAlgo() string {
	if o == nil || IsNil(o.IdpSignAlgo) {
		var ret string
		return ret
	}
	return *o.IdpSignAlgo
}

// GetIdpSignAlgoOk returns a tuple with the IdpSignAlgo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortalSso) GetIdpSignAlgoOk() (*string, bool) {
	if o == nil || IsNil(o.IdpSignAlgo) {
		return nil, false
	}
	return o.IdpSignAlgo, true
}

// HasIdpSignAlgo returns a boolean if a field has been set.
func (o *PskPortalSso) HasIdpSignAlgo() bool {
	if o != nil && !IsNil(o.IdpSignAlgo) {
		return true
	}

	return false
}

// SetIdpSignAlgo gets a reference to the given string and assigns it to the IdpSignAlgo field.
func (o *PskPortalSso) SetIdpSignAlgo(v string) {
	o.IdpSignAlgo = &v
}

// GetIdpSsoUrl returns the IdpSsoUrl field value if set, zero value otherwise.
func (o *PskPortalSso) GetIdpSsoUrl() string {
	if o == nil || IsNil(o.IdpSsoUrl) {
		var ret string
		return ret
	}
	return *o.IdpSsoUrl
}

// GetIdpSsoUrlOk returns a tuple with the IdpSsoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortalSso) GetIdpSsoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IdpSsoUrl) {
		return nil, false
	}
	return o.IdpSsoUrl, true
}

// HasIdpSsoUrl returns a boolean if a field has been set.
func (o *PskPortalSso) HasIdpSsoUrl() bool {
	if o != nil && !IsNil(o.IdpSsoUrl) {
		return true
	}

	return false
}

// SetIdpSsoUrl gets a reference to the given string and assigns it to the IdpSsoUrl field.
func (o *PskPortalSso) SetIdpSsoUrl(v string) {
	o.IdpSsoUrl = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *PskPortalSso) GetIssuer() string {
	if o == nil || IsNil(o.Issuer) {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortalSso) GetIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.Issuer) {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *PskPortalSso) HasIssuer() bool {
	if o != nil && !IsNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *PskPortalSso) SetIssuer(v string) {
	o.Issuer = &v
}

// GetNameidFormat returns the NameidFormat field value if set, zero value otherwise.
func (o *PskPortalSso) GetNameidFormat() string {
	if o == nil || IsNil(o.NameidFormat) {
		var ret string
		return ret
	}
	return *o.NameidFormat
}

// GetNameidFormatOk returns a tuple with the NameidFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortalSso) GetNameidFormatOk() (*string, bool) {
	if o == nil || IsNil(o.NameidFormat) {
		return nil, false
	}
	return o.NameidFormat, true
}

// HasNameidFormat returns a boolean if a field has been set.
func (o *PskPortalSso) HasNameidFormat() bool {
	if o != nil && !IsNil(o.NameidFormat) {
		return true
	}

	return false
}

// SetNameidFormat gets a reference to the given string and assigns it to the NameidFormat field.
func (o *PskPortalSso) SetNameidFormat(v string) {
	o.NameidFormat = &v
}

// GetRoleMapping returns the RoleMapping field value if set, zero value otherwise.
func (o *PskPortalSso) GetRoleMapping() map[string]string {
	if o == nil || IsNil(o.RoleMapping) {
		var ret map[string]string
		return ret
	}
	return *o.RoleMapping
}

// GetRoleMappingOk returns a tuple with the RoleMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortalSso) GetRoleMappingOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.RoleMapping) {
		return nil, false
	}
	return o.RoleMapping, true
}

// HasRoleMapping returns a boolean if a field has been set.
func (o *PskPortalSso) HasRoleMapping() bool {
	if o != nil && !IsNil(o.RoleMapping) {
		return true
	}

	return false
}

// SetRoleMapping gets a reference to the given map[string]string and assigns it to the RoleMapping field.
func (o *PskPortalSso) SetRoleMapping(v map[string]string) {
	o.RoleMapping = &v
}

// GetUseSsoRoleForPskRole returns the UseSsoRoleForPskRole field value if set, zero value otherwise.
func (o *PskPortalSso) GetUseSsoRoleForPskRole() bool {
	if o == nil || IsNil(o.UseSsoRoleForPskRole) {
		var ret bool
		return ret
	}
	return *o.UseSsoRoleForPskRole
}

// GetUseSsoRoleForPskRoleOk returns a tuple with the UseSsoRoleForPskRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PskPortalSso) GetUseSsoRoleForPskRoleOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSsoRoleForPskRole) {
		return nil, false
	}
	return o.UseSsoRoleForPskRole, true
}

// HasUseSsoRoleForPskRole returns a boolean if a field has been set.
func (o *PskPortalSso) HasUseSsoRoleForPskRole() bool {
	if o != nil && !IsNil(o.UseSsoRoleForPskRole) {
		return true
	}

	return false
}

// SetUseSsoRoleForPskRole gets a reference to the given bool and assigns it to the UseSsoRoleForPskRole field.
func (o *PskPortalSso) SetUseSsoRoleForPskRole(v bool) {
	o.UseSsoRoleForPskRole = &v
}

func (o PskPortalSso) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PskPortalSso) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedRoles) {
		toSerialize["allowed_roles"] = o.AllowedRoles
	}
	if !IsNil(o.IdpCert) {
		toSerialize["idp_cert"] = o.IdpCert
	}
	if !IsNil(o.IdpSignAlgo) {
		toSerialize["idp_sign_algo"] = o.IdpSignAlgo
	}
	if !IsNil(o.IdpSsoUrl) {
		toSerialize["idp_sso_url"] = o.IdpSsoUrl
	}
	if !IsNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !IsNil(o.NameidFormat) {
		toSerialize["nameid_format"] = o.NameidFormat
	}
	if !IsNil(o.RoleMapping) {
		toSerialize["role_mapping"] = o.RoleMapping
	}
	if !IsNil(o.UseSsoRoleForPskRole) {
		toSerialize["use_sso_role_for_psk_role"] = o.UseSsoRoleForPskRole
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PskPortalSso) UnmarshalJSON(data []byte) (err error) {
	varPskPortalSso := _PskPortalSso{}

	err = json.Unmarshal(data, &varPskPortalSso)

	if err != nil {
		return err
	}

	*o = PskPortalSso(varPskPortalSso)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allowed_roles")
		delete(additionalProperties, "idp_cert")
		delete(additionalProperties, "idp_sign_algo")
		delete(additionalProperties, "idp_sso_url")
		delete(additionalProperties, "issuer")
		delete(additionalProperties, "nameid_format")
		delete(additionalProperties, "role_mapping")
		delete(additionalProperties, "use_sso_role_for_psk_role")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePskPortalSso struct {
	value *PskPortalSso
	isSet bool
}

func (v NullablePskPortalSso) Get() *PskPortalSso {
	return v.value
}

func (v *NullablePskPortalSso) Set(val *PskPortalSso) {
	v.value = val
	v.isSet = true
}

func (v NullablePskPortalSso) IsSet() bool {
	return v.isSet
}

func (v *NullablePskPortalSso) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePskPortalSso(val *PskPortalSso) *NullablePskPortalSso {
	return &NullablePskPortalSso{value: val, isSet: true}
}

func (v NullablePskPortalSso) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePskPortalSso) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


