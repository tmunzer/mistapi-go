/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the GatewayStatsSpuStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayStatsSpuStat{}

// GatewayStatsSpuStat struct for GatewayStatsSpuStat
type GatewayStatsSpuStat struct {
	SpuCpu *int32 `json:"spu_cpu,omitempty"`
	SpuCurrentSession *float32 `json:"spu_current_session,omitempty"`
	SpuMaxSession *float32 `json:"spu_max_session,omitempty"`
	SpuMemory *int32 `json:"spu_memory,omitempty"`
	SpuPendingSession *float32 `json:"spu_pending_session,omitempty"`
	SpuValidSession *float32 `json:"spu_valid_session,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayStatsSpuStat GatewayStatsSpuStat

// NewGatewayStatsSpuStat instantiates a new GatewayStatsSpuStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayStatsSpuStat() *GatewayStatsSpuStat {
	this := GatewayStatsSpuStat{}
	return &this
}

// NewGatewayStatsSpuStatWithDefaults instantiates a new GatewayStatsSpuStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayStatsSpuStatWithDefaults() *GatewayStatsSpuStat {
	this := GatewayStatsSpuStat{}
	return &this
}

// GetSpuCpu returns the SpuCpu field value if set, zero value otherwise.
func (o *GatewayStatsSpuStat) GetSpuCpu() int32 {
	if o == nil || IsNil(o.SpuCpu) {
		var ret int32
		return ret
	}
	return *o.SpuCpu
}

// GetSpuCpuOk returns a tuple with the SpuCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStatsSpuStat) GetSpuCpuOk() (*int32, bool) {
	if o == nil || IsNil(o.SpuCpu) {
		return nil, false
	}
	return o.SpuCpu, true
}

// HasSpuCpu returns a boolean if a field has been set.
func (o *GatewayStatsSpuStat) HasSpuCpu() bool {
	if o != nil && !IsNil(o.SpuCpu) {
		return true
	}

	return false
}

// SetSpuCpu gets a reference to the given int32 and assigns it to the SpuCpu field.
func (o *GatewayStatsSpuStat) SetSpuCpu(v int32) {
	o.SpuCpu = &v
}

// GetSpuCurrentSession returns the SpuCurrentSession field value if set, zero value otherwise.
func (o *GatewayStatsSpuStat) GetSpuCurrentSession() float32 {
	if o == nil || IsNil(o.SpuCurrentSession) {
		var ret float32
		return ret
	}
	return *o.SpuCurrentSession
}

// GetSpuCurrentSessionOk returns a tuple with the SpuCurrentSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStatsSpuStat) GetSpuCurrentSessionOk() (*float32, bool) {
	if o == nil || IsNil(o.SpuCurrentSession) {
		return nil, false
	}
	return o.SpuCurrentSession, true
}

// HasSpuCurrentSession returns a boolean if a field has been set.
func (o *GatewayStatsSpuStat) HasSpuCurrentSession() bool {
	if o != nil && !IsNil(o.SpuCurrentSession) {
		return true
	}

	return false
}

// SetSpuCurrentSession gets a reference to the given float32 and assigns it to the SpuCurrentSession field.
func (o *GatewayStatsSpuStat) SetSpuCurrentSession(v float32) {
	o.SpuCurrentSession = &v
}

// GetSpuMaxSession returns the SpuMaxSession field value if set, zero value otherwise.
func (o *GatewayStatsSpuStat) GetSpuMaxSession() float32 {
	if o == nil || IsNil(o.SpuMaxSession) {
		var ret float32
		return ret
	}
	return *o.SpuMaxSession
}

// GetSpuMaxSessionOk returns a tuple with the SpuMaxSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStatsSpuStat) GetSpuMaxSessionOk() (*float32, bool) {
	if o == nil || IsNil(o.SpuMaxSession) {
		return nil, false
	}
	return o.SpuMaxSession, true
}

// HasSpuMaxSession returns a boolean if a field has been set.
func (o *GatewayStatsSpuStat) HasSpuMaxSession() bool {
	if o != nil && !IsNil(o.SpuMaxSession) {
		return true
	}

	return false
}

// SetSpuMaxSession gets a reference to the given float32 and assigns it to the SpuMaxSession field.
func (o *GatewayStatsSpuStat) SetSpuMaxSession(v float32) {
	o.SpuMaxSession = &v
}

// GetSpuMemory returns the SpuMemory field value if set, zero value otherwise.
func (o *GatewayStatsSpuStat) GetSpuMemory() int32 {
	if o == nil || IsNil(o.SpuMemory) {
		var ret int32
		return ret
	}
	return *o.SpuMemory
}

// GetSpuMemoryOk returns a tuple with the SpuMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStatsSpuStat) GetSpuMemoryOk() (*int32, bool) {
	if o == nil || IsNil(o.SpuMemory) {
		return nil, false
	}
	return o.SpuMemory, true
}

// HasSpuMemory returns a boolean if a field has been set.
func (o *GatewayStatsSpuStat) HasSpuMemory() bool {
	if o != nil && !IsNil(o.SpuMemory) {
		return true
	}

	return false
}

// SetSpuMemory gets a reference to the given int32 and assigns it to the SpuMemory field.
func (o *GatewayStatsSpuStat) SetSpuMemory(v int32) {
	o.SpuMemory = &v
}

// GetSpuPendingSession returns the SpuPendingSession field value if set, zero value otherwise.
func (o *GatewayStatsSpuStat) GetSpuPendingSession() float32 {
	if o == nil || IsNil(o.SpuPendingSession) {
		var ret float32
		return ret
	}
	return *o.SpuPendingSession
}

// GetSpuPendingSessionOk returns a tuple with the SpuPendingSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStatsSpuStat) GetSpuPendingSessionOk() (*float32, bool) {
	if o == nil || IsNil(o.SpuPendingSession) {
		return nil, false
	}
	return o.SpuPendingSession, true
}

// HasSpuPendingSession returns a boolean if a field has been set.
func (o *GatewayStatsSpuStat) HasSpuPendingSession() bool {
	if o != nil && !IsNil(o.SpuPendingSession) {
		return true
	}

	return false
}

// SetSpuPendingSession gets a reference to the given float32 and assigns it to the SpuPendingSession field.
func (o *GatewayStatsSpuStat) SetSpuPendingSession(v float32) {
	o.SpuPendingSession = &v
}

// GetSpuValidSession returns the SpuValidSession field value if set, zero value otherwise.
func (o *GatewayStatsSpuStat) GetSpuValidSession() float32 {
	if o == nil || IsNil(o.SpuValidSession) {
		var ret float32
		return ret
	}
	return *o.SpuValidSession
}

// GetSpuValidSessionOk returns a tuple with the SpuValidSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayStatsSpuStat) GetSpuValidSessionOk() (*float32, bool) {
	if o == nil || IsNil(o.SpuValidSession) {
		return nil, false
	}
	return o.SpuValidSession, true
}

// HasSpuValidSession returns a boolean if a field has been set.
func (o *GatewayStatsSpuStat) HasSpuValidSession() bool {
	if o != nil && !IsNil(o.SpuValidSession) {
		return true
	}

	return false
}

// SetSpuValidSession gets a reference to the given float32 and assigns it to the SpuValidSession field.
func (o *GatewayStatsSpuStat) SetSpuValidSession(v float32) {
	o.SpuValidSession = &v
}

func (o GatewayStatsSpuStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayStatsSpuStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpuCpu) {
		toSerialize["spu_cpu"] = o.SpuCpu
	}
	if !IsNil(o.SpuCurrentSession) {
		toSerialize["spu_current_session"] = o.SpuCurrentSession
	}
	if !IsNil(o.SpuMaxSession) {
		toSerialize["spu_max_session"] = o.SpuMaxSession
	}
	if !IsNil(o.SpuMemory) {
		toSerialize["spu_memory"] = o.SpuMemory
	}
	if !IsNil(o.SpuPendingSession) {
		toSerialize["spu_pending_session"] = o.SpuPendingSession
	}
	if !IsNil(o.SpuValidSession) {
		toSerialize["spu_valid_session"] = o.SpuValidSession
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayStatsSpuStat) UnmarshalJSON(data []byte) (err error) {
	varGatewayStatsSpuStat := _GatewayStatsSpuStat{}

	err = json.Unmarshal(data, &varGatewayStatsSpuStat)

	if err != nil {
		return err
	}

	*o = GatewayStatsSpuStat(varGatewayStatsSpuStat)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "spu_cpu")
		delete(additionalProperties, "spu_current_session")
		delete(additionalProperties, "spu_max_session")
		delete(additionalProperties, "spu_memory")
		delete(additionalProperties, "spu_pending_session")
		delete(additionalProperties, "spu_valid_session")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayStatsSpuStat struct {
	value *GatewayStatsSpuStat
	isSet bool
}

func (v NullableGatewayStatsSpuStat) Get() *GatewayStatsSpuStat {
	return v.value
}

func (v *NullableGatewayStatsSpuStat) Set(val *GatewayStatsSpuStat) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayStatsSpuStat) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayStatsSpuStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayStatsSpuStat(val *GatewayStatsSpuStat) *NullableGatewayStatsSpuStat {
	return &NullableGatewayStatsSpuStat{value: val, isSet: true}
}

func (v NullableGatewayStatsSpuStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayStatsSpuStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


