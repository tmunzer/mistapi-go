/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the MxclusterNac type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MxclusterNac{}

// MxclusterNac struct for MxclusterNac
type MxclusterNac struct {
	AcctServerPort *int32 `json:"acct_server_port,omitempty"`
	AuthServerPort *int32 `json:"auth_server_port,omitempty"`
	// Property key is the RADIUS Client IP/Subnet.
	ClientIps *map[string]map[string]MxclusterNacClientIp `json:"client_ips,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Secret *string `json:"secret,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MxclusterNac MxclusterNac

// NewMxclusterNac instantiates a new MxclusterNac object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMxclusterNac() *MxclusterNac {
	this := MxclusterNac{}
	var acctServerPort int32 = 1813
	this.AcctServerPort = &acctServerPort
	var authServerPort int32 = 1812
	this.AuthServerPort = &authServerPort
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// NewMxclusterNacWithDefaults instantiates a new MxclusterNac object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMxclusterNacWithDefaults() *MxclusterNac {
	this := MxclusterNac{}
	var acctServerPort int32 = 1813
	this.AcctServerPort = &acctServerPort
	var authServerPort int32 = 1812
	this.AuthServerPort = &authServerPort
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// GetAcctServerPort returns the AcctServerPort field value if set, zero value otherwise.
func (o *MxclusterNac) GetAcctServerPort() int32 {
	if o == nil || IsNil(o.AcctServerPort) {
		var ret int32
		return ret
	}
	return *o.AcctServerPort
}

// GetAcctServerPortOk returns a tuple with the AcctServerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxclusterNac) GetAcctServerPortOk() (*int32, bool) {
	if o == nil || IsNil(o.AcctServerPort) {
		return nil, false
	}
	return o.AcctServerPort, true
}

// HasAcctServerPort returns a boolean if a field has been set.
func (o *MxclusterNac) HasAcctServerPort() bool {
	if o != nil && !IsNil(o.AcctServerPort) {
		return true
	}

	return false
}

// SetAcctServerPort gets a reference to the given int32 and assigns it to the AcctServerPort field.
func (o *MxclusterNac) SetAcctServerPort(v int32) {
	o.AcctServerPort = &v
}

// GetAuthServerPort returns the AuthServerPort field value if set, zero value otherwise.
func (o *MxclusterNac) GetAuthServerPort() int32 {
	if o == nil || IsNil(o.AuthServerPort) {
		var ret int32
		return ret
	}
	return *o.AuthServerPort
}

// GetAuthServerPortOk returns a tuple with the AuthServerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxclusterNac) GetAuthServerPortOk() (*int32, bool) {
	if o == nil || IsNil(o.AuthServerPort) {
		return nil, false
	}
	return o.AuthServerPort, true
}

// HasAuthServerPort returns a boolean if a field has been set.
func (o *MxclusterNac) HasAuthServerPort() bool {
	if o != nil && !IsNil(o.AuthServerPort) {
		return true
	}

	return false
}

// SetAuthServerPort gets a reference to the given int32 and assigns it to the AuthServerPort field.
func (o *MxclusterNac) SetAuthServerPort(v int32) {
	o.AuthServerPort = &v
}

// GetClientIps returns the ClientIps field value if set, zero value otherwise.
func (o *MxclusterNac) GetClientIps() map[string]map[string]MxclusterNacClientIp {
	if o == nil || IsNil(o.ClientIps) {
		var ret map[string]map[string]MxclusterNacClientIp
		return ret
	}
	return *o.ClientIps
}

// GetClientIpsOk returns a tuple with the ClientIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxclusterNac) GetClientIpsOk() (*map[string]map[string]MxclusterNacClientIp, bool) {
	if o == nil || IsNil(o.ClientIps) {
		return nil, false
	}
	return o.ClientIps, true
}

// HasClientIps returns a boolean if a field has been set.
func (o *MxclusterNac) HasClientIps() bool {
	if o != nil && !IsNil(o.ClientIps) {
		return true
	}

	return false
}

// SetClientIps gets a reference to the given map[string]map[string]MxclusterNacClientIp and assigns it to the ClientIps field.
func (o *MxclusterNac) SetClientIps(v map[string]map[string]MxclusterNacClientIp) {
	o.ClientIps = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *MxclusterNac) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxclusterNac) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *MxclusterNac) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *MxclusterNac) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *MxclusterNac) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxclusterNac) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *MxclusterNac) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *MxclusterNac) SetSecret(v string) {
	o.Secret = &v
}

func (o MxclusterNac) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MxclusterNac) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcctServerPort) {
		toSerialize["acct_server_port"] = o.AcctServerPort
	}
	if !IsNil(o.AuthServerPort) {
		toSerialize["auth_server_port"] = o.AuthServerPort
	}
	if !IsNil(o.ClientIps) {
		toSerialize["client_ips"] = o.ClientIps
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MxclusterNac) UnmarshalJSON(data []byte) (err error) {
	varMxclusterNac := _MxclusterNac{}

	err = json.Unmarshal(data, &varMxclusterNac)

	if err != nil {
		return err
	}

	*o = MxclusterNac(varMxclusterNac)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "acct_server_port")
		delete(additionalProperties, "auth_server_port")
		delete(additionalProperties, "client_ips")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "secret")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMxclusterNac struct {
	value *MxclusterNac
	isSet bool
}

func (v NullableMxclusterNac) Get() *MxclusterNac {
	return v.value
}

func (v *NullableMxclusterNac) Set(val *MxclusterNac) {
	v.value = val
	v.isSet = true
}

func (v NullableMxclusterNac) IsSet() bool {
	return v.isSet
}

func (v *NullableMxclusterNac) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMxclusterNac(val *MxclusterNac) *NullableMxclusterNac {
	return &NullableMxclusterNac{value: val, isSet: true}
}

func (v NullableMxclusterNac) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMxclusterNac) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


