/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the SwitchPortMirroring type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SwitchPortMirroring{}

// SwitchPortMirroring struct for SwitchPortMirroring
type SwitchPortMirroring struct {
	// at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified
	InputNetworksIngress []string `json:"input_networks_ingress,omitempty"`
	// at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified
	InputPortIdsEgress []string `json:"input_port_ids_egress,omitempty"`
	// at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified
	InputPortIdsIngress []string `json:"input_port_ids_ingress,omitempty"`
	OutputNetwork *string `json:"output_network,omitempty"`
	// exaclty on of the `output_port_id` or `output_network` should be provided
	OutputPortId *string `json:"output_port_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SwitchPortMirroring SwitchPortMirroring

// NewSwitchPortMirroring instantiates a new SwitchPortMirroring object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSwitchPortMirroring() *SwitchPortMirroring {
	this := SwitchPortMirroring{}
	return &this
}

// NewSwitchPortMirroringWithDefaults instantiates a new SwitchPortMirroring object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSwitchPortMirroringWithDefaults() *SwitchPortMirroring {
	this := SwitchPortMirroring{}
	return &this
}

// GetInputNetworksIngress returns the InputNetworksIngress field value if set, zero value otherwise.
func (o *SwitchPortMirroring) GetInputNetworksIngress() []string {
	if o == nil || IsNil(o.InputNetworksIngress) {
		var ret []string
		return ret
	}
	return o.InputNetworksIngress
}

// GetInputNetworksIngressOk returns a tuple with the InputNetworksIngress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchPortMirroring) GetInputNetworksIngressOk() ([]string, bool) {
	if o == nil || IsNil(o.InputNetworksIngress) {
		return nil, false
	}
	return o.InputNetworksIngress, true
}

// HasInputNetworksIngress returns a boolean if a field has been set.
func (o *SwitchPortMirroring) HasInputNetworksIngress() bool {
	if o != nil && !IsNil(o.InputNetworksIngress) {
		return true
	}

	return false
}

// SetInputNetworksIngress gets a reference to the given []string and assigns it to the InputNetworksIngress field.
func (o *SwitchPortMirroring) SetInputNetworksIngress(v []string) {
	o.InputNetworksIngress = v
}

// GetInputPortIdsEgress returns the InputPortIdsEgress field value if set, zero value otherwise.
func (o *SwitchPortMirroring) GetInputPortIdsEgress() []string {
	if o == nil || IsNil(o.InputPortIdsEgress) {
		var ret []string
		return ret
	}
	return o.InputPortIdsEgress
}

// GetInputPortIdsEgressOk returns a tuple with the InputPortIdsEgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchPortMirroring) GetInputPortIdsEgressOk() ([]string, bool) {
	if o == nil || IsNil(o.InputPortIdsEgress) {
		return nil, false
	}
	return o.InputPortIdsEgress, true
}

// HasInputPortIdsEgress returns a boolean if a field has been set.
func (o *SwitchPortMirroring) HasInputPortIdsEgress() bool {
	if o != nil && !IsNil(o.InputPortIdsEgress) {
		return true
	}

	return false
}

// SetInputPortIdsEgress gets a reference to the given []string and assigns it to the InputPortIdsEgress field.
func (o *SwitchPortMirroring) SetInputPortIdsEgress(v []string) {
	o.InputPortIdsEgress = v
}

// GetInputPortIdsIngress returns the InputPortIdsIngress field value if set, zero value otherwise.
func (o *SwitchPortMirroring) GetInputPortIdsIngress() []string {
	if o == nil || IsNil(o.InputPortIdsIngress) {
		var ret []string
		return ret
	}
	return o.InputPortIdsIngress
}

// GetInputPortIdsIngressOk returns a tuple with the InputPortIdsIngress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchPortMirroring) GetInputPortIdsIngressOk() ([]string, bool) {
	if o == nil || IsNil(o.InputPortIdsIngress) {
		return nil, false
	}
	return o.InputPortIdsIngress, true
}

// HasInputPortIdsIngress returns a boolean if a field has been set.
func (o *SwitchPortMirroring) HasInputPortIdsIngress() bool {
	if o != nil && !IsNil(o.InputPortIdsIngress) {
		return true
	}

	return false
}

// SetInputPortIdsIngress gets a reference to the given []string and assigns it to the InputPortIdsIngress field.
func (o *SwitchPortMirroring) SetInputPortIdsIngress(v []string) {
	o.InputPortIdsIngress = v
}

// GetOutputNetwork returns the OutputNetwork field value if set, zero value otherwise.
func (o *SwitchPortMirroring) GetOutputNetwork() string {
	if o == nil || IsNil(o.OutputNetwork) {
		var ret string
		return ret
	}
	return *o.OutputNetwork
}

// GetOutputNetworkOk returns a tuple with the OutputNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchPortMirroring) GetOutputNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.OutputNetwork) {
		return nil, false
	}
	return o.OutputNetwork, true
}

// HasOutputNetwork returns a boolean if a field has been set.
func (o *SwitchPortMirroring) HasOutputNetwork() bool {
	if o != nil && !IsNil(o.OutputNetwork) {
		return true
	}

	return false
}

// SetOutputNetwork gets a reference to the given string and assigns it to the OutputNetwork field.
func (o *SwitchPortMirroring) SetOutputNetwork(v string) {
	o.OutputNetwork = &v
}

// GetOutputPortId returns the OutputPortId field value if set, zero value otherwise.
func (o *SwitchPortMirroring) GetOutputPortId() string {
	if o == nil || IsNil(o.OutputPortId) {
		var ret string
		return ret
	}
	return *o.OutputPortId
}

// GetOutputPortIdOk returns a tuple with the OutputPortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchPortMirroring) GetOutputPortIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutputPortId) {
		return nil, false
	}
	return o.OutputPortId, true
}

// HasOutputPortId returns a boolean if a field has been set.
func (o *SwitchPortMirroring) HasOutputPortId() bool {
	if o != nil && !IsNil(o.OutputPortId) {
		return true
	}

	return false
}

// SetOutputPortId gets a reference to the given string and assigns it to the OutputPortId field.
func (o *SwitchPortMirroring) SetOutputPortId(v string) {
	o.OutputPortId = &v
}

func (o SwitchPortMirroring) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SwitchPortMirroring) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InputNetworksIngress) {
		toSerialize["input_networks_ingress"] = o.InputNetworksIngress
	}
	if !IsNil(o.InputPortIdsEgress) {
		toSerialize["input_port_ids_egress"] = o.InputPortIdsEgress
	}
	if !IsNil(o.InputPortIdsIngress) {
		toSerialize["input_port_ids_ingress"] = o.InputPortIdsIngress
	}
	if !IsNil(o.OutputNetwork) {
		toSerialize["output_network"] = o.OutputNetwork
	}
	if !IsNil(o.OutputPortId) {
		toSerialize["output_port_id"] = o.OutputPortId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SwitchPortMirroring) UnmarshalJSON(data []byte) (err error) {
	varSwitchPortMirroring := _SwitchPortMirroring{}

	err = json.Unmarshal(data, &varSwitchPortMirroring)

	if err != nil {
		return err
	}

	*o = SwitchPortMirroring(varSwitchPortMirroring)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "input_networks_ingress")
		delete(additionalProperties, "input_port_ids_egress")
		delete(additionalProperties, "input_port_ids_ingress")
		delete(additionalProperties, "output_network")
		delete(additionalProperties, "output_port_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSwitchPortMirroring struct {
	value *SwitchPortMirroring
	isSet bool
}

func (v NullableSwitchPortMirroring) Get() *SwitchPortMirroring {
	return v.value
}

func (v *NullableSwitchPortMirroring) Set(val *SwitchPortMirroring) {
	v.value = val
	v.isSet = true
}

func (v NullableSwitchPortMirroring) IsSet() bool {
	return v.isSet
}

func (v *NullableSwitchPortMirroring) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSwitchPortMirroring(val *SwitchPortMirroring) *NullableSwitchPortMirroring {
	return &NullableSwitchPortMirroring{value: val, isSet: true}
}

func (v NullableSwitchPortMirroring) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSwitchPortMirroring) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


