/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the WiredClientResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WiredClientResponse{}

// WiredClientResponse struct for WiredClientResponse
type WiredClientResponse struct {
	DeviceMac []string `json:"device_mac,omitempty"`
	DeviceMacPort []WiredClientResponseDeviceMacPortItem `json:"device_mac_port,omitempty"`
	Ip []string `json:"ip,omitempty"`
	Mac *string `json:"mac,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	PortId []string `json:"port_id,omitempty"`
	SiteId *string `json:"site_id,omitempty"`
	Timestamp *float32 `json:"timestamp,omitempty"`
	Vlan []int32 `json:"vlan,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WiredClientResponse WiredClientResponse

// NewWiredClientResponse instantiates a new WiredClientResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWiredClientResponse() *WiredClientResponse {
	this := WiredClientResponse{}
	return &this
}

// NewWiredClientResponseWithDefaults instantiates a new WiredClientResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWiredClientResponseWithDefaults() *WiredClientResponse {
	this := WiredClientResponse{}
	return &this
}

// GetDeviceMac returns the DeviceMac field value if set, zero value otherwise.
func (o *WiredClientResponse) GetDeviceMac() []string {
	if o == nil || IsNil(o.DeviceMac) {
		var ret []string
		return ret
	}
	return o.DeviceMac
}

// GetDeviceMacOk returns a tuple with the DeviceMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponse) GetDeviceMacOk() ([]string, bool) {
	if o == nil || IsNil(o.DeviceMac) {
		return nil, false
	}
	return o.DeviceMac, true
}

// HasDeviceMac returns a boolean if a field has been set.
func (o *WiredClientResponse) HasDeviceMac() bool {
	if o != nil && !IsNil(o.DeviceMac) {
		return true
	}

	return false
}

// SetDeviceMac gets a reference to the given []string and assigns it to the DeviceMac field.
func (o *WiredClientResponse) SetDeviceMac(v []string) {
	o.DeviceMac = v
}

// GetDeviceMacPort returns the DeviceMacPort field value if set, zero value otherwise.
func (o *WiredClientResponse) GetDeviceMacPort() []WiredClientResponseDeviceMacPortItem {
	if o == nil || IsNil(o.DeviceMacPort) {
		var ret []WiredClientResponseDeviceMacPortItem
		return ret
	}
	return o.DeviceMacPort
}

// GetDeviceMacPortOk returns a tuple with the DeviceMacPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponse) GetDeviceMacPortOk() ([]WiredClientResponseDeviceMacPortItem, bool) {
	if o == nil || IsNil(o.DeviceMacPort) {
		return nil, false
	}
	return o.DeviceMacPort, true
}

// HasDeviceMacPort returns a boolean if a field has been set.
func (o *WiredClientResponse) HasDeviceMacPort() bool {
	if o != nil && !IsNil(o.DeviceMacPort) {
		return true
	}

	return false
}

// SetDeviceMacPort gets a reference to the given []WiredClientResponseDeviceMacPortItem and assigns it to the DeviceMacPort field.
func (o *WiredClientResponse) SetDeviceMacPort(v []WiredClientResponseDeviceMacPortItem) {
	o.DeviceMacPort = v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *WiredClientResponse) GetIp() []string {
	if o == nil || IsNil(o.Ip) {
		var ret []string
		return ret
	}
	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponse) GetIpOk() ([]string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *WiredClientResponse) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given []string and assigns it to the Ip field.
func (o *WiredClientResponse) SetIp(v []string) {
	o.Ip = v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *WiredClientResponse) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponse) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *WiredClientResponse) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *WiredClientResponse) SetMac(v string) {
	o.Mac = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *WiredClientResponse) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponse) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *WiredClientResponse) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *WiredClientResponse) SetOrgId(v string) {
	o.OrgId = &v
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *WiredClientResponse) GetPortId() []string {
	if o == nil || IsNil(o.PortId) {
		var ret []string
		return ret
	}
	return o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponse) GetPortIdOk() ([]string, bool) {
	if o == nil || IsNil(o.PortId) {
		return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *WiredClientResponse) HasPortId() bool {
	if o != nil && !IsNil(o.PortId) {
		return true
	}

	return false
}

// SetPortId gets a reference to the given []string and assigns it to the PortId field.
func (o *WiredClientResponse) SetPortId(v []string) {
	o.PortId = v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *WiredClientResponse) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponse) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *WiredClientResponse) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *WiredClientResponse) SetSiteId(v string) {
	o.SiteId = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *WiredClientResponse) GetTimestamp() float32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret float32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponse) GetTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *WiredClientResponse) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given float32 and assigns it to the Timestamp field.
func (o *WiredClientResponse) SetTimestamp(v float32) {
	o.Timestamp = &v
}

// GetVlan returns the Vlan field value if set, zero value otherwise.
func (o *WiredClientResponse) GetVlan() []int32 {
	if o == nil || IsNil(o.Vlan) {
		var ret []int32
		return ret
	}
	return o.Vlan
}

// GetVlanOk returns a tuple with the Vlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponse) GetVlanOk() ([]int32, bool) {
	if o == nil || IsNil(o.Vlan) {
		return nil, false
	}
	return o.Vlan, true
}

// HasVlan returns a boolean if a field has been set.
func (o *WiredClientResponse) HasVlan() bool {
	if o != nil && !IsNil(o.Vlan) {
		return true
	}

	return false
}

// SetVlan gets a reference to the given []int32 and assigns it to the Vlan field.
func (o *WiredClientResponse) SetVlan(v []int32) {
	o.Vlan = v
}

func (o WiredClientResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WiredClientResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceMac) {
		toSerialize["device_mac"] = o.DeviceMac
	}
	if !IsNil(o.DeviceMacPort) {
		toSerialize["device_mac_port"] = o.DeviceMacPort
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.PortId) {
		toSerialize["port_id"] = o.PortId
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Vlan) {
		toSerialize["vlan"] = o.Vlan
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WiredClientResponse) UnmarshalJSON(data []byte) (err error) {
	varWiredClientResponse := _WiredClientResponse{}

	err = json.Unmarshal(data, &varWiredClientResponse)

	if err != nil {
		return err
	}

	*o = WiredClientResponse(varWiredClientResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "device_mac")
		delete(additionalProperties, "device_mac_port")
		delete(additionalProperties, "ip")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "port_id")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "vlan")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWiredClientResponse struct {
	value *WiredClientResponse
	isSet bool
}

func (v NullableWiredClientResponse) Get() *WiredClientResponse {
	return v.value
}

func (v *NullableWiredClientResponse) Set(val *WiredClientResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWiredClientResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWiredClientResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWiredClientResponse(val *WiredClientResponse) *NullableWiredClientResponse {
	return &NullableWiredClientResponse{value: val, isSet: true}
}

func (v NullableWiredClientResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWiredClientResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


