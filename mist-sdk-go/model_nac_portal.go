/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the NacPortal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NacPortal{}

// NacPortal struct for NacPortal
type NacPortal struct {
	AccessType *NacPortalAccessType `json:"access_type,omitempty"`
	// background image
	BgImageUrl *string `json:"bg_image_url,omitempty"`
	// in days
	CertExpireTime *int32 `json:"cert_expire_time,omitempty"`
	// model, version, fingering, events (connecting, disconnect, roaming), which ap
	EnableTelemetry *bool `json:"enable_telemetry,omitempty"`
	// in days
	ExpiryNotificationTime *int32 `json:"expiry_notification_time,omitempty"`
	Name *string `json:"name,omitempty"`
	// phase 2
	NotifyExpiry *bool `json:"notify_expiry,omitempty"`
	Ssid *string `json:"ssid,omitempty"`
	Sso *NacPortalSso `json:"sso,omitempty"`
	TemplateUrl *string `json:"template_url,omitempty"`
	ThumbnailUrl *string `json:"thumbnail_url,omitempty"`
	Tos *string `json:"tos,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NacPortal NacPortal

// NewNacPortal instantiates a new NacPortal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNacPortal() *NacPortal {
	this := NacPortal{}
	var accessType NacPortalAccessType = NACPORTALACCESSTYPE_WIRELESS
	this.AccessType = &accessType
	return &this
}

// NewNacPortalWithDefaults instantiates a new NacPortal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNacPortalWithDefaults() *NacPortal {
	this := NacPortal{}
	var accessType NacPortalAccessType = NACPORTALACCESSTYPE_WIRELESS
	this.AccessType = &accessType
	return &this
}

// GetAccessType returns the AccessType field value if set, zero value otherwise.
func (o *NacPortal) GetAccessType() NacPortalAccessType {
	if o == nil || IsNil(o.AccessType) {
		var ret NacPortalAccessType
		return ret
	}
	return *o.AccessType
}

// GetAccessTypeOk returns a tuple with the AccessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NacPortal) GetAccessTypeOk() (*NacPortalAccessType, bool) {
	if o == nil || IsNil(o.AccessType) {
		return nil, false
	}
	return o.AccessType, true
}

// HasAccessType returns a boolean if a field has been set.
func (o *NacPortal) HasAccessType() bool {
	if o != nil && !IsNil(o.AccessType) {
		return true
	}

	return false
}

// SetAccessType gets a reference to the given NacPortalAccessType and assigns it to the AccessType field.
func (o *NacPortal) SetAccessType(v NacPortalAccessType) {
	o.AccessType = &v
}

// GetBgImageUrl returns the BgImageUrl field value if set, zero value otherwise.
func (o *NacPortal) GetBgImageUrl() string {
	if o == nil || IsNil(o.BgImageUrl) {
		var ret string
		return ret
	}
	return *o.BgImageUrl
}

// GetBgImageUrlOk returns a tuple with the BgImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NacPortal) GetBgImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BgImageUrl) {
		return nil, false
	}
	return o.BgImageUrl, true
}

// HasBgImageUrl returns a boolean if a field has been set.
func (o *NacPortal) HasBgImageUrl() bool {
	if o != nil && !IsNil(o.BgImageUrl) {
		return true
	}

	return false
}

// SetBgImageUrl gets a reference to the given string and assigns it to the BgImageUrl field.
func (o *NacPortal) SetBgImageUrl(v string) {
	o.BgImageUrl = &v
}

// GetCertExpireTime returns the CertExpireTime field value if set, zero value otherwise.
func (o *NacPortal) GetCertExpireTime() int32 {
	if o == nil || IsNil(o.CertExpireTime) {
		var ret int32
		return ret
	}
	return *o.CertExpireTime
}

// GetCertExpireTimeOk returns a tuple with the CertExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NacPortal) GetCertExpireTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.CertExpireTime) {
		return nil, false
	}
	return o.CertExpireTime, true
}

// HasCertExpireTime returns a boolean if a field has been set.
func (o *NacPortal) HasCertExpireTime() bool {
	if o != nil && !IsNil(o.CertExpireTime) {
		return true
	}

	return false
}

// SetCertExpireTime gets a reference to the given int32 and assigns it to the CertExpireTime field.
func (o *NacPortal) SetCertExpireTime(v int32) {
	o.CertExpireTime = &v
}

// GetEnableTelemetry returns the EnableTelemetry field value if set, zero value otherwise.
func (o *NacPortal) GetEnableTelemetry() bool {
	if o == nil || IsNil(o.EnableTelemetry) {
		var ret bool
		return ret
	}
	return *o.EnableTelemetry
}

// GetEnableTelemetryOk returns a tuple with the EnableTelemetry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NacPortal) GetEnableTelemetryOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableTelemetry) {
		return nil, false
	}
	return o.EnableTelemetry, true
}

// HasEnableTelemetry returns a boolean if a field has been set.
func (o *NacPortal) HasEnableTelemetry() bool {
	if o != nil && !IsNil(o.EnableTelemetry) {
		return true
	}

	return false
}

// SetEnableTelemetry gets a reference to the given bool and assigns it to the EnableTelemetry field.
func (o *NacPortal) SetEnableTelemetry(v bool) {
	o.EnableTelemetry = &v
}

// GetExpiryNotificationTime returns the ExpiryNotificationTime field value if set, zero value otherwise.
func (o *NacPortal) GetExpiryNotificationTime() int32 {
	if o == nil || IsNil(o.ExpiryNotificationTime) {
		var ret int32
		return ret
	}
	return *o.ExpiryNotificationTime
}

// GetExpiryNotificationTimeOk returns a tuple with the ExpiryNotificationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NacPortal) GetExpiryNotificationTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiryNotificationTime) {
		return nil, false
	}
	return o.ExpiryNotificationTime, true
}

// HasExpiryNotificationTime returns a boolean if a field has been set.
func (o *NacPortal) HasExpiryNotificationTime() bool {
	if o != nil && !IsNil(o.ExpiryNotificationTime) {
		return true
	}

	return false
}

// SetExpiryNotificationTime gets a reference to the given int32 and assigns it to the ExpiryNotificationTime field.
func (o *NacPortal) SetExpiryNotificationTime(v int32) {
	o.ExpiryNotificationTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NacPortal) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NacPortal) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NacPortal) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NacPortal) SetName(v string) {
	o.Name = &v
}

// GetNotifyExpiry returns the NotifyExpiry field value if set, zero value otherwise.
func (o *NacPortal) GetNotifyExpiry() bool {
	if o == nil || IsNil(o.NotifyExpiry) {
		var ret bool
		return ret
	}
	return *o.NotifyExpiry
}

// GetNotifyExpiryOk returns a tuple with the NotifyExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NacPortal) GetNotifyExpiryOk() (*bool, bool) {
	if o == nil || IsNil(o.NotifyExpiry) {
		return nil, false
	}
	return o.NotifyExpiry, true
}

// HasNotifyExpiry returns a boolean if a field has been set.
func (o *NacPortal) HasNotifyExpiry() bool {
	if o != nil && !IsNil(o.NotifyExpiry) {
		return true
	}

	return false
}

// SetNotifyExpiry gets a reference to the given bool and assigns it to the NotifyExpiry field.
func (o *NacPortal) SetNotifyExpiry(v bool) {
	o.NotifyExpiry = &v
}

// GetSsid returns the Ssid field value if set, zero value otherwise.
func (o *NacPortal) GetSsid() string {
	if o == nil || IsNil(o.Ssid) {
		var ret string
		return ret
	}
	return *o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NacPortal) GetSsidOk() (*string, bool) {
	if o == nil || IsNil(o.Ssid) {
		return nil, false
	}
	return o.Ssid, true
}

// HasSsid returns a boolean if a field has been set.
func (o *NacPortal) HasSsid() bool {
	if o != nil && !IsNil(o.Ssid) {
		return true
	}

	return false
}

// SetSsid gets a reference to the given string and assigns it to the Ssid field.
func (o *NacPortal) SetSsid(v string) {
	o.Ssid = &v
}

// GetSso returns the Sso field value if set, zero value otherwise.
func (o *NacPortal) GetSso() NacPortalSso {
	if o == nil || IsNil(o.Sso) {
		var ret NacPortalSso
		return ret
	}
	return *o.Sso
}

// GetSsoOk returns a tuple with the Sso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NacPortal) GetSsoOk() (*NacPortalSso, bool) {
	if o == nil || IsNil(o.Sso) {
		return nil, false
	}
	return o.Sso, true
}

// HasSso returns a boolean if a field has been set.
func (o *NacPortal) HasSso() bool {
	if o != nil && !IsNil(o.Sso) {
		return true
	}

	return false
}

// SetSso gets a reference to the given NacPortalSso and assigns it to the Sso field.
func (o *NacPortal) SetSso(v NacPortalSso) {
	o.Sso = &v
}

// GetTemplateUrl returns the TemplateUrl field value if set, zero value otherwise.
func (o *NacPortal) GetTemplateUrl() string {
	if o == nil || IsNil(o.TemplateUrl) {
		var ret string
		return ret
	}
	return *o.TemplateUrl
}

// GetTemplateUrlOk returns a tuple with the TemplateUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NacPortal) GetTemplateUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateUrl) {
		return nil, false
	}
	return o.TemplateUrl, true
}

// HasTemplateUrl returns a boolean if a field has been set.
func (o *NacPortal) HasTemplateUrl() bool {
	if o != nil && !IsNil(o.TemplateUrl) {
		return true
	}

	return false
}

// SetTemplateUrl gets a reference to the given string and assigns it to the TemplateUrl field.
func (o *NacPortal) SetTemplateUrl(v string) {
	o.TemplateUrl = &v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise.
func (o *NacPortal) GetThumbnailUrl() string {
	if o == nil || IsNil(o.ThumbnailUrl) {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NacPortal) GetThumbnailUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailUrl) {
		return nil, false
	}
	return o.ThumbnailUrl, true
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *NacPortal) HasThumbnailUrl() bool {
	if o != nil && !IsNil(o.ThumbnailUrl) {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given string and assigns it to the ThumbnailUrl field.
func (o *NacPortal) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = &v
}

// GetTos returns the Tos field value if set, zero value otherwise.
func (o *NacPortal) GetTos() string {
	if o == nil || IsNil(o.Tos) {
		var ret string
		return ret
	}
	return *o.Tos
}

// GetTosOk returns a tuple with the Tos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NacPortal) GetTosOk() (*string, bool) {
	if o == nil || IsNil(o.Tos) {
		return nil, false
	}
	return o.Tos, true
}

// HasTos returns a boolean if a field has been set.
func (o *NacPortal) HasTos() bool {
	if o != nil && !IsNil(o.Tos) {
		return true
	}

	return false
}

// SetTos gets a reference to the given string and assigns it to the Tos field.
func (o *NacPortal) SetTos(v string) {
	o.Tos = &v
}

func (o NacPortal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NacPortal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessType) {
		toSerialize["access_type"] = o.AccessType
	}
	if !IsNil(o.BgImageUrl) {
		toSerialize["bg_image_url"] = o.BgImageUrl
	}
	if !IsNil(o.CertExpireTime) {
		toSerialize["cert_expire_time"] = o.CertExpireTime
	}
	if !IsNil(o.EnableTelemetry) {
		toSerialize["enable_telemetry"] = o.EnableTelemetry
	}
	if !IsNil(o.ExpiryNotificationTime) {
		toSerialize["expiry_notification_time"] = o.ExpiryNotificationTime
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NotifyExpiry) {
		toSerialize["notify_expiry"] = o.NotifyExpiry
	}
	if !IsNil(o.Ssid) {
		toSerialize["ssid"] = o.Ssid
	}
	if !IsNil(o.Sso) {
		toSerialize["sso"] = o.Sso
	}
	if !IsNil(o.TemplateUrl) {
		toSerialize["template_url"] = o.TemplateUrl
	}
	if !IsNil(o.ThumbnailUrl) {
		toSerialize["thumbnail_url"] = o.ThumbnailUrl
	}
	if !IsNil(o.Tos) {
		toSerialize["tos"] = o.Tos
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NacPortal) UnmarshalJSON(data []byte) (err error) {
	varNacPortal := _NacPortal{}

	err = json.Unmarshal(data, &varNacPortal)

	if err != nil {
		return err
	}

	*o = NacPortal(varNacPortal)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "access_type")
		delete(additionalProperties, "bg_image_url")
		delete(additionalProperties, "cert_expire_time")
		delete(additionalProperties, "enable_telemetry")
		delete(additionalProperties, "expiry_notification_time")
		delete(additionalProperties, "name")
		delete(additionalProperties, "notify_expiry")
		delete(additionalProperties, "ssid")
		delete(additionalProperties, "sso")
		delete(additionalProperties, "template_url")
		delete(additionalProperties, "thumbnail_url")
		delete(additionalProperties, "tos")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNacPortal struct {
	value *NacPortal
	isSet bool
}

func (v NullableNacPortal) Get() *NacPortal {
	return v.value
}

func (v *NullableNacPortal) Set(val *NacPortal) {
	v.value = val
	v.isSet = true
}

func (v NullableNacPortal) IsSet() bool {
	return v.isSet
}

func (v *NullableNacPortal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNacPortal(val *NacPortal) *NullableNacPortal {
	return &NullableNacPortal{value: val, isSet: true}
}

func (v NullableNacPortal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNacPortal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


