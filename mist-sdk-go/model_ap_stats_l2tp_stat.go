/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ApStatsL2tpStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApStatsL2tpStat{}

// ApStatsL2tpStat struct for ApStatsL2tpStat
type ApStatsL2tpStat struct {
	// list of sessions
	Sessions []ApStatsL2tpStatSession `json:"sessions,omitempty"`
	State *L2tpState `json:"state,omitempty"`
	// uptime
	Uptime *int32 `json:"uptime,omitempty"`
	// WxlanTunnel ID
	WxtunnelId *string `json:"wxtunnel_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApStatsL2tpStat ApStatsL2tpStat

// NewApStatsL2tpStat instantiates a new ApStatsL2tpStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApStatsL2tpStat() *ApStatsL2tpStat {
	this := ApStatsL2tpStat{}
	return &this
}

// NewApStatsL2tpStatWithDefaults instantiates a new ApStatsL2tpStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApStatsL2tpStatWithDefaults() *ApStatsL2tpStat {
	this := ApStatsL2tpStat{}
	return &this
}

// GetSessions returns the Sessions field value if set, zero value otherwise.
func (o *ApStatsL2tpStat) GetSessions() []ApStatsL2tpStatSession {
	if o == nil || IsNil(o.Sessions) {
		var ret []ApStatsL2tpStatSession
		return ret
	}
	return o.Sessions
}

// GetSessionsOk returns a tuple with the Sessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsL2tpStat) GetSessionsOk() ([]ApStatsL2tpStatSession, bool) {
	if o == nil || IsNil(o.Sessions) {
		return nil, false
	}
	return o.Sessions, true
}

// HasSessions returns a boolean if a field has been set.
func (o *ApStatsL2tpStat) HasSessions() bool {
	if o != nil && !IsNil(o.Sessions) {
		return true
	}

	return false
}

// SetSessions gets a reference to the given []ApStatsL2tpStatSession and assigns it to the Sessions field.
func (o *ApStatsL2tpStat) SetSessions(v []ApStatsL2tpStatSession) {
	o.Sessions = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ApStatsL2tpStat) GetState() L2tpState {
	if o == nil || IsNil(o.State) {
		var ret L2tpState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsL2tpStat) GetStateOk() (*L2tpState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ApStatsL2tpStat) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given L2tpState and assigns it to the State field.
func (o *ApStatsL2tpStat) SetState(v L2tpState) {
	o.State = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *ApStatsL2tpStat) GetUptime() int32 {
	if o == nil || IsNil(o.Uptime) {
		var ret int32
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsL2tpStat) GetUptimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Uptime) {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *ApStatsL2tpStat) HasUptime() bool {
	if o != nil && !IsNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given int32 and assigns it to the Uptime field.
func (o *ApStatsL2tpStat) SetUptime(v int32) {
	o.Uptime = &v
}

// GetWxtunnelId returns the WxtunnelId field value if set, zero value otherwise.
func (o *ApStatsL2tpStat) GetWxtunnelId() string {
	if o == nil || IsNil(o.WxtunnelId) {
		var ret string
		return ret
	}
	return *o.WxtunnelId
}

// GetWxtunnelIdOk returns a tuple with the WxtunnelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApStatsL2tpStat) GetWxtunnelIdOk() (*string, bool) {
	if o == nil || IsNil(o.WxtunnelId) {
		return nil, false
	}
	return o.WxtunnelId, true
}

// HasWxtunnelId returns a boolean if a field has been set.
func (o *ApStatsL2tpStat) HasWxtunnelId() bool {
	if o != nil && !IsNil(o.WxtunnelId) {
		return true
	}

	return false
}

// SetWxtunnelId gets a reference to the given string and assigns it to the WxtunnelId field.
func (o *ApStatsL2tpStat) SetWxtunnelId(v string) {
	o.WxtunnelId = &v
}

func (o ApStatsL2tpStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApStatsL2tpStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sessions) {
		toSerialize["sessions"] = o.Sessions
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Uptime) {
		toSerialize["uptime"] = o.Uptime
	}
	if !IsNil(o.WxtunnelId) {
		toSerialize["wxtunnel_id"] = o.WxtunnelId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApStatsL2tpStat) UnmarshalJSON(data []byte) (err error) {
	varApStatsL2tpStat := _ApStatsL2tpStat{}

	err = json.Unmarshal(data, &varApStatsL2tpStat)

	if err != nil {
		return err
	}

	*o = ApStatsL2tpStat(varApStatsL2tpStat)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "sessions")
		delete(additionalProperties, "state")
		delete(additionalProperties, "uptime")
		delete(additionalProperties, "wxtunnel_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApStatsL2tpStat struct {
	value *ApStatsL2tpStat
	isSet bool
}

func (v NullableApStatsL2tpStat) Get() *ApStatsL2tpStat {
	return v.value
}

func (v *NullableApStatsL2tpStat) Set(val *ApStatsL2tpStat) {
	v.value = val
	v.isSet = true
}

func (v NullableApStatsL2tpStat) IsSet() bool {
	return v.isSet
}

func (v *NullableApStatsL2tpStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApStatsL2tpStat(val *ApStatsL2tpStat) *NullableApStatsL2tpStat {
	return &NullableApStatsL2tpStat{value: val, isSet: true}
}

func (v NullableApStatsL2tpStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApStatsL2tpStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


