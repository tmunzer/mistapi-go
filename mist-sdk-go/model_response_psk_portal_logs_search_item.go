/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ResponsePskPortalLogsSearchItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsePskPortalLogsSearchItem{}

// ResponsePskPortalLogsSearchItem struct for ResponsePskPortalLogsSearchItem
type ResponsePskPortalLogsSearchItem struct {
	Id *string `json:"id,omitempty"`
	Message *string `json:"message,omitempty"`
	NameId *string `json:"name_id,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	PskId *string `json:"psk_id,omitempty"`
	PskName *string `json:"psk_name,omitempty"`
	PskportalId *string `json:"pskportal_id,omitempty"`
	Timestamp *float32 `json:"timestamp,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResponsePskPortalLogsSearchItem ResponsePskPortalLogsSearchItem

// NewResponsePskPortalLogsSearchItem instantiates a new ResponsePskPortalLogsSearchItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsePskPortalLogsSearchItem() *ResponsePskPortalLogsSearchItem {
	this := ResponsePskPortalLogsSearchItem{}
	return &this
}

// NewResponsePskPortalLogsSearchItemWithDefaults instantiates a new ResponsePskPortalLogsSearchItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsePskPortalLogsSearchItemWithDefaults() *ResponsePskPortalLogsSearchItem {
	this := ResponsePskPortalLogsSearchItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponsePskPortalLogsSearchItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePskPortalLogsSearchItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponsePskPortalLogsSearchItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ResponsePskPortalLogsSearchItem) SetId(v string) {
	o.Id = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ResponsePskPortalLogsSearchItem) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePskPortalLogsSearchItem) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ResponsePskPortalLogsSearchItem) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ResponsePskPortalLogsSearchItem) SetMessage(v string) {
	o.Message = &v
}

// GetNameId returns the NameId field value if set, zero value otherwise.
func (o *ResponsePskPortalLogsSearchItem) GetNameId() string {
	if o == nil || IsNil(o.NameId) {
		var ret string
		return ret
	}
	return *o.NameId
}

// GetNameIdOk returns a tuple with the NameId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePskPortalLogsSearchItem) GetNameIdOk() (*string, bool) {
	if o == nil || IsNil(o.NameId) {
		return nil, false
	}
	return o.NameId, true
}

// HasNameId returns a boolean if a field has been set.
func (o *ResponsePskPortalLogsSearchItem) HasNameId() bool {
	if o != nil && !IsNil(o.NameId) {
		return true
	}

	return false
}

// SetNameId gets a reference to the given string and assigns it to the NameId field.
func (o *ResponsePskPortalLogsSearchItem) SetNameId(v string) {
	o.NameId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ResponsePskPortalLogsSearchItem) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePskPortalLogsSearchItem) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ResponsePskPortalLogsSearchItem) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *ResponsePskPortalLogsSearchItem) SetOrgId(v string) {
	o.OrgId = &v
}

// GetPskId returns the PskId field value if set, zero value otherwise.
func (o *ResponsePskPortalLogsSearchItem) GetPskId() string {
	if o == nil || IsNil(o.PskId) {
		var ret string
		return ret
	}
	return *o.PskId
}

// GetPskIdOk returns a tuple with the PskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePskPortalLogsSearchItem) GetPskIdOk() (*string, bool) {
	if o == nil || IsNil(o.PskId) {
		return nil, false
	}
	return o.PskId, true
}

// HasPskId returns a boolean if a field has been set.
func (o *ResponsePskPortalLogsSearchItem) HasPskId() bool {
	if o != nil && !IsNil(o.PskId) {
		return true
	}

	return false
}

// SetPskId gets a reference to the given string and assigns it to the PskId field.
func (o *ResponsePskPortalLogsSearchItem) SetPskId(v string) {
	o.PskId = &v
}

// GetPskName returns the PskName field value if set, zero value otherwise.
func (o *ResponsePskPortalLogsSearchItem) GetPskName() string {
	if o == nil || IsNil(o.PskName) {
		var ret string
		return ret
	}
	return *o.PskName
}

// GetPskNameOk returns a tuple with the PskName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePskPortalLogsSearchItem) GetPskNameOk() (*string, bool) {
	if o == nil || IsNil(o.PskName) {
		return nil, false
	}
	return o.PskName, true
}

// HasPskName returns a boolean if a field has been set.
func (o *ResponsePskPortalLogsSearchItem) HasPskName() bool {
	if o != nil && !IsNil(o.PskName) {
		return true
	}

	return false
}

// SetPskName gets a reference to the given string and assigns it to the PskName field.
func (o *ResponsePskPortalLogsSearchItem) SetPskName(v string) {
	o.PskName = &v
}

// GetPskportalId returns the PskportalId field value if set, zero value otherwise.
func (o *ResponsePskPortalLogsSearchItem) GetPskportalId() string {
	if o == nil || IsNil(o.PskportalId) {
		var ret string
		return ret
	}
	return *o.PskportalId
}

// GetPskportalIdOk returns a tuple with the PskportalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePskPortalLogsSearchItem) GetPskportalIdOk() (*string, bool) {
	if o == nil || IsNil(o.PskportalId) {
		return nil, false
	}
	return o.PskportalId, true
}

// HasPskportalId returns a boolean if a field has been set.
func (o *ResponsePskPortalLogsSearchItem) HasPskportalId() bool {
	if o != nil && !IsNil(o.PskportalId) {
		return true
	}

	return false
}

// SetPskportalId gets a reference to the given string and assigns it to the PskportalId field.
func (o *ResponsePskPortalLogsSearchItem) SetPskportalId(v string) {
	o.PskportalId = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ResponsePskPortalLogsSearchItem) GetTimestamp() float32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret float32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePskPortalLogsSearchItem) GetTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ResponsePskPortalLogsSearchItem) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given float32 and assigns it to the Timestamp field.
func (o *ResponsePskPortalLogsSearchItem) SetTimestamp(v float32) {
	o.Timestamp = &v
}

func (o ResponsePskPortalLogsSearchItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsePskPortalLogsSearchItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.NameId) {
		toSerialize["name_id"] = o.NameId
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.PskId) {
		toSerialize["psk_id"] = o.PskId
	}
	if !IsNil(o.PskName) {
		toSerialize["psk_name"] = o.PskName
	}
	if !IsNil(o.PskportalId) {
		toSerialize["pskportal_id"] = o.PskportalId
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResponsePskPortalLogsSearchItem) UnmarshalJSON(data []byte) (err error) {
	varResponsePskPortalLogsSearchItem := _ResponsePskPortalLogsSearchItem{}

	err = json.Unmarshal(data, &varResponsePskPortalLogsSearchItem)

	if err != nil {
		return err
	}

	*o = ResponsePskPortalLogsSearchItem(varResponsePskPortalLogsSearchItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "message")
		delete(additionalProperties, "name_id")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "psk_id")
		delete(additionalProperties, "psk_name")
		delete(additionalProperties, "pskportal_id")
		delete(additionalProperties, "timestamp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResponsePskPortalLogsSearchItem struct {
	value *ResponsePskPortalLogsSearchItem
	isSet bool
}

func (v NullableResponsePskPortalLogsSearchItem) Get() *ResponsePskPortalLogsSearchItem {
	return v.value
}

func (v *NullableResponsePskPortalLogsSearchItem) Set(val *ResponsePskPortalLogsSearchItem) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsePskPortalLogsSearchItem) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsePskPortalLogsSearchItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsePskPortalLogsSearchItem(val *ResponsePskPortalLogsSearchItem) *NullableResponsePskPortalLogsSearchItem {
	return &NullableResponsePskPortalLogsSearchItem{value: val, isSet: true}
}

func (v NullableResponsePskPortalLogsSearchItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsePskPortalLogsSearchItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


