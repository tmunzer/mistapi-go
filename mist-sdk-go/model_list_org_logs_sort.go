/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// ListOrgLogsSort the model 'ListOrgLogsSort'
type ListOrgLogsSort string

// List of list_org_logs_sort
const (
	LISTORGLOGSSORT_EMPTY ListOrgLogsSort = ""
	LISTORGLOGSSORT_TIMESTAMP ListOrgLogsSort = "timestamp"
	LISTORGLOGSSORT_TIMESTAMP2 ListOrgLogsSort = "-timestamp"
	LISTORGLOGSSORT_SITE_ID ListOrgLogsSort = "site_id"
	LISTORGLOGSSORT_ADMIN_ID ListOrgLogsSort = "admin_id"
)

// All allowed values of ListOrgLogsSort enum
var AllowedListOrgLogsSortEnumValues = []ListOrgLogsSort{
	"",
	"timestamp",
	"-timestamp",
	"site_id",
	"admin_id",
}

func (v *ListOrgLogsSort) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ListOrgLogsSort(value)
	for _, existing := range AllowedListOrgLogsSortEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ListOrgLogsSort", value)
}

// NewListOrgLogsSortFromValue returns a pointer to a valid ListOrgLogsSort
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewListOrgLogsSortFromValue(v string) (*ListOrgLogsSort, error) {
	ev := ListOrgLogsSort(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ListOrgLogsSort: valid values are %v", v, AllowedListOrgLogsSortEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ListOrgLogsSort) IsValid() bool {
	for _, existing := range AllowedListOrgLogsSortEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to list_org_logs_sort value
func (v ListOrgLogsSort) Ptr() *ListOrgLogsSort {
	return &v
}

type NullableListOrgLogsSort struct {
	value *ListOrgLogsSort
	isSet bool
}

func (v NullableListOrgLogsSort) Get() *ListOrgLogsSort {
	return v.value
}

func (v *NullableListOrgLogsSort) Set(val *ListOrgLogsSort) {
	v.value = val
	v.isSet = true
}

func (v NullableListOrgLogsSort) IsSet() bool {
	return v.isSet
}

func (v *NullableListOrgLogsSort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOrgLogsSort(val *ListOrgLogsSort) *NullableListOrgLogsSort {
	return &NullableListOrgLogsSort{value: val, isSet: true}
}

func (v NullableListOrgLogsSort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOrgLogsSort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

