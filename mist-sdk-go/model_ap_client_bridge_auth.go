/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ApClientBridgeAuth type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApClientBridgeAuth{}

// ApClientBridgeAuth struct for ApClientBridgeAuth
type ApClientBridgeAuth struct {
	Psk *string `json:"psk,omitempty"`
	Type *ApClientBridgeAuthType `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApClientBridgeAuth ApClientBridgeAuth

// NewApClientBridgeAuth instantiates a new ApClientBridgeAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApClientBridgeAuth() *ApClientBridgeAuth {
	this := ApClientBridgeAuth{}
	var type_ ApClientBridgeAuthType = APCLIENTBRIDGEAUTHTYPE_PSK
	this.Type = &type_
	return &this
}

// NewApClientBridgeAuthWithDefaults instantiates a new ApClientBridgeAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApClientBridgeAuthWithDefaults() *ApClientBridgeAuth {
	this := ApClientBridgeAuth{}
	var type_ ApClientBridgeAuthType = APCLIENTBRIDGEAUTHTYPE_PSK
	this.Type = &type_
	return &this
}

// GetPsk returns the Psk field value if set, zero value otherwise.
func (o *ApClientBridgeAuth) GetPsk() string {
	if o == nil || IsNil(o.Psk) {
		var ret string
		return ret
	}
	return *o.Psk
}

// GetPskOk returns a tuple with the Psk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApClientBridgeAuth) GetPskOk() (*string, bool) {
	if o == nil || IsNil(o.Psk) {
		return nil, false
	}
	return o.Psk, true
}

// HasPsk returns a boolean if a field has been set.
func (o *ApClientBridgeAuth) HasPsk() bool {
	if o != nil && !IsNil(o.Psk) {
		return true
	}

	return false
}

// SetPsk gets a reference to the given string and assigns it to the Psk field.
func (o *ApClientBridgeAuth) SetPsk(v string) {
	o.Psk = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApClientBridgeAuth) GetType() ApClientBridgeAuthType {
	if o == nil || IsNil(o.Type) {
		var ret ApClientBridgeAuthType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApClientBridgeAuth) GetTypeOk() (*ApClientBridgeAuthType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApClientBridgeAuth) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ApClientBridgeAuthType and assigns it to the Type field.
func (o *ApClientBridgeAuth) SetType(v ApClientBridgeAuthType) {
	o.Type = &v
}

func (o ApClientBridgeAuth) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApClientBridgeAuth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Psk) {
		toSerialize["psk"] = o.Psk
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApClientBridgeAuth) UnmarshalJSON(data []byte) (err error) {
	varApClientBridgeAuth := _ApClientBridgeAuth{}

	err = json.Unmarshal(data, &varApClientBridgeAuth)

	if err != nil {
		return err
	}

	*o = ApClientBridgeAuth(varApClientBridgeAuth)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "psk")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApClientBridgeAuth struct {
	value *ApClientBridgeAuth
	isSet bool
}

func (v NullableApClientBridgeAuth) Get() *ApClientBridgeAuth {
	return v.value
}

func (v *NullableApClientBridgeAuth) Set(val *ApClientBridgeAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableApClientBridgeAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableApClientBridgeAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApClientBridgeAuth(val *ApClientBridgeAuth) *NullableApClientBridgeAuth {
	return &NullableApClientBridgeAuth{value: val, isSet: true}
}

func (v NullableApClientBridgeAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApClientBridgeAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


