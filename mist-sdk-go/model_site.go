/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the Site type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Site{}

// Site Site
type Site struct {
	// full address of the site
	Address *string `json:"address,omitempty"`
	// Alarm Template ID, this takes precedence over the Org-level alarmtemplate_id
	AlarmtemplateId NullableString `json:"alarmtemplate_id,omitempty"`
	// AP Template ID, used by APs
	AptemplateId *string `json:"aptemplate_id,omitempty"`
	// country code for the site (for AP config generation), in two-character
	CountryCode *string `json:"country_code,omitempty"`
	CreatedTime *float32 `json:"created_time,omitempty"`
	// Gateway Template ID, used by gateways
	GatewaytemplateId NullableString `json:"gatewaytemplate_id,omitempty"`
	Id *string `json:"id,omitempty"`
	Latlng *LatLng `json:"latlng,omitempty"`
	ModifiedTime *float32 `json:"modified_time,omitempty"`
	Name string `json:"name"`
	// Network Template ID, this takes precedence over Site Settings
	NetworktemplateId NullableString `json:"networktemplate_id,omitempty"`
	// optional, any notes about the site
	Notes *string `json:"notes,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	// RF Template ID, this takes precedence over Site Settings
	RftemplateId NullableString `json:"rftemplate_id,omitempty"`
	// SecPolicy ID
	SecpolicyId NullableString `json:"secpolicy_id,omitempty"`
	// sitegroups this site belongs to
	SitegroupIds []string `json:"sitegroup_ids,omitempty"`
	// Site Template ID
	SitetemplateId *string `json:"sitetemplate_id,omitempty"`
	// Timezone the site is at
	Timezone *string `json:"timezone,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Site Site

// NewSite instantiates a new Site object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSite(name string) *Site {
	this := Site{}
	this.Name = name
	return &this
}

// NewSiteWithDefaults instantiates a new Site object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteWithDefaults() *Site {
	this := Site{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *Site) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *Site) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *Site) SetAddress(v string) {
	o.Address = &v
}

// GetAlarmtemplateId returns the AlarmtemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Site) GetAlarmtemplateId() string {
	if o == nil || IsNil(o.AlarmtemplateId.Get()) {
		var ret string
		return ret
	}
	return *o.AlarmtemplateId.Get()
}

// GetAlarmtemplateIdOk returns a tuple with the AlarmtemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Site) GetAlarmtemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlarmtemplateId.Get(), o.AlarmtemplateId.IsSet()
}

// HasAlarmtemplateId returns a boolean if a field has been set.
func (o *Site) HasAlarmtemplateId() bool {
	if o != nil && o.AlarmtemplateId.IsSet() {
		return true
	}

	return false
}

// SetAlarmtemplateId gets a reference to the given NullableString and assigns it to the AlarmtemplateId field.
func (o *Site) SetAlarmtemplateId(v string) {
	o.AlarmtemplateId.Set(&v)
}
// SetAlarmtemplateIdNil sets the value for AlarmtemplateId to be an explicit nil
func (o *Site) SetAlarmtemplateIdNil() {
	o.AlarmtemplateId.Set(nil)
}

// UnsetAlarmtemplateId ensures that no value is present for AlarmtemplateId, not even an explicit nil
func (o *Site) UnsetAlarmtemplateId() {
	o.AlarmtemplateId.Unset()
}

// GetAptemplateId returns the AptemplateId field value if set, zero value otherwise.
func (o *Site) GetAptemplateId() string {
	if o == nil || IsNil(o.AptemplateId) {
		var ret string
		return ret
	}
	return *o.AptemplateId
}

// GetAptemplateIdOk returns a tuple with the AptemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetAptemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.AptemplateId) {
		return nil, false
	}
	return o.AptemplateId, true
}

// HasAptemplateId returns a boolean if a field has been set.
func (o *Site) HasAptemplateId() bool {
	if o != nil && !IsNil(o.AptemplateId) {
		return true
	}

	return false
}

// SetAptemplateId gets a reference to the given string and assigns it to the AptemplateId field.
func (o *Site) SetAptemplateId(v string) {
	o.AptemplateId = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *Site) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *Site) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *Site) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *Site) GetCreatedTime() float32 {
	if o == nil || IsNil(o.CreatedTime) {
		var ret float32
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetCreatedTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *Site) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given float32 and assigns it to the CreatedTime field.
func (o *Site) SetCreatedTime(v float32) {
	o.CreatedTime = &v
}

// GetGatewaytemplateId returns the GatewaytemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Site) GetGatewaytemplateId() string {
	if o == nil || IsNil(o.GatewaytemplateId.Get()) {
		var ret string
		return ret
	}
	return *o.GatewaytemplateId.Get()
}

// GetGatewaytemplateIdOk returns a tuple with the GatewaytemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Site) GetGatewaytemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GatewaytemplateId.Get(), o.GatewaytemplateId.IsSet()
}

// HasGatewaytemplateId returns a boolean if a field has been set.
func (o *Site) HasGatewaytemplateId() bool {
	if o != nil && o.GatewaytemplateId.IsSet() {
		return true
	}

	return false
}

// SetGatewaytemplateId gets a reference to the given NullableString and assigns it to the GatewaytemplateId field.
func (o *Site) SetGatewaytemplateId(v string) {
	o.GatewaytemplateId.Set(&v)
}
// SetGatewaytemplateIdNil sets the value for GatewaytemplateId to be an explicit nil
func (o *Site) SetGatewaytemplateIdNil() {
	o.GatewaytemplateId.Set(nil)
}

// UnsetGatewaytemplateId ensures that no value is present for GatewaytemplateId, not even an explicit nil
func (o *Site) UnsetGatewaytemplateId() {
	o.GatewaytemplateId.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Site) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Site) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Site) SetId(v string) {
	o.Id = &v
}

// GetLatlng returns the Latlng field value if set, zero value otherwise.
func (o *Site) GetLatlng() LatLng {
	if o == nil || IsNil(o.Latlng) {
		var ret LatLng
		return ret
	}
	return *o.Latlng
}

// GetLatlngOk returns a tuple with the Latlng field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetLatlngOk() (*LatLng, bool) {
	if o == nil || IsNil(o.Latlng) {
		return nil, false
	}
	return o.Latlng, true
}

// HasLatlng returns a boolean if a field has been set.
func (o *Site) HasLatlng() bool {
	if o != nil && !IsNil(o.Latlng) {
		return true
	}

	return false
}

// SetLatlng gets a reference to the given LatLng and assigns it to the Latlng field.
func (o *Site) SetLatlng(v LatLng) {
	o.Latlng = &v
}

// GetModifiedTime returns the ModifiedTime field value if set, zero value otherwise.
func (o *Site) GetModifiedTime() float32 {
	if o == nil || IsNil(o.ModifiedTime) {
		var ret float32
		return ret
	}
	return *o.ModifiedTime
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetModifiedTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.ModifiedTime) {
		return nil, false
	}
	return o.ModifiedTime, true
}

// HasModifiedTime returns a boolean if a field has been set.
func (o *Site) HasModifiedTime() bool {
	if o != nil && !IsNil(o.ModifiedTime) {
		return true
	}

	return false
}

// SetModifiedTime gets a reference to the given float32 and assigns it to the ModifiedTime field.
func (o *Site) SetModifiedTime(v float32) {
	o.ModifiedTime = &v
}

// GetName returns the Name field value
func (o *Site) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Site) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Site) SetName(v string) {
	o.Name = v
}

// GetNetworktemplateId returns the NetworktemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Site) GetNetworktemplateId() string {
	if o == nil || IsNil(o.NetworktemplateId.Get()) {
		var ret string
		return ret
	}
	return *o.NetworktemplateId.Get()
}

// GetNetworktemplateIdOk returns a tuple with the NetworktemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Site) GetNetworktemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetworktemplateId.Get(), o.NetworktemplateId.IsSet()
}

// HasNetworktemplateId returns a boolean if a field has been set.
func (o *Site) HasNetworktemplateId() bool {
	if o != nil && o.NetworktemplateId.IsSet() {
		return true
	}

	return false
}

// SetNetworktemplateId gets a reference to the given NullableString and assigns it to the NetworktemplateId field.
func (o *Site) SetNetworktemplateId(v string) {
	o.NetworktemplateId.Set(&v)
}
// SetNetworktemplateIdNil sets the value for NetworktemplateId to be an explicit nil
func (o *Site) SetNetworktemplateIdNil() {
	o.NetworktemplateId.Set(nil)
}

// UnsetNetworktemplateId ensures that no value is present for NetworktemplateId, not even an explicit nil
func (o *Site) UnsetNetworktemplateId() {
	o.NetworktemplateId.Unset()
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *Site) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *Site) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *Site) SetNotes(v string) {
	o.Notes = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *Site) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *Site) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *Site) SetOrgId(v string) {
	o.OrgId = &v
}

// GetRftemplateId returns the RftemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Site) GetRftemplateId() string {
	if o == nil || IsNil(o.RftemplateId.Get()) {
		var ret string
		return ret
	}
	return *o.RftemplateId.Get()
}

// GetRftemplateIdOk returns a tuple with the RftemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Site) GetRftemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RftemplateId.Get(), o.RftemplateId.IsSet()
}

// HasRftemplateId returns a boolean if a field has been set.
func (o *Site) HasRftemplateId() bool {
	if o != nil && o.RftemplateId.IsSet() {
		return true
	}

	return false
}

// SetRftemplateId gets a reference to the given NullableString and assigns it to the RftemplateId field.
func (o *Site) SetRftemplateId(v string) {
	o.RftemplateId.Set(&v)
}
// SetRftemplateIdNil sets the value for RftemplateId to be an explicit nil
func (o *Site) SetRftemplateIdNil() {
	o.RftemplateId.Set(nil)
}

// UnsetRftemplateId ensures that no value is present for RftemplateId, not even an explicit nil
func (o *Site) UnsetRftemplateId() {
	o.RftemplateId.Unset()
}

// GetSecpolicyId returns the SecpolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Site) GetSecpolicyId() string {
	if o == nil || IsNil(o.SecpolicyId.Get()) {
		var ret string
		return ret
	}
	return *o.SecpolicyId.Get()
}

// GetSecpolicyIdOk returns a tuple with the SecpolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Site) GetSecpolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecpolicyId.Get(), o.SecpolicyId.IsSet()
}

// HasSecpolicyId returns a boolean if a field has been set.
func (o *Site) HasSecpolicyId() bool {
	if o != nil && o.SecpolicyId.IsSet() {
		return true
	}

	return false
}

// SetSecpolicyId gets a reference to the given NullableString and assigns it to the SecpolicyId field.
func (o *Site) SetSecpolicyId(v string) {
	o.SecpolicyId.Set(&v)
}
// SetSecpolicyIdNil sets the value for SecpolicyId to be an explicit nil
func (o *Site) SetSecpolicyIdNil() {
	o.SecpolicyId.Set(nil)
}

// UnsetSecpolicyId ensures that no value is present for SecpolicyId, not even an explicit nil
func (o *Site) UnsetSecpolicyId() {
	o.SecpolicyId.Unset()
}

// GetSitegroupIds returns the SitegroupIds field value if set, zero value otherwise.
func (o *Site) GetSitegroupIds() []string {
	if o == nil || IsNil(o.SitegroupIds) {
		var ret []string
		return ret
	}
	return o.SitegroupIds
}

// GetSitegroupIdsOk returns a tuple with the SitegroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetSitegroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SitegroupIds) {
		return nil, false
	}
	return o.SitegroupIds, true
}

// HasSitegroupIds returns a boolean if a field has been set.
func (o *Site) HasSitegroupIds() bool {
	if o != nil && !IsNil(o.SitegroupIds) {
		return true
	}

	return false
}

// SetSitegroupIds gets a reference to the given []string and assigns it to the SitegroupIds field.
func (o *Site) SetSitegroupIds(v []string) {
	o.SitegroupIds = v
}

// GetSitetemplateId returns the SitetemplateId field value if set, zero value otherwise.
func (o *Site) GetSitetemplateId() string {
	if o == nil || IsNil(o.SitetemplateId) {
		var ret string
		return ret
	}
	return *o.SitetemplateId
}

// GetSitetemplateIdOk returns a tuple with the SitetemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetSitetemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.SitetemplateId) {
		return nil, false
	}
	return o.SitetemplateId, true
}

// HasSitetemplateId returns a boolean if a field has been set.
func (o *Site) HasSitetemplateId() bool {
	if o != nil && !IsNil(o.SitetemplateId) {
		return true
	}

	return false
}

// SetSitetemplateId gets a reference to the given string and assigns it to the SitetemplateId field.
func (o *Site) SetSitetemplateId(v string) {
	o.SitetemplateId = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *Site) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *Site) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *Site) SetTimezone(v string) {
	o.Timezone = &v
}

func (o Site) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Site) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if o.AlarmtemplateId.IsSet() {
		toSerialize["alarmtemplate_id"] = o.AlarmtemplateId.Get()
	}
	if !IsNil(o.AptemplateId) {
		toSerialize["aptemplate_id"] = o.AptemplateId
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if o.GatewaytemplateId.IsSet() {
		toSerialize["gatewaytemplate_id"] = o.GatewaytemplateId.Get()
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Latlng) {
		toSerialize["latlng"] = o.Latlng
	}
	if !IsNil(o.ModifiedTime) {
		toSerialize["modified_time"] = o.ModifiedTime
	}
	toSerialize["name"] = o.Name
	if o.NetworktemplateId.IsSet() {
		toSerialize["networktemplate_id"] = o.NetworktemplateId.Get()
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if o.RftemplateId.IsSet() {
		toSerialize["rftemplate_id"] = o.RftemplateId.Get()
	}
	if o.SecpolicyId.IsSet() {
		toSerialize["secpolicy_id"] = o.SecpolicyId.Get()
	}
	if !IsNil(o.SitegroupIds) {
		toSerialize["sitegroup_ids"] = o.SitegroupIds
	}
	if !IsNil(o.SitetemplateId) {
		toSerialize["sitetemplate_id"] = o.SitetemplateId
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Site) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSite := _Site{}

	err = json.Unmarshal(data, &varSite)

	if err != nil {
		return err
	}

	*o = Site(varSite)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "alarmtemplate_id")
		delete(additionalProperties, "aptemplate_id")
		delete(additionalProperties, "country_code")
		delete(additionalProperties, "created_time")
		delete(additionalProperties, "gatewaytemplate_id")
		delete(additionalProperties, "id")
		delete(additionalProperties, "latlng")
		delete(additionalProperties, "modified_time")
		delete(additionalProperties, "name")
		delete(additionalProperties, "networktemplate_id")
		delete(additionalProperties, "notes")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "rftemplate_id")
		delete(additionalProperties, "secpolicy_id")
		delete(additionalProperties, "sitegroup_ids")
		delete(additionalProperties, "sitetemplate_id")
		delete(additionalProperties, "timezone")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSite struct {
	value *Site
	isSet bool
}

func (v NullableSite) Get() *Site {
	return v.value
}

func (v *NullableSite) Set(val *Site) {
	v.value = val
	v.isSet = true
}

func (v NullableSite) IsSet() bool {
	return v.isSet
}

func (v *NullableSite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSite(val *Site) *NullableSite {
	return &NullableSite{value: val, isSet: true}
}

func (v NullableSite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


