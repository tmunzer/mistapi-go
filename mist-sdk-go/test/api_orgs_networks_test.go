/*
Mist API

Testing OrgsNetworksAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package mistsdkgo

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/tmunzer/mistsdkgo"
)

func Test_mistsdkgo_OrgsNetworksAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test OrgsNetworksAPIService CreateOrgNetwork", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string

		resp, httpRes, err := apiClient.OrgsNetworksAPI.CreateOrgNetwork(context.Background(), orgId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrgsNetworksAPIService DeleteOrgNetwork", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var networkId string

		httpRes, err := apiClient.OrgsNetworksAPI.DeleteOrgNetwork(context.Background(), orgId, networkId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrgsNetworksAPIService GetOrgNetwork", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var networkId string

		resp, httpRes, err := apiClient.OrgsNetworksAPI.GetOrgNetwork(context.Background(), orgId, networkId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrgsNetworksAPIService ListOrgNetworks", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string

		resp, httpRes, err := apiClient.OrgsNetworksAPI.ListOrgNetworks(context.Background(), orgId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrgsNetworksAPIService UpdateOrgNetwork", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var networkId string

		resp, httpRes, err := apiClient.OrgsNetworksAPI.UpdateOrgNetwork(context.Background(), orgId, networkId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
