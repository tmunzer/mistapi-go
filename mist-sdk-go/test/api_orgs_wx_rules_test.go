/*
Mist API

Testing OrgsWxRulesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package mistsdkgo

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/tmunzer/mistsdkgo"
)

func Test_mistsdkgo_OrgsWxRulesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test OrgsWxRulesAPIService CreateOrgWxRule", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string

		resp, httpRes, err := apiClient.OrgsWxRulesAPI.CreateOrgWxRule(context.Background(), orgId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrgsWxRulesAPIService DeleteOrgWxRule", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var wxruleId string

		httpRes, err := apiClient.OrgsWxRulesAPI.DeleteOrgWxRule(context.Background(), orgId, wxruleId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrgsWxRulesAPIService GetOrgWxRule", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var wxruleId string

		resp, httpRes, err := apiClient.OrgsWxRulesAPI.GetOrgWxRule(context.Background(), orgId, wxruleId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrgsWxRulesAPIService GetOrgWxRulesDerived", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string

		resp, httpRes, err := apiClient.OrgsWxRulesAPI.GetOrgWxRulesDerived(context.Background(), orgId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrgsWxRulesAPIService ListOrgWxRules", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string

		resp, httpRes, err := apiClient.OrgsWxRulesAPI.ListOrgWxRules(context.Background(), orgId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrgsWxRulesAPIService UpdateOrgWxRule", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var wxruleId string

		resp, httpRes, err := apiClient.OrgsWxRulesAPI.UpdateOrgWxRule(context.Background(), orgId, wxruleId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
