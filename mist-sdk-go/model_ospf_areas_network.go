/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the OspfAreasNetwork type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OspfAreasNetwork{}

// OspfAreasNetwork struct for OspfAreasNetwork
type OspfAreasNetwork struct {
	// if `auth_type`==`md5`. Property key is the key number
	AuthKeys *map[string]string `json:"auth_keys,omitempty"`
	// if `auth_type`==`password`, the password, max length is 8
	AuthPassword *string `json:"auth_password,omitempty"`
	AuthType *OspfAreasNetworkAuthType `json:"auth_type,omitempty"`
	BfdMinimumInterval *int32 `json:"bfd_minimum_interval,omitempty"`
	DeadInterval *int32 `json:"dead_interval,omitempty"`
	ExportPolicy *string `json:"export_policy,omitempty"`
	HelloInterval *int32 `json:"hello_interval,omitempty"`
	ImportPolicy *string `json:"import_policy,omitempty"`
	InterfaceType *OspfAreasNetworkInterfaceType `json:"interface_type,omitempty"`
	Metric NullableInt32 `json:"metric,omitempty"`
	// by default, we'll re-advertise all learned OSPF routes toward overlay
	NoReadvertiseToOverlay *bool `json:"no_readvertise_to_overlay,omitempty"`
	// whether to send OSPF-Hello
	Passive *bool `json:"passive,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OspfAreasNetwork OspfAreasNetwork

// NewOspfAreasNetwork instantiates a new OspfAreasNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOspfAreasNetwork() *OspfAreasNetwork {
	this := OspfAreasNetwork{}
	var authType OspfAreasNetworkAuthType = OSPFAREASNETWORKAUTHTYPE_NONE
	this.AuthType = &authType
	var interfaceType OspfAreasNetworkInterfaceType = OSPFAREASNETWORKINTERFACETYPE_BROADCAST
	this.InterfaceType = &interfaceType
	var noReadvertiseToOverlay bool = false
	this.NoReadvertiseToOverlay = &noReadvertiseToOverlay
	var passive bool = false
	this.Passive = &passive
	return &this
}

// NewOspfAreasNetworkWithDefaults instantiates a new OspfAreasNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOspfAreasNetworkWithDefaults() *OspfAreasNetwork {
	this := OspfAreasNetwork{}
	var authType OspfAreasNetworkAuthType = OSPFAREASNETWORKAUTHTYPE_NONE
	this.AuthType = &authType
	var interfaceType OspfAreasNetworkInterfaceType = OSPFAREASNETWORKINTERFACETYPE_BROADCAST
	this.InterfaceType = &interfaceType
	var noReadvertiseToOverlay bool = false
	this.NoReadvertiseToOverlay = &noReadvertiseToOverlay
	var passive bool = false
	this.Passive = &passive
	return &this
}

// GetAuthKeys returns the AuthKeys field value if set, zero value otherwise.
func (o *OspfAreasNetwork) GetAuthKeys() map[string]string {
	if o == nil || IsNil(o.AuthKeys) {
		var ret map[string]string
		return ret
	}
	return *o.AuthKeys
}

// GetAuthKeysOk returns a tuple with the AuthKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreasNetwork) GetAuthKeysOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.AuthKeys) {
		return nil, false
	}
	return o.AuthKeys, true
}

// HasAuthKeys returns a boolean if a field has been set.
func (o *OspfAreasNetwork) HasAuthKeys() bool {
	if o != nil && !IsNil(o.AuthKeys) {
		return true
	}

	return false
}

// SetAuthKeys gets a reference to the given map[string]string and assigns it to the AuthKeys field.
func (o *OspfAreasNetwork) SetAuthKeys(v map[string]string) {
	o.AuthKeys = &v
}

// GetAuthPassword returns the AuthPassword field value if set, zero value otherwise.
func (o *OspfAreasNetwork) GetAuthPassword() string {
	if o == nil || IsNil(o.AuthPassword) {
		var ret string
		return ret
	}
	return *o.AuthPassword
}

// GetAuthPasswordOk returns a tuple with the AuthPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreasNetwork) GetAuthPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.AuthPassword) {
		return nil, false
	}
	return o.AuthPassword, true
}

// HasAuthPassword returns a boolean if a field has been set.
func (o *OspfAreasNetwork) HasAuthPassword() bool {
	if o != nil && !IsNil(o.AuthPassword) {
		return true
	}

	return false
}

// SetAuthPassword gets a reference to the given string and assigns it to the AuthPassword field.
func (o *OspfAreasNetwork) SetAuthPassword(v string) {
	o.AuthPassword = &v
}

// GetAuthType returns the AuthType field value if set, zero value otherwise.
func (o *OspfAreasNetwork) GetAuthType() OspfAreasNetworkAuthType {
	if o == nil || IsNil(o.AuthType) {
		var ret OspfAreasNetworkAuthType
		return ret
	}
	return *o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreasNetwork) GetAuthTypeOk() (*OspfAreasNetworkAuthType, bool) {
	if o == nil || IsNil(o.AuthType) {
		return nil, false
	}
	return o.AuthType, true
}

// HasAuthType returns a boolean if a field has been set.
func (o *OspfAreasNetwork) HasAuthType() bool {
	if o != nil && !IsNil(o.AuthType) {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given OspfAreasNetworkAuthType and assigns it to the AuthType field.
func (o *OspfAreasNetwork) SetAuthType(v OspfAreasNetworkAuthType) {
	o.AuthType = &v
}

// GetBfdMinimumInterval returns the BfdMinimumInterval field value if set, zero value otherwise.
func (o *OspfAreasNetwork) GetBfdMinimumInterval() int32 {
	if o == nil || IsNil(o.BfdMinimumInterval) {
		var ret int32
		return ret
	}
	return *o.BfdMinimumInterval
}

// GetBfdMinimumIntervalOk returns a tuple with the BfdMinimumInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreasNetwork) GetBfdMinimumIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.BfdMinimumInterval) {
		return nil, false
	}
	return o.BfdMinimumInterval, true
}

// HasBfdMinimumInterval returns a boolean if a field has been set.
func (o *OspfAreasNetwork) HasBfdMinimumInterval() bool {
	if o != nil && !IsNil(o.BfdMinimumInterval) {
		return true
	}

	return false
}

// SetBfdMinimumInterval gets a reference to the given int32 and assigns it to the BfdMinimumInterval field.
func (o *OspfAreasNetwork) SetBfdMinimumInterval(v int32) {
	o.BfdMinimumInterval = &v
}

// GetDeadInterval returns the DeadInterval field value if set, zero value otherwise.
func (o *OspfAreasNetwork) GetDeadInterval() int32 {
	if o == nil || IsNil(o.DeadInterval) {
		var ret int32
		return ret
	}
	return *o.DeadInterval
}

// GetDeadIntervalOk returns a tuple with the DeadInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreasNetwork) GetDeadIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.DeadInterval) {
		return nil, false
	}
	return o.DeadInterval, true
}

// HasDeadInterval returns a boolean if a field has been set.
func (o *OspfAreasNetwork) HasDeadInterval() bool {
	if o != nil && !IsNil(o.DeadInterval) {
		return true
	}

	return false
}

// SetDeadInterval gets a reference to the given int32 and assigns it to the DeadInterval field.
func (o *OspfAreasNetwork) SetDeadInterval(v int32) {
	o.DeadInterval = &v
}

// GetExportPolicy returns the ExportPolicy field value if set, zero value otherwise.
func (o *OspfAreasNetwork) GetExportPolicy() string {
	if o == nil || IsNil(o.ExportPolicy) {
		var ret string
		return ret
	}
	return *o.ExportPolicy
}

// GetExportPolicyOk returns a tuple with the ExportPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreasNetwork) GetExportPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.ExportPolicy) {
		return nil, false
	}
	return o.ExportPolicy, true
}

// HasExportPolicy returns a boolean if a field has been set.
func (o *OspfAreasNetwork) HasExportPolicy() bool {
	if o != nil && !IsNil(o.ExportPolicy) {
		return true
	}

	return false
}

// SetExportPolicy gets a reference to the given string and assigns it to the ExportPolicy field.
func (o *OspfAreasNetwork) SetExportPolicy(v string) {
	o.ExportPolicy = &v
}

// GetHelloInterval returns the HelloInterval field value if set, zero value otherwise.
func (o *OspfAreasNetwork) GetHelloInterval() int32 {
	if o == nil || IsNil(o.HelloInterval) {
		var ret int32
		return ret
	}
	return *o.HelloInterval
}

// GetHelloIntervalOk returns a tuple with the HelloInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreasNetwork) GetHelloIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.HelloInterval) {
		return nil, false
	}
	return o.HelloInterval, true
}

// HasHelloInterval returns a boolean if a field has been set.
func (o *OspfAreasNetwork) HasHelloInterval() bool {
	if o != nil && !IsNil(o.HelloInterval) {
		return true
	}

	return false
}

// SetHelloInterval gets a reference to the given int32 and assigns it to the HelloInterval field.
func (o *OspfAreasNetwork) SetHelloInterval(v int32) {
	o.HelloInterval = &v
}

// GetImportPolicy returns the ImportPolicy field value if set, zero value otherwise.
func (o *OspfAreasNetwork) GetImportPolicy() string {
	if o == nil || IsNil(o.ImportPolicy) {
		var ret string
		return ret
	}
	return *o.ImportPolicy
}

// GetImportPolicyOk returns a tuple with the ImportPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreasNetwork) GetImportPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.ImportPolicy) {
		return nil, false
	}
	return o.ImportPolicy, true
}

// HasImportPolicy returns a boolean if a field has been set.
func (o *OspfAreasNetwork) HasImportPolicy() bool {
	if o != nil && !IsNil(o.ImportPolicy) {
		return true
	}

	return false
}

// SetImportPolicy gets a reference to the given string and assigns it to the ImportPolicy field.
func (o *OspfAreasNetwork) SetImportPolicy(v string) {
	o.ImportPolicy = &v
}

// GetInterfaceType returns the InterfaceType field value if set, zero value otherwise.
func (o *OspfAreasNetwork) GetInterfaceType() OspfAreasNetworkInterfaceType {
	if o == nil || IsNil(o.InterfaceType) {
		var ret OspfAreasNetworkInterfaceType
		return ret
	}
	return *o.InterfaceType
}

// GetInterfaceTypeOk returns a tuple with the InterfaceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreasNetwork) GetInterfaceTypeOk() (*OspfAreasNetworkInterfaceType, bool) {
	if o == nil || IsNil(o.InterfaceType) {
		return nil, false
	}
	return o.InterfaceType, true
}

// HasInterfaceType returns a boolean if a field has been set.
func (o *OspfAreasNetwork) HasInterfaceType() bool {
	if o != nil && !IsNil(o.InterfaceType) {
		return true
	}

	return false
}

// SetInterfaceType gets a reference to the given OspfAreasNetworkInterfaceType and assigns it to the InterfaceType field.
func (o *OspfAreasNetwork) SetInterfaceType(v OspfAreasNetworkInterfaceType) {
	o.InterfaceType = &v
}

// GetMetric returns the Metric field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OspfAreasNetwork) GetMetric() int32 {
	if o == nil || IsNil(o.Metric.Get()) {
		var ret int32
		return ret
	}
	return *o.Metric.Get()
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OspfAreasNetwork) GetMetricOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Metric.Get(), o.Metric.IsSet()
}

// HasMetric returns a boolean if a field has been set.
func (o *OspfAreasNetwork) HasMetric() bool {
	if o != nil && o.Metric.IsSet() {
		return true
	}

	return false
}

// SetMetric gets a reference to the given NullableInt32 and assigns it to the Metric field.
func (o *OspfAreasNetwork) SetMetric(v int32) {
	o.Metric.Set(&v)
}
// SetMetricNil sets the value for Metric to be an explicit nil
func (o *OspfAreasNetwork) SetMetricNil() {
	o.Metric.Set(nil)
}

// UnsetMetric ensures that no value is present for Metric, not even an explicit nil
func (o *OspfAreasNetwork) UnsetMetric() {
	o.Metric.Unset()
}

// GetNoReadvertiseToOverlay returns the NoReadvertiseToOverlay field value if set, zero value otherwise.
func (o *OspfAreasNetwork) GetNoReadvertiseToOverlay() bool {
	if o == nil || IsNil(o.NoReadvertiseToOverlay) {
		var ret bool
		return ret
	}
	return *o.NoReadvertiseToOverlay
}

// GetNoReadvertiseToOverlayOk returns a tuple with the NoReadvertiseToOverlay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreasNetwork) GetNoReadvertiseToOverlayOk() (*bool, bool) {
	if o == nil || IsNil(o.NoReadvertiseToOverlay) {
		return nil, false
	}
	return o.NoReadvertiseToOverlay, true
}

// HasNoReadvertiseToOverlay returns a boolean if a field has been set.
func (o *OspfAreasNetwork) HasNoReadvertiseToOverlay() bool {
	if o != nil && !IsNil(o.NoReadvertiseToOverlay) {
		return true
	}

	return false
}

// SetNoReadvertiseToOverlay gets a reference to the given bool and assigns it to the NoReadvertiseToOverlay field.
func (o *OspfAreasNetwork) SetNoReadvertiseToOverlay(v bool) {
	o.NoReadvertiseToOverlay = &v
}

// GetPassive returns the Passive field value if set, zero value otherwise.
func (o *OspfAreasNetwork) GetPassive() bool {
	if o == nil || IsNil(o.Passive) {
		var ret bool
		return ret
	}
	return *o.Passive
}

// GetPassiveOk returns a tuple with the Passive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspfAreasNetwork) GetPassiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Passive) {
		return nil, false
	}
	return o.Passive, true
}

// HasPassive returns a boolean if a field has been set.
func (o *OspfAreasNetwork) HasPassive() bool {
	if o != nil && !IsNil(o.Passive) {
		return true
	}

	return false
}

// SetPassive gets a reference to the given bool and assigns it to the Passive field.
func (o *OspfAreasNetwork) SetPassive(v bool) {
	o.Passive = &v
}

func (o OspfAreasNetwork) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OspfAreasNetwork) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthKeys) {
		toSerialize["auth_keys"] = o.AuthKeys
	}
	if !IsNil(o.AuthPassword) {
		toSerialize["auth_password"] = o.AuthPassword
	}
	if !IsNil(o.AuthType) {
		toSerialize["auth_type"] = o.AuthType
	}
	if !IsNil(o.BfdMinimumInterval) {
		toSerialize["bfd_minimum_interval"] = o.BfdMinimumInterval
	}
	if !IsNil(o.DeadInterval) {
		toSerialize["dead_interval"] = o.DeadInterval
	}
	if !IsNil(o.ExportPolicy) {
		toSerialize["export_policy"] = o.ExportPolicy
	}
	if !IsNil(o.HelloInterval) {
		toSerialize["hello_interval"] = o.HelloInterval
	}
	if !IsNil(o.ImportPolicy) {
		toSerialize["import_policy"] = o.ImportPolicy
	}
	if !IsNil(o.InterfaceType) {
		toSerialize["interface_type"] = o.InterfaceType
	}
	if o.Metric.IsSet() {
		toSerialize["metric"] = o.Metric.Get()
	}
	if !IsNil(o.NoReadvertiseToOverlay) {
		toSerialize["no_readvertise_to_overlay"] = o.NoReadvertiseToOverlay
	}
	if !IsNil(o.Passive) {
		toSerialize["passive"] = o.Passive
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OspfAreasNetwork) UnmarshalJSON(data []byte) (err error) {
	varOspfAreasNetwork := _OspfAreasNetwork{}

	err = json.Unmarshal(data, &varOspfAreasNetwork)

	if err != nil {
		return err
	}

	*o = OspfAreasNetwork(varOspfAreasNetwork)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auth_keys")
		delete(additionalProperties, "auth_password")
		delete(additionalProperties, "auth_type")
		delete(additionalProperties, "bfd_minimum_interval")
		delete(additionalProperties, "dead_interval")
		delete(additionalProperties, "export_policy")
		delete(additionalProperties, "hello_interval")
		delete(additionalProperties, "import_policy")
		delete(additionalProperties, "interface_type")
		delete(additionalProperties, "metric")
		delete(additionalProperties, "no_readvertise_to_overlay")
		delete(additionalProperties, "passive")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOspfAreasNetwork struct {
	value *OspfAreasNetwork
	isSet bool
}

func (v NullableOspfAreasNetwork) Get() *OspfAreasNetwork {
	return v.value
}

func (v *NullableOspfAreasNetwork) Set(val *OspfAreasNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableOspfAreasNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableOspfAreasNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOspfAreasNetwork(val *OspfAreasNetwork) *NullableOspfAreasNetwork {
	return &NullableOspfAreasNetwork{value: val, isSet: true}
}

func (v NullableOspfAreasNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOspfAreasNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


