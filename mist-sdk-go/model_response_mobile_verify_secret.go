/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the ResponseMobileVerifySecret type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseMobileVerifySecret{}

// ResponseMobileVerifySecret struct for ResponseMobileVerifySecret
type ResponseMobileVerifySecret struct {
	Name string `json:"name"`
	OrgId string `json:"org_id"`
	Secret string `json:"secret"`
	AdditionalProperties map[string]interface{}
}

type _ResponseMobileVerifySecret ResponseMobileVerifySecret

// NewResponseMobileVerifySecret instantiates a new ResponseMobileVerifySecret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseMobileVerifySecret(name string, orgId string, secret string) *ResponseMobileVerifySecret {
	this := ResponseMobileVerifySecret{}
	this.Name = name
	this.OrgId = orgId
	this.Secret = secret
	return &this
}

// NewResponseMobileVerifySecretWithDefaults instantiates a new ResponseMobileVerifySecret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseMobileVerifySecretWithDefaults() *ResponseMobileVerifySecret {
	this := ResponseMobileVerifySecret{}
	return &this
}

// GetName returns the Name field value
func (o *ResponseMobileVerifySecret) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResponseMobileVerifySecret) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResponseMobileVerifySecret) SetName(v string) {
	o.Name = v
}

// GetOrgId returns the OrgId field value
func (o *ResponseMobileVerifySecret) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *ResponseMobileVerifySecret) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *ResponseMobileVerifySecret) SetOrgId(v string) {
	o.OrgId = v
}

// GetSecret returns the Secret field value
func (o *ResponseMobileVerifySecret) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *ResponseMobileVerifySecret) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *ResponseMobileVerifySecret) SetSecret(v string) {
	o.Secret = v
}

func (o ResponseMobileVerifySecret) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseMobileVerifySecret) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["org_id"] = o.OrgId
	toSerialize["secret"] = o.Secret

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResponseMobileVerifySecret) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"org_id",
		"secret",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResponseMobileVerifySecret := _ResponseMobileVerifySecret{}

	err = json.Unmarshal(data, &varResponseMobileVerifySecret)

	if err != nil {
		return err
	}

	*o = ResponseMobileVerifySecret(varResponseMobileVerifySecret)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "secret")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResponseMobileVerifySecret struct {
	value *ResponseMobileVerifySecret
	isSet bool
}

func (v NullableResponseMobileVerifySecret) Get() *ResponseMobileVerifySecret {
	return v.value
}

func (v *NullableResponseMobileVerifySecret) Set(val *ResponseMobileVerifySecret) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseMobileVerifySecret) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseMobileVerifySecret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseMobileVerifySecret(val *ResponseMobileVerifySecret) *NullableResponseMobileVerifySecret {
	return &NullableResponseMobileVerifySecret{value: val, isSet: true}
}

func (v NullableResponseMobileVerifySecret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseMobileVerifySecret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


