/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the GatewayTemplateTunnelProbe type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayTemplateTunnelProbe{}

// GatewayTemplateTunnelProbe Only if: * `provider`== `custom-ipsec`
type GatewayTemplateTunnelProbe struct {
	// how often to trigger the probe
	Interval *int32 `json:"interval,omitempty"`
	// number of consecutive misses before declaring the tunnel down
	Threshold *int32 `json:"threshold,omitempty"`
	// time within which to complete the connectivity check
	Timeout *int32 `json:"timeout,omitempty"`
	Type *GatewayTemplateProbeType `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayTemplateTunnelProbe GatewayTemplateTunnelProbe

// NewGatewayTemplateTunnelProbe instantiates a new GatewayTemplateTunnelProbe object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayTemplateTunnelProbe() *GatewayTemplateTunnelProbe {
	this := GatewayTemplateTunnelProbe{}
	var type_ GatewayTemplateProbeType = GATEWAYTEMPLATEPROBETYPE_ICMP
	this.Type = &type_
	return &this
}

// NewGatewayTemplateTunnelProbeWithDefaults instantiates a new GatewayTemplateTunnelProbe object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayTemplateTunnelProbeWithDefaults() *GatewayTemplateTunnelProbe {
	this := GatewayTemplateTunnelProbe{}
	var type_ GatewayTemplateProbeType = GATEWAYTEMPLATEPROBETYPE_ICMP
	this.Type = &type_
	return &this
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *GatewayTemplateTunnelProbe) GetInterval() int32 {
	if o == nil || IsNil(o.Interval) {
		var ret int32
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplateTunnelProbe) GetIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *GatewayTemplateTunnelProbe) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int32 and assigns it to the Interval field.
func (o *GatewayTemplateTunnelProbe) SetInterval(v int32) {
	o.Interval = &v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *GatewayTemplateTunnelProbe) GetThreshold() int32 {
	if o == nil || IsNil(o.Threshold) {
		var ret int32
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplateTunnelProbe) GetThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *GatewayTemplateTunnelProbe) HasThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given int32 and assigns it to the Threshold field.
func (o *GatewayTemplateTunnelProbe) SetThreshold(v int32) {
	o.Threshold = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *GatewayTemplateTunnelProbe) GetTimeout() int32 {
	if o == nil || IsNil(o.Timeout) {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplateTunnelProbe) GetTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *GatewayTemplateTunnelProbe) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *GatewayTemplateTunnelProbe) SetTimeout(v int32) {
	o.Timeout = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GatewayTemplateTunnelProbe) GetType() GatewayTemplateProbeType {
	if o == nil || IsNil(o.Type) {
		var ret GatewayTemplateProbeType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplateTunnelProbe) GetTypeOk() (*GatewayTemplateProbeType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GatewayTemplateTunnelProbe) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given GatewayTemplateProbeType and assigns it to the Type field.
func (o *GatewayTemplateTunnelProbe) SetType(v GatewayTemplateProbeType) {
	o.Type = &v
}

func (o GatewayTemplateTunnelProbe) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayTemplateTunnelProbe) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayTemplateTunnelProbe) UnmarshalJSON(data []byte) (err error) {
	varGatewayTemplateTunnelProbe := _GatewayTemplateTunnelProbe{}

	err = json.Unmarshal(data, &varGatewayTemplateTunnelProbe)

	if err != nil {
		return err
	}

	*o = GatewayTemplateTunnelProbe(varGatewayTemplateTunnelProbe)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "interval")
		delete(additionalProperties, "threshold")
		delete(additionalProperties, "timeout")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayTemplateTunnelProbe struct {
	value *GatewayTemplateTunnelProbe
	isSet bool
}

func (v NullableGatewayTemplateTunnelProbe) Get() *GatewayTemplateTunnelProbe {
	return v.value
}

func (v *NullableGatewayTemplateTunnelProbe) Set(val *GatewayTemplateTunnelProbe) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayTemplateTunnelProbe) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayTemplateTunnelProbe) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayTemplateTunnelProbe(val *GatewayTemplateTunnelProbe) *NullableGatewayTemplateTunnelProbe {
	return &NullableGatewayTemplateTunnelProbe{value: val, isSet: true}
}

func (v NullableGatewayTemplateTunnelProbe) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayTemplateTunnelProbe) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


