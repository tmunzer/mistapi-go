/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the SuppressedAlarm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuppressedAlarm{}

// SuppressedAlarm struct for SuppressedAlarm
type SuppressedAlarm struct {
	Applies *SuppressedAlarmApplies `json:"applies,omitempty"`
	// duration, in seconds. Maximum duration is 86400 * 180 (180 days). 0 is to un-suppress alarms
	Duration *float32 `json:"duration,omitempty"`
	// poch_time in seconds, Default as now, accepted time range is from now to now + 7 days
	ScheduledTime *int32 `json:"scheduled_time,omitempty"`
	Scope *SuppressedAlarmScope `json:"scope,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SuppressedAlarm SuppressedAlarm

// NewSuppressedAlarm instantiates a new SuppressedAlarm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuppressedAlarm() *SuppressedAlarm {
	this := SuppressedAlarm{}
	var duration float32 = 3600
	this.Duration = &duration
	var scope SuppressedAlarmScope = SUPPRESSEDALARMSCOPE_SITE
	this.Scope = &scope
	return &this
}

// NewSuppressedAlarmWithDefaults instantiates a new SuppressedAlarm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuppressedAlarmWithDefaults() *SuppressedAlarm {
	this := SuppressedAlarm{}
	var duration float32 = 3600
	this.Duration = &duration
	var scope SuppressedAlarmScope = SUPPRESSEDALARMSCOPE_SITE
	this.Scope = &scope
	return &this
}

// GetApplies returns the Applies field value if set, zero value otherwise.
func (o *SuppressedAlarm) GetApplies() SuppressedAlarmApplies {
	if o == nil || IsNil(o.Applies) {
		var ret SuppressedAlarmApplies
		return ret
	}
	return *o.Applies
}

// GetAppliesOk returns a tuple with the Applies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuppressedAlarm) GetAppliesOk() (*SuppressedAlarmApplies, bool) {
	if o == nil || IsNil(o.Applies) {
		return nil, false
	}
	return o.Applies, true
}

// HasApplies returns a boolean if a field has been set.
func (o *SuppressedAlarm) HasApplies() bool {
	if o != nil && !IsNil(o.Applies) {
		return true
	}

	return false
}

// SetApplies gets a reference to the given SuppressedAlarmApplies and assigns it to the Applies field.
func (o *SuppressedAlarm) SetApplies(v SuppressedAlarmApplies) {
	o.Applies = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *SuppressedAlarm) GetDuration() float32 {
	if o == nil || IsNil(o.Duration) {
		var ret float32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuppressedAlarm) GetDurationOk() (*float32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *SuppressedAlarm) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given float32 and assigns it to the Duration field.
func (o *SuppressedAlarm) SetDuration(v float32) {
	o.Duration = &v
}

// GetScheduledTime returns the ScheduledTime field value if set, zero value otherwise.
func (o *SuppressedAlarm) GetScheduledTime() int32 {
	if o == nil || IsNil(o.ScheduledTime) {
		var ret int32
		return ret
	}
	return *o.ScheduledTime
}

// GetScheduledTimeOk returns a tuple with the ScheduledTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuppressedAlarm) GetScheduledTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ScheduledTime) {
		return nil, false
	}
	return o.ScheduledTime, true
}

// HasScheduledTime returns a boolean if a field has been set.
func (o *SuppressedAlarm) HasScheduledTime() bool {
	if o != nil && !IsNil(o.ScheduledTime) {
		return true
	}

	return false
}

// SetScheduledTime gets a reference to the given int32 and assigns it to the ScheduledTime field.
func (o *SuppressedAlarm) SetScheduledTime(v int32) {
	o.ScheduledTime = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *SuppressedAlarm) GetScope() SuppressedAlarmScope {
	if o == nil || IsNil(o.Scope) {
		var ret SuppressedAlarmScope
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuppressedAlarm) GetScopeOk() (*SuppressedAlarmScope, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *SuppressedAlarm) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given SuppressedAlarmScope and assigns it to the Scope field.
func (o *SuppressedAlarm) SetScope(v SuppressedAlarmScope) {
	o.Scope = &v
}

func (o SuppressedAlarm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuppressedAlarm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Applies) {
		toSerialize["applies"] = o.Applies
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.ScheduledTime) {
		toSerialize["scheduled_time"] = o.ScheduledTime
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SuppressedAlarm) UnmarshalJSON(data []byte) (err error) {
	varSuppressedAlarm := _SuppressedAlarm{}

	err = json.Unmarshal(data, &varSuppressedAlarm)

	if err != nil {
		return err
	}

	*o = SuppressedAlarm(varSuppressedAlarm)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "applies")
		delete(additionalProperties, "duration")
		delete(additionalProperties, "scheduled_time")
		delete(additionalProperties, "scope")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSuppressedAlarm struct {
	value *SuppressedAlarm
	isSet bool
}

func (v NullableSuppressedAlarm) Get() *SuppressedAlarm {
	return v.value
}

func (v *NullableSuppressedAlarm) Set(val *SuppressedAlarm) {
	v.value = val
	v.isSet = true
}

func (v NullableSuppressedAlarm) IsSet() bool {
	return v.isSet
}

func (v *NullableSuppressedAlarm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuppressedAlarm(val *SuppressedAlarm) *NullableSuppressedAlarm {
	return &NullableSuppressedAlarm{value: val, isSet: true}
}

func (v NullableSuppressedAlarm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuppressedAlarm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


