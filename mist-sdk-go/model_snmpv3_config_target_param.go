/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the Snmpv3ConfigTargetParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Snmpv3ConfigTargetParam{}

// Snmpv3ConfigTargetParam struct for Snmpv3ConfigTargetParam
type Snmpv3ConfigTargetParam struct {
	MessageProcessingModel *Snmpv3ConfigTargetParamMessProcessModel `json:"message_processing_model,omitempty"`
	Name *string `json:"name,omitempty"`
	// refer to profile-name in notify_filter
	NotifyFilter *string `json:"notify_filter,omitempty"`
	SecurityLevel *Snmpv3ConfigTargetParamSecurityLevel `json:"security_level,omitempty"`
	SecurityModel *Snmpv3ConfigTargetParamSecurityModel `json:"security_model,omitempty"`
	// refer to security_name in usm
	SecurityName *string `json:"security_name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Snmpv3ConfigTargetParam Snmpv3ConfigTargetParam

// NewSnmpv3ConfigTargetParam instantiates a new Snmpv3ConfigTargetParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnmpv3ConfigTargetParam() *Snmpv3ConfigTargetParam {
	this := Snmpv3ConfigTargetParam{}
	return &this
}

// NewSnmpv3ConfigTargetParamWithDefaults instantiates a new Snmpv3ConfigTargetParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnmpv3ConfigTargetParamWithDefaults() *Snmpv3ConfigTargetParam {
	this := Snmpv3ConfigTargetParam{}
	return &this
}

// GetMessageProcessingModel returns the MessageProcessingModel field value if set, zero value otherwise.
func (o *Snmpv3ConfigTargetParam) GetMessageProcessingModel() Snmpv3ConfigTargetParamMessProcessModel {
	if o == nil || IsNil(o.MessageProcessingModel) {
		var ret Snmpv3ConfigTargetParamMessProcessModel
		return ret
	}
	return *o.MessageProcessingModel
}

// GetMessageProcessingModelOk returns a tuple with the MessageProcessingModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snmpv3ConfigTargetParam) GetMessageProcessingModelOk() (*Snmpv3ConfigTargetParamMessProcessModel, bool) {
	if o == nil || IsNil(o.MessageProcessingModel) {
		return nil, false
	}
	return o.MessageProcessingModel, true
}

// HasMessageProcessingModel returns a boolean if a field has been set.
func (o *Snmpv3ConfigTargetParam) HasMessageProcessingModel() bool {
	if o != nil && !IsNil(o.MessageProcessingModel) {
		return true
	}

	return false
}

// SetMessageProcessingModel gets a reference to the given Snmpv3ConfigTargetParamMessProcessModel and assigns it to the MessageProcessingModel field.
func (o *Snmpv3ConfigTargetParam) SetMessageProcessingModel(v Snmpv3ConfigTargetParamMessProcessModel) {
	o.MessageProcessingModel = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Snmpv3ConfigTargetParam) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snmpv3ConfigTargetParam) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Snmpv3ConfigTargetParam) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Snmpv3ConfigTargetParam) SetName(v string) {
	o.Name = &v
}

// GetNotifyFilter returns the NotifyFilter field value if set, zero value otherwise.
func (o *Snmpv3ConfigTargetParam) GetNotifyFilter() string {
	if o == nil || IsNil(o.NotifyFilter) {
		var ret string
		return ret
	}
	return *o.NotifyFilter
}

// GetNotifyFilterOk returns a tuple with the NotifyFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snmpv3ConfigTargetParam) GetNotifyFilterOk() (*string, bool) {
	if o == nil || IsNil(o.NotifyFilter) {
		return nil, false
	}
	return o.NotifyFilter, true
}

// HasNotifyFilter returns a boolean if a field has been set.
func (o *Snmpv3ConfigTargetParam) HasNotifyFilter() bool {
	if o != nil && !IsNil(o.NotifyFilter) {
		return true
	}

	return false
}

// SetNotifyFilter gets a reference to the given string and assigns it to the NotifyFilter field.
func (o *Snmpv3ConfigTargetParam) SetNotifyFilter(v string) {
	o.NotifyFilter = &v
}

// GetSecurityLevel returns the SecurityLevel field value if set, zero value otherwise.
func (o *Snmpv3ConfigTargetParam) GetSecurityLevel() Snmpv3ConfigTargetParamSecurityLevel {
	if o == nil || IsNil(o.SecurityLevel) {
		var ret Snmpv3ConfigTargetParamSecurityLevel
		return ret
	}
	return *o.SecurityLevel
}

// GetSecurityLevelOk returns a tuple with the SecurityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snmpv3ConfigTargetParam) GetSecurityLevelOk() (*Snmpv3ConfigTargetParamSecurityLevel, bool) {
	if o == nil || IsNil(o.SecurityLevel) {
		return nil, false
	}
	return o.SecurityLevel, true
}

// HasSecurityLevel returns a boolean if a field has been set.
func (o *Snmpv3ConfigTargetParam) HasSecurityLevel() bool {
	if o != nil && !IsNil(o.SecurityLevel) {
		return true
	}

	return false
}

// SetSecurityLevel gets a reference to the given Snmpv3ConfigTargetParamSecurityLevel and assigns it to the SecurityLevel field.
func (o *Snmpv3ConfigTargetParam) SetSecurityLevel(v Snmpv3ConfigTargetParamSecurityLevel) {
	o.SecurityLevel = &v
}

// GetSecurityModel returns the SecurityModel field value if set, zero value otherwise.
func (o *Snmpv3ConfigTargetParam) GetSecurityModel() Snmpv3ConfigTargetParamSecurityModel {
	if o == nil || IsNil(o.SecurityModel) {
		var ret Snmpv3ConfigTargetParamSecurityModel
		return ret
	}
	return *o.SecurityModel
}

// GetSecurityModelOk returns a tuple with the SecurityModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snmpv3ConfigTargetParam) GetSecurityModelOk() (*Snmpv3ConfigTargetParamSecurityModel, bool) {
	if o == nil || IsNil(o.SecurityModel) {
		return nil, false
	}
	return o.SecurityModel, true
}

// HasSecurityModel returns a boolean if a field has been set.
func (o *Snmpv3ConfigTargetParam) HasSecurityModel() bool {
	if o != nil && !IsNil(o.SecurityModel) {
		return true
	}

	return false
}

// SetSecurityModel gets a reference to the given Snmpv3ConfigTargetParamSecurityModel and assigns it to the SecurityModel field.
func (o *Snmpv3ConfigTargetParam) SetSecurityModel(v Snmpv3ConfigTargetParamSecurityModel) {
	o.SecurityModel = &v
}

// GetSecurityName returns the SecurityName field value if set, zero value otherwise.
func (o *Snmpv3ConfigTargetParam) GetSecurityName() string {
	if o == nil || IsNil(o.SecurityName) {
		var ret string
		return ret
	}
	return *o.SecurityName
}

// GetSecurityNameOk returns a tuple with the SecurityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snmpv3ConfigTargetParam) GetSecurityNameOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityName) {
		return nil, false
	}
	return o.SecurityName, true
}

// HasSecurityName returns a boolean if a field has been set.
func (o *Snmpv3ConfigTargetParam) HasSecurityName() bool {
	if o != nil && !IsNil(o.SecurityName) {
		return true
	}

	return false
}

// SetSecurityName gets a reference to the given string and assigns it to the SecurityName field.
func (o *Snmpv3ConfigTargetParam) SetSecurityName(v string) {
	o.SecurityName = &v
}

func (o Snmpv3ConfigTargetParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Snmpv3ConfigTargetParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessageProcessingModel) {
		toSerialize["message_processing_model"] = o.MessageProcessingModel
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NotifyFilter) {
		toSerialize["notify_filter"] = o.NotifyFilter
	}
	if !IsNil(o.SecurityLevel) {
		toSerialize["security_level"] = o.SecurityLevel
	}
	if !IsNil(o.SecurityModel) {
		toSerialize["security_model"] = o.SecurityModel
	}
	if !IsNil(o.SecurityName) {
		toSerialize["security_name"] = o.SecurityName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Snmpv3ConfigTargetParam) UnmarshalJSON(data []byte) (err error) {
	varSnmpv3ConfigTargetParam := _Snmpv3ConfigTargetParam{}

	err = json.Unmarshal(data, &varSnmpv3ConfigTargetParam)

	if err != nil {
		return err
	}

	*o = Snmpv3ConfigTargetParam(varSnmpv3ConfigTargetParam)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "message_processing_model")
		delete(additionalProperties, "name")
		delete(additionalProperties, "notify_filter")
		delete(additionalProperties, "security_level")
		delete(additionalProperties, "security_model")
		delete(additionalProperties, "security_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSnmpv3ConfigTargetParam struct {
	value *Snmpv3ConfigTargetParam
	isSet bool
}

func (v NullableSnmpv3ConfigTargetParam) Get() *Snmpv3ConfigTargetParam {
	return v.value
}

func (v *NullableSnmpv3ConfigTargetParam) Set(val *Snmpv3ConfigTargetParam) {
	v.value = val
	v.isSet = true
}

func (v NullableSnmpv3ConfigTargetParam) IsSet() bool {
	return v.isSet
}

func (v *NullableSnmpv3ConfigTargetParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnmpv3ConfigTargetParam(val *Snmpv3ConfigTargetParam) *NullableSnmpv3ConfigTargetParam {
	return &NullableSnmpv3ConfigTargetParam{value: val, isSet: true}
}

func (v NullableSnmpv3ConfigTargetParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnmpv3ConfigTargetParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


