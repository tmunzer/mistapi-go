/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the WlanPortal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WlanPortal{}

// WlanPortal portal wlan settings
type WlanPortal struct {
	// amazon OAuth2 client id. This is optional. If not provided, it will use a default one.
	AmazonClientId NullableString `json:"amazon_client_id,omitempty"`
	// amazon OAuth2 client secret. If amazon_client_id was provided, provide a correspoinding value. Else leave blank.
	AmazonClientSecret NullableString `json:"amazon_client_secret,omitempty"`
	// Matches authenticated user email against provided domains. If null or [], all authenticated emails will be allowed.
	AmazonEmailDomains []string `json:"amazon_email_domains,omitempty"`
	// whether amazon is enabled as a login method
	AmazonEnabled *bool `json:"amazon_enabled,omitempty"`
	// interval for which guest remains authorized using amazon auth (in minutes), if not provided, uses expire`
	AmazonExpire NullableFloat64 `json:"amazon_expire,omitempty"`
	Auth *WlanPortalAuth `json:"auth,omitempty"`
	// Required if `azure_enabled`==`true`. Azure active directory app client id
	AzureClientId NullableString `json:"azure_client_id,omitempty"`
	// Required if `azure_enabled`==`true`. Azure active directory app client secret
	AzureClientSecret NullableString `json:"azure_client_secret,omitempty"`
	// whether Azure Active Directory is enabled as a login method
	AzureEnabled *bool `json:"azure_enabled,omitempty"`
	// interval for which guest remains authorized using azure auth (in minutes), if not provided, uses expire`
	AzureExpire NullableFloat64 `json:"azure_expire,omitempty"`
	// Required if `azure_enabled`==`true`. Azure active directory tenant id.
	AzureTenantId NullableString `json:"azure_tenant_id,omitempty"`
	// when `sms_provider`==`broadnet`
	BroadnetPassword *string `json:"broadnet_password,omitempty"`
	// when `sms_provider`==`broadnet`
	BroadnetSid *string `json:"broadnet_sid,omitempty"`
	// when `sms_provider`==`broadnet`
	BroadnetUserId *string `json:"broadnet_user_id,omitempty"`
	// whether to bypass the guest portal when cloud not reachable (and apply the default policies)
	BypassWhenCloudDown *bool `json:"bypass_when_cloud_down,omitempty"`
	// when `sms_provider`==`clickatell`
	ClickatellApiKey *string `json:"clickatell_api_key,omitempty"`
	// whether to allow guest to roam between WLANs (with same `WLAN.ssid`, regardless of variables) of different sites of same org without reauthentication (disable random_mac for seamless roaming)
	CrossSite *bool `json:"cross_site,omitempty"`
	// whether email (access code verification) is enabled as a login method
	EmailEnabled *bool `json:"email_enabled,omitempty"`
	// whether guest portal is enabled
	Enabled *bool `json:"enabled,omitempty"`
	// how long to remain authorized, in minutes
	Expire *float64 `json:"expire,omitempty"`
	// external portal URL (e.g. https://host/url) where we can append our query parameters to
	ExternalPortalUrl *string `json:"external_portal_url,omitempty"`
	// Required if `facebook_enabled`==`true`. Facebook OAuth2 app id. This is optional. If not provided, it will use a default one.
	FacebookClientId NullableString `json:"facebook_client_id,omitempty"`
	// Required if `facebook_enabled`==`true`. Facebook OAuth2 app secret. If facebook_client_id was provided, provide a correspoinding value. Else leave blank.
	FacebookClientSecret NullableString `json:"facebook_client_secret,omitempty"`
	// Matches authenticated user email against provided domains. If null or [], all authenticated emails will be allowed.
	FacebookEmailDomains []string `json:"facebook_email_domains,omitempty"`
	// whether facebook is enabled as a login method
	FacebookEnabled *bool `json:"facebook_enabled,omitempty"`
	// interval for which guest remains authorized using facebook auth (in minutes), if not provided, uses expire`
	FacebookExpire NullableFloat64 `json:"facebook_expire,omitempty"`
	// whether to forward the user to another URL after authorized
	Forward *bool `json:"forward,omitempty"`
	// the URL to forward the user to
	ForwardUrl NullableString `json:"forward_url,omitempty"`
	// Google OAuth2 app id. This is optional. If not provided, it will use a default one.
	GoogleClientId NullableString `json:"google_client_id,omitempty"`
	// Google OAuth2 app secret. If google_client_id was provided, provide a correspoinding value. Else leave blank.
	GoogleClientSecret NullableString `json:"google_client_secret,omitempty"`
	// Matches authenticated user email against provided domains. If null or [], all authenticated emails will be allowed.
	GoogleEmailDomains []string `json:"google_email_domains,omitempty"`
	// whether google is enabled as login method
	GoogleEnabled *bool `json:"google_enabled,omitempty"`
	// interval for which guest remains authorized using google auth (in minutes), if not provided, uses expire`
	GoogleExpire NullableFloat64 `json:"google_expire,omitempty"`
	// when `sms_provider`==`gupshup`
	GupshupPassword *string `json:"gupshup_password,omitempty"`
	// when `sms_provider`==`gupshup`
	GupshupUserid *string `json:"gupshup_userid,omitempty"`
	// microsoft 365 OAuth2 client id. This is optional. If not provided, it will use a default one.
	MicrosoftClientId NullableString `json:"microsoft_client_id,omitempty"`
	// microsoft 365 OAuth2 client secret. If microsoft_client_id was provided, provide a correspoinding value. Else leave blank.
	MicrosoftClientSecret NullableString `json:"microsoft_client_secret,omitempty"`
	// Matches authenticated user email against provided domains. If null or [], all authenticated emails will be allowed.
	MicrosoftEmailDomains []string `json:"microsoft_email_domains,omitempty"`
	// whether microsoft 365 is enabled as a login method
	MicrosoftEnabled *bool `json:"microsoft_enabled,omitempty"`
	// interval for which guest remains authorized using microsoft auth (in minutes), if not provided, uses expire`
	MicrosoftExpire NullableFloat64 `json:"microsoft_expire,omitempty"`
	// whether password is enabled
	PassphraseEnabled *bool `json:"passphrase_enabled,omitempty"`
	// interval for which guest remains authorized using passphrase auth (in minutes), if not provided, uses `expire`
	PassphraseExpire NullableFloat64 `json:"passphrase_expire,omitempty"`
	// passphrase
	Password NullableString `json:"password,omitempty"`
	// list of hostnames without http(s):// (matched by substring)
	PortalAllowedHostnames *string `json:"portal_allowed_hostnames,omitempty"`
	// list of CIDRs
	PortalAllowedSubnets *string `json:"portal_allowed_subnets,omitempty"`
	// api secret (auto-generated) that can be used to sign guest authorization requests
	PortalApiSecret *string `json:"portal_api_secret,omitempty"`
	// list of hostnames without http(s):// (matched by substring), this takes precedence over portal_allowed_hostnames
	PortalDeniedHostnames *string `json:"portal_denied_hostnames,omitempty"`
	// Url of portal background image
	PortalImage *string `json:"portal_image,omitempty"`
	// for SAML, this is used as the ACS URL
	PortalSsoUrl *string `json:"portal_sso_url,omitempty"`
	// whether to show list of sponsor emails mentioned in `sponsors` object as a dropdown. If both `sponsor_notify_all` and `predefined_sponsors_enabled` are false, behaviour is acc to `sponsor_email_domains`
	PredefinedSponsorsEnabled *bool `json:"predefined_sponsors_enabled,omitempty"`
	Privacy *bool `json:"privacy,omitempty"`
	// when `sms_provider`==`puzzel`
	PuzzelPassword *string `json:"puzzel_password,omitempty"`
	// when `sms_provider`==`puzzel`
	PuzzelServiceId *string `json:"puzzel_service_id,omitempty"`
	// when `sms_provider`==`puzzel`
	PuzzelUsername *string `json:"puzzel_username,omitempty"`
	SmsMessageFormat *string `json:"smsMessageFormat,omitempty"`
	// whether sms is enabled as a login method
	SmsEnabled *bool `json:"sms_enabled,omitempty"`
	// interval for which guest remains authorized using sms auth (in minutes), if not provided, uses expire`
	SmsExpire NullableFloat64 `json:"sms_expire,omitempty"`
	SmsProvider *WlanPortalSmsProvider `json:"sms_provider,omitempty"`
	// whether to automatically approve guest and allow sponsor to revoke guest access, needs predefined_sponsors_enabled enabled and sponsor_notify_all disabled
	SponsorAutoApprove *bool `json:"sponsor_auto_approve,omitempty"`
	// list of domain allowed for sponsor email. Required if `sponsor_enabled` is `true` and `sponsors` is empty.
	SponsorEmailDomains []string `json:"sponsor_email_domains,omitempty"`
	// whether sponsor is enabled
	SponsorEnabled *bool `json:"sponsor_enabled,omitempty"`
	// interval for which guest remains authorized using sponsor auth (in minutes), if not provided, uses expire`
	SponsorExpire NullableFloat64 `json:"sponsor_expire,omitempty"`
	// how long to remain valid sponsored guest request approve/deny link received in email, in minutes.
	SponsorLinkValidityDuration *int32 `json:"sponsor_link_validity_duration,omitempty"`
	// whether to notify all sponsors that are mentioned in `sponsors` object. Both `sponsor_notify_all` and `predefined_sponsors_enabled` should be true in order to notify sponsors. If true, email sent to 10 sponsors in no particular order.
	SponsorNotifyAll *bool `json:"sponsor_notify_all,omitempty"`
	// if enabled, guest will get email about sponsor's action (approve/deny)
	SponsorStatusNotify *bool `json:"sponsor_status_notify,omitempty"`
	// object of allowed sponsors email with name. Required if `sponsor_enabled` is `true` and `sponsor_email_domains` is empty. Property key is the sponsor email, Property value is the sponsor name
	Sponsors *map[string]string `json:"sponsors,omitempty"`
	// default role to assign if there’s no match. By default, an assertion is treated as invalid when there’s no role matched
	SsoDefaultRole *string `json:"sso_default_role,omitempty"`
	SsoForcedRole *string `json:"sso_forced_role,omitempty"`
	// IDP Cert (used to verify the signed response)
	SsoIdpCert *string `json:"sso_idp_cert,omitempty"`
	// signing algorithm for SAML Assertion
	SsoIdpSignAlgo *string `json:"sso_idp_sign_algo,omitempty"`
	// IDP Single-Sign-On URL
	SsoIdpSsoUrl *string `json:"sso_idp_sso_url,omitempty"`
	// IDP issuer URL
	SsoIssuer *string `json:"sso_issuer,omitempty"`
	SsoNameidFormat *WlanPortalSsoNameidFormat `json:"sso_nameid_format,omitempty"`
	// when `sms_provider`==`telstra`, Client ID provided by Telstra
	TelstraClientId *string `json:"telstra_client_id,omitempty"`
	// when `sms_provider`==`telstra`, Client secret provided by Telstra
	TelstraClientSecret *string `json:"telstra_client_secret,omitempty"`
	// Url of portal background image thumbnail
	Thumbnail *string `json:"thumbnail,omitempty"`
	// when `sms_provider`==`twilio`, Auth token account with twilio account
	TwilioAuthToken NullableString `json:"twilio_auth_token,omitempty"`
	// when `sms_provider`==`twilio`, Twilio phone number associated with the account. See example for accepted format.
	TwilioPhoneNumber NullableString `json:"twilio_phone_number,omitempty"`
	// when `sms_provider`==`twilio`, Account SID provided by Twilio
	TwilioSid NullableString `json:"twilio_sid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WlanPortal WlanPortal

// NewWlanPortal instantiates a new WlanPortal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWlanPortal() *WlanPortal {
	this := WlanPortal{}
	var amazonClientId string = ""
	this.AmazonClientId = *NewNullableString(&amazonClientId)
	var amazonClientSecret string = ""
	this.AmazonClientSecret = *NewNullableString(&amazonClientSecret)
	var amazonEnabled bool = false
	this.AmazonEnabled = &amazonEnabled
	var auth WlanPortalAuth = WLANPORTALAUTH_NONE
	this.Auth = &auth
	var azureClientId string = ""
	this.AzureClientId = *NewNullableString(&azureClientId)
	var azureClientSecret string = ""
	this.AzureClientSecret = *NewNullableString(&azureClientSecret)
	var azureEnabled bool = false
	this.AzureEnabled = &azureEnabled
	var azureTenantId string = ""
	this.AzureTenantId = *NewNullableString(&azureTenantId)
	var broadnetPassword string = ""
	this.BroadnetPassword = &broadnetPassword
	var broadnetSid string = "MIST"
	this.BroadnetSid = &broadnetSid
	var broadnetUserId string = ""
	this.BroadnetUserId = &broadnetUserId
	var bypassWhenCloudDown bool = false
	this.BypassWhenCloudDown = &bypassWhenCloudDown
	var clickatellApiKey string = ""
	this.ClickatellApiKey = &clickatellApiKey
	var crossSite bool = false
	this.CrossSite = &crossSite
	var enabled bool = false
	this.Enabled = &enabled
	var expire float64 = 1440
	this.Expire = &expire
	var externalPortalUrl string = ""
	this.ExternalPortalUrl = &externalPortalUrl
	var facebookClientId string = ""
	this.FacebookClientId = *NewNullableString(&facebookClientId)
	var facebookClientSecret string = ""
	this.FacebookClientSecret = *NewNullableString(&facebookClientSecret)
	var facebookEnabled bool = false
	this.FacebookEnabled = &facebookEnabled
	var forward bool = false
	this.Forward = &forward
	var forwardUrl string = ""
	this.ForwardUrl = *NewNullableString(&forwardUrl)
	var googleClientId string = ""
	this.GoogleClientId = *NewNullableString(&googleClientId)
	var googleClientSecret string = ""
	this.GoogleClientSecret = *NewNullableString(&googleClientSecret)
	var googleEnabled bool = false
	this.GoogleEnabled = &googleEnabled
	var gupshupPassword string = ""
	this.GupshupPassword = &gupshupPassword
	var gupshupUserid string = ""
	this.GupshupUserid = &gupshupUserid
	var microsoftClientId string = ""
	this.MicrosoftClientId = *NewNullableString(&microsoftClientId)
	var microsoftClientSecret string = ""
	this.MicrosoftClientSecret = *NewNullableString(&microsoftClientSecret)
	var microsoftEnabled bool = false
	this.MicrosoftEnabled = &microsoftEnabled
	var passphraseEnabled bool = false
	this.PassphraseEnabled = &passphraseEnabled
	var password string = ""
	this.Password = *NewNullableString(&password)
	var portalAllowedHostnames string = ""
	this.PortalAllowedHostnames = &portalAllowedHostnames
	var portalAllowedSubnets string = ""
	this.PortalAllowedSubnets = &portalAllowedSubnets
	var portalApiSecret string = ""
	this.PortalApiSecret = &portalApiSecret
	var portalDeniedHostnames string = ""
	this.PortalDeniedHostnames = &portalDeniedHostnames
	var portalImage string = ""
	this.PortalImage = &portalImage
	var predefinedSponsorsEnabled bool = true
	this.PredefinedSponsorsEnabled = &predefinedSponsorsEnabled
	var privacy bool = true
	this.Privacy = &privacy
	var puzzelPassword string = ""
	this.PuzzelPassword = &puzzelPassword
	var puzzelServiceId string = ""
	this.PuzzelServiceId = &puzzelServiceId
	var puzzelUsername string = ""
	this.PuzzelUsername = &puzzelUsername
	var smsMessageFormat string = ""
	this.SmsMessageFormat = &smsMessageFormat
	var smsEnabled bool = false
	this.SmsEnabled = &smsEnabled
	var smsProvider WlanPortalSmsProvider = WLANPORTALSMSPROVIDER_MANUAL
	this.SmsProvider = &smsProvider
	var sponsorAutoApprove bool = false
	this.SponsorAutoApprove = &sponsorAutoApprove
	var sponsorEnabled bool = false
	this.SponsorEnabled = &sponsorEnabled
	var sponsorLinkValidityDuration int32 = 60
	this.SponsorLinkValidityDuration = &sponsorLinkValidityDuration
	var sponsorNotifyAll bool = false
	this.SponsorNotifyAll = &sponsorNotifyAll
	var sponsorStatusNotify bool = false
	this.SponsorStatusNotify = &sponsorStatusNotify
	var ssoDefaultRole string = ""
	this.SsoDefaultRole = &ssoDefaultRole
	var ssoForcedRole string = ""
	this.SsoForcedRole = &ssoForcedRole
	var ssoIdpCert string = ""
	this.SsoIdpCert = &ssoIdpCert
	var ssoIdpSignAlgo string = ""
	this.SsoIdpSignAlgo = &ssoIdpSignAlgo
	var ssoIdpSsoUrl string = ""
	this.SsoIdpSsoUrl = &ssoIdpSsoUrl
	var ssoIssuer string = ""
	this.SsoIssuer = &ssoIssuer
	var ssoNameidFormat WlanPortalSsoNameidFormat = WLANPORTALSSONAMEIDFORMAT_EMAIL
	this.SsoNameidFormat = &ssoNameidFormat
	var telstraClientId string = ""
	this.TelstraClientId = &telstraClientId
	var telstraClientSecret string = ""
	this.TelstraClientSecret = &telstraClientSecret
	var thumbnail string = ""
	this.Thumbnail = &thumbnail
	var twilioAuthToken string = ""
	this.TwilioAuthToken = *NewNullableString(&twilioAuthToken)
	var twilioPhoneNumber string = ""
	this.TwilioPhoneNumber = *NewNullableString(&twilioPhoneNumber)
	var twilioSid string = ""
	this.TwilioSid = *NewNullableString(&twilioSid)
	return &this
}

// NewWlanPortalWithDefaults instantiates a new WlanPortal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWlanPortalWithDefaults() *WlanPortal {
	this := WlanPortal{}
	var amazonClientId string = ""
	this.AmazonClientId = *NewNullableString(&amazonClientId)
	var amazonClientSecret string = ""
	this.AmazonClientSecret = *NewNullableString(&amazonClientSecret)
	var amazonEnabled bool = false
	this.AmazonEnabled = &amazonEnabled
	var auth WlanPortalAuth = WLANPORTALAUTH_NONE
	this.Auth = &auth
	var azureClientId string = ""
	this.AzureClientId = *NewNullableString(&azureClientId)
	var azureClientSecret string = ""
	this.AzureClientSecret = *NewNullableString(&azureClientSecret)
	var azureEnabled bool = false
	this.AzureEnabled = &azureEnabled
	var azureTenantId string = ""
	this.AzureTenantId = *NewNullableString(&azureTenantId)
	var broadnetPassword string = ""
	this.BroadnetPassword = &broadnetPassword
	var broadnetSid string = "MIST"
	this.BroadnetSid = &broadnetSid
	var broadnetUserId string = ""
	this.BroadnetUserId = &broadnetUserId
	var bypassWhenCloudDown bool = false
	this.BypassWhenCloudDown = &bypassWhenCloudDown
	var clickatellApiKey string = ""
	this.ClickatellApiKey = &clickatellApiKey
	var crossSite bool = false
	this.CrossSite = &crossSite
	var enabled bool = false
	this.Enabled = &enabled
	var expire float64 = 1440
	this.Expire = &expire
	var externalPortalUrl string = ""
	this.ExternalPortalUrl = &externalPortalUrl
	var facebookClientId string = ""
	this.FacebookClientId = *NewNullableString(&facebookClientId)
	var facebookClientSecret string = ""
	this.FacebookClientSecret = *NewNullableString(&facebookClientSecret)
	var facebookEnabled bool = false
	this.FacebookEnabled = &facebookEnabled
	var forward bool = false
	this.Forward = &forward
	var forwardUrl string = ""
	this.ForwardUrl = *NewNullableString(&forwardUrl)
	var googleClientId string = ""
	this.GoogleClientId = *NewNullableString(&googleClientId)
	var googleClientSecret string = ""
	this.GoogleClientSecret = *NewNullableString(&googleClientSecret)
	var googleEnabled bool = false
	this.GoogleEnabled = &googleEnabled
	var gupshupPassword string = ""
	this.GupshupPassword = &gupshupPassword
	var gupshupUserid string = ""
	this.GupshupUserid = &gupshupUserid
	var microsoftClientId string = ""
	this.MicrosoftClientId = *NewNullableString(&microsoftClientId)
	var microsoftClientSecret string = ""
	this.MicrosoftClientSecret = *NewNullableString(&microsoftClientSecret)
	var microsoftEnabled bool = false
	this.MicrosoftEnabled = &microsoftEnabled
	var passphraseEnabled bool = false
	this.PassphraseEnabled = &passphraseEnabled
	var password string = ""
	this.Password = *NewNullableString(&password)
	var portalAllowedHostnames string = ""
	this.PortalAllowedHostnames = &portalAllowedHostnames
	var portalAllowedSubnets string = ""
	this.PortalAllowedSubnets = &portalAllowedSubnets
	var portalApiSecret string = ""
	this.PortalApiSecret = &portalApiSecret
	var portalDeniedHostnames string = ""
	this.PortalDeniedHostnames = &portalDeniedHostnames
	var portalImage string = ""
	this.PortalImage = &portalImage
	var predefinedSponsorsEnabled bool = true
	this.PredefinedSponsorsEnabled = &predefinedSponsorsEnabled
	var privacy bool = true
	this.Privacy = &privacy
	var puzzelPassword string = ""
	this.PuzzelPassword = &puzzelPassword
	var puzzelServiceId string = ""
	this.PuzzelServiceId = &puzzelServiceId
	var puzzelUsername string = ""
	this.PuzzelUsername = &puzzelUsername
	var smsMessageFormat string = ""
	this.SmsMessageFormat = &smsMessageFormat
	var smsEnabled bool = false
	this.SmsEnabled = &smsEnabled
	var smsProvider WlanPortalSmsProvider = WLANPORTALSMSPROVIDER_MANUAL
	this.SmsProvider = &smsProvider
	var sponsorAutoApprove bool = false
	this.SponsorAutoApprove = &sponsorAutoApprove
	var sponsorEnabled bool = false
	this.SponsorEnabled = &sponsorEnabled
	var sponsorLinkValidityDuration int32 = 60
	this.SponsorLinkValidityDuration = &sponsorLinkValidityDuration
	var sponsorNotifyAll bool = false
	this.SponsorNotifyAll = &sponsorNotifyAll
	var sponsorStatusNotify bool = false
	this.SponsorStatusNotify = &sponsorStatusNotify
	var ssoDefaultRole string = ""
	this.SsoDefaultRole = &ssoDefaultRole
	var ssoForcedRole string = ""
	this.SsoForcedRole = &ssoForcedRole
	var ssoIdpCert string = ""
	this.SsoIdpCert = &ssoIdpCert
	var ssoIdpSignAlgo string = ""
	this.SsoIdpSignAlgo = &ssoIdpSignAlgo
	var ssoIdpSsoUrl string = ""
	this.SsoIdpSsoUrl = &ssoIdpSsoUrl
	var ssoIssuer string = ""
	this.SsoIssuer = &ssoIssuer
	var ssoNameidFormat WlanPortalSsoNameidFormat = WLANPORTALSSONAMEIDFORMAT_EMAIL
	this.SsoNameidFormat = &ssoNameidFormat
	var telstraClientId string = ""
	this.TelstraClientId = &telstraClientId
	var telstraClientSecret string = ""
	this.TelstraClientSecret = &telstraClientSecret
	var thumbnail string = ""
	this.Thumbnail = &thumbnail
	var twilioAuthToken string = ""
	this.TwilioAuthToken = *NewNullableString(&twilioAuthToken)
	var twilioPhoneNumber string = ""
	this.TwilioPhoneNumber = *NewNullableString(&twilioPhoneNumber)
	var twilioSid string = ""
	this.TwilioSid = *NewNullableString(&twilioSid)
	return &this
}

// GetAmazonClientId returns the AmazonClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetAmazonClientId() string {
	if o == nil || IsNil(o.AmazonClientId.Get()) {
		var ret string
		return ret
	}
	return *o.AmazonClientId.Get()
}

// GetAmazonClientIdOk returns a tuple with the AmazonClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetAmazonClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmazonClientId.Get(), o.AmazonClientId.IsSet()
}

// HasAmazonClientId returns a boolean if a field has been set.
func (o *WlanPortal) HasAmazonClientId() bool {
	if o != nil && o.AmazonClientId.IsSet() {
		return true
	}

	return false
}

// SetAmazonClientId gets a reference to the given NullableString and assigns it to the AmazonClientId field.
func (o *WlanPortal) SetAmazonClientId(v string) {
	o.AmazonClientId.Set(&v)
}
// SetAmazonClientIdNil sets the value for AmazonClientId to be an explicit nil
func (o *WlanPortal) SetAmazonClientIdNil() {
	o.AmazonClientId.Set(nil)
}

// UnsetAmazonClientId ensures that no value is present for AmazonClientId, not even an explicit nil
func (o *WlanPortal) UnsetAmazonClientId() {
	o.AmazonClientId.Unset()
}

// GetAmazonClientSecret returns the AmazonClientSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetAmazonClientSecret() string {
	if o == nil || IsNil(o.AmazonClientSecret.Get()) {
		var ret string
		return ret
	}
	return *o.AmazonClientSecret.Get()
}

// GetAmazonClientSecretOk returns a tuple with the AmazonClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetAmazonClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmazonClientSecret.Get(), o.AmazonClientSecret.IsSet()
}

// HasAmazonClientSecret returns a boolean if a field has been set.
func (o *WlanPortal) HasAmazonClientSecret() bool {
	if o != nil && o.AmazonClientSecret.IsSet() {
		return true
	}

	return false
}

// SetAmazonClientSecret gets a reference to the given NullableString and assigns it to the AmazonClientSecret field.
func (o *WlanPortal) SetAmazonClientSecret(v string) {
	o.AmazonClientSecret.Set(&v)
}
// SetAmazonClientSecretNil sets the value for AmazonClientSecret to be an explicit nil
func (o *WlanPortal) SetAmazonClientSecretNil() {
	o.AmazonClientSecret.Set(nil)
}

// UnsetAmazonClientSecret ensures that no value is present for AmazonClientSecret, not even an explicit nil
func (o *WlanPortal) UnsetAmazonClientSecret() {
	o.AmazonClientSecret.Unset()
}

// GetAmazonEmailDomains returns the AmazonEmailDomains field value if set, zero value otherwise.
func (o *WlanPortal) GetAmazonEmailDomains() []string {
	if o == nil || IsNil(o.AmazonEmailDomains) {
		var ret []string
		return ret
	}
	return o.AmazonEmailDomains
}

// GetAmazonEmailDomainsOk returns a tuple with the AmazonEmailDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetAmazonEmailDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.AmazonEmailDomains) {
		return nil, false
	}
	return o.AmazonEmailDomains, true
}

// HasAmazonEmailDomains returns a boolean if a field has been set.
func (o *WlanPortal) HasAmazonEmailDomains() bool {
	if o != nil && !IsNil(o.AmazonEmailDomains) {
		return true
	}

	return false
}

// SetAmazonEmailDomains gets a reference to the given []string and assigns it to the AmazonEmailDomains field.
func (o *WlanPortal) SetAmazonEmailDomains(v []string) {
	o.AmazonEmailDomains = v
}

// GetAmazonEnabled returns the AmazonEnabled field value if set, zero value otherwise.
func (o *WlanPortal) GetAmazonEnabled() bool {
	if o == nil || IsNil(o.AmazonEnabled) {
		var ret bool
		return ret
	}
	return *o.AmazonEnabled
}

// GetAmazonEnabledOk returns a tuple with the AmazonEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetAmazonEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AmazonEnabled) {
		return nil, false
	}
	return o.AmazonEnabled, true
}

// HasAmazonEnabled returns a boolean if a field has been set.
func (o *WlanPortal) HasAmazonEnabled() bool {
	if o != nil && !IsNil(o.AmazonEnabled) {
		return true
	}

	return false
}

// SetAmazonEnabled gets a reference to the given bool and assigns it to the AmazonEnabled field.
func (o *WlanPortal) SetAmazonEnabled(v bool) {
	o.AmazonEnabled = &v
}

// GetAmazonExpire returns the AmazonExpire field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetAmazonExpire() float64 {
	if o == nil || IsNil(o.AmazonExpire.Get()) {
		var ret float64
		return ret
	}
	return *o.AmazonExpire.Get()
}

// GetAmazonExpireOk returns a tuple with the AmazonExpire field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetAmazonExpireOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmazonExpire.Get(), o.AmazonExpire.IsSet()
}

// HasAmazonExpire returns a boolean if a field has been set.
func (o *WlanPortal) HasAmazonExpire() bool {
	if o != nil && o.AmazonExpire.IsSet() {
		return true
	}

	return false
}

// SetAmazonExpire gets a reference to the given NullableFloat64 and assigns it to the AmazonExpire field.
func (o *WlanPortal) SetAmazonExpire(v float64) {
	o.AmazonExpire.Set(&v)
}
// SetAmazonExpireNil sets the value for AmazonExpire to be an explicit nil
func (o *WlanPortal) SetAmazonExpireNil() {
	o.AmazonExpire.Set(nil)
}

// UnsetAmazonExpire ensures that no value is present for AmazonExpire, not even an explicit nil
func (o *WlanPortal) UnsetAmazonExpire() {
	o.AmazonExpire.Unset()
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *WlanPortal) GetAuth() WlanPortalAuth {
	if o == nil || IsNil(o.Auth) {
		var ret WlanPortalAuth
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetAuthOk() (*WlanPortalAuth, bool) {
	if o == nil || IsNil(o.Auth) {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *WlanPortal) HasAuth() bool {
	if o != nil && !IsNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given WlanPortalAuth and assigns it to the Auth field.
func (o *WlanPortal) SetAuth(v WlanPortalAuth) {
	o.Auth = &v
}

// GetAzureClientId returns the AzureClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetAzureClientId() string {
	if o == nil || IsNil(o.AzureClientId.Get()) {
		var ret string
		return ret
	}
	return *o.AzureClientId.Get()
}

// GetAzureClientIdOk returns a tuple with the AzureClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetAzureClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AzureClientId.Get(), o.AzureClientId.IsSet()
}

// HasAzureClientId returns a boolean if a field has been set.
func (o *WlanPortal) HasAzureClientId() bool {
	if o != nil && o.AzureClientId.IsSet() {
		return true
	}

	return false
}

// SetAzureClientId gets a reference to the given NullableString and assigns it to the AzureClientId field.
func (o *WlanPortal) SetAzureClientId(v string) {
	o.AzureClientId.Set(&v)
}
// SetAzureClientIdNil sets the value for AzureClientId to be an explicit nil
func (o *WlanPortal) SetAzureClientIdNil() {
	o.AzureClientId.Set(nil)
}

// UnsetAzureClientId ensures that no value is present for AzureClientId, not even an explicit nil
func (o *WlanPortal) UnsetAzureClientId() {
	o.AzureClientId.Unset()
}

// GetAzureClientSecret returns the AzureClientSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetAzureClientSecret() string {
	if o == nil || IsNil(o.AzureClientSecret.Get()) {
		var ret string
		return ret
	}
	return *o.AzureClientSecret.Get()
}

// GetAzureClientSecretOk returns a tuple with the AzureClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetAzureClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AzureClientSecret.Get(), o.AzureClientSecret.IsSet()
}

// HasAzureClientSecret returns a boolean if a field has been set.
func (o *WlanPortal) HasAzureClientSecret() bool {
	if o != nil && o.AzureClientSecret.IsSet() {
		return true
	}

	return false
}

// SetAzureClientSecret gets a reference to the given NullableString and assigns it to the AzureClientSecret field.
func (o *WlanPortal) SetAzureClientSecret(v string) {
	o.AzureClientSecret.Set(&v)
}
// SetAzureClientSecretNil sets the value for AzureClientSecret to be an explicit nil
func (o *WlanPortal) SetAzureClientSecretNil() {
	o.AzureClientSecret.Set(nil)
}

// UnsetAzureClientSecret ensures that no value is present for AzureClientSecret, not even an explicit nil
func (o *WlanPortal) UnsetAzureClientSecret() {
	o.AzureClientSecret.Unset()
}

// GetAzureEnabled returns the AzureEnabled field value if set, zero value otherwise.
func (o *WlanPortal) GetAzureEnabled() bool {
	if o == nil || IsNil(o.AzureEnabled) {
		var ret bool
		return ret
	}
	return *o.AzureEnabled
}

// GetAzureEnabledOk returns a tuple with the AzureEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetAzureEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AzureEnabled) {
		return nil, false
	}
	return o.AzureEnabled, true
}

// HasAzureEnabled returns a boolean if a field has been set.
func (o *WlanPortal) HasAzureEnabled() bool {
	if o != nil && !IsNil(o.AzureEnabled) {
		return true
	}

	return false
}

// SetAzureEnabled gets a reference to the given bool and assigns it to the AzureEnabled field.
func (o *WlanPortal) SetAzureEnabled(v bool) {
	o.AzureEnabled = &v
}

// GetAzureExpire returns the AzureExpire field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetAzureExpire() float64 {
	if o == nil || IsNil(o.AzureExpire.Get()) {
		var ret float64
		return ret
	}
	return *o.AzureExpire.Get()
}

// GetAzureExpireOk returns a tuple with the AzureExpire field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetAzureExpireOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AzureExpire.Get(), o.AzureExpire.IsSet()
}

// HasAzureExpire returns a boolean if a field has been set.
func (o *WlanPortal) HasAzureExpire() bool {
	if o != nil && o.AzureExpire.IsSet() {
		return true
	}

	return false
}

// SetAzureExpire gets a reference to the given NullableFloat64 and assigns it to the AzureExpire field.
func (o *WlanPortal) SetAzureExpire(v float64) {
	o.AzureExpire.Set(&v)
}
// SetAzureExpireNil sets the value for AzureExpire to be an explicit nil
func (o *WlanPortal) SetAzureExpireNil() {
	o.AzureExpire.Set(nil)
}

// UnsetAzureExpire ensures that no value is present for AzureExpire, not even an explicit nil
func (o *WlanPortal) UnsetAzureExpire() {
	o.AzureExpire.Unset()
}

// GetAzureTenantId returns the AzureTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetAzureTenantId() string {
	if o == nil || IsNil(o.AzureTenantId.Get()) {
		var ret string
		return ret
	}
	return *o.AzureTenantId.Get()
}

// GetAzureTenantIdOk returns a tuple with the AzureTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetAzureTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AzureTenantId.Get(), o.AzureTenantId.IsSet()
}

// HasAzureTenantId returns a boolean if a field has been set.
func (o *WlanPortal) HasAzureTenantId() bool {
	if o != nil && o.AzureTenantId.IsSet() {
		return true
	}

	return false
}

// SetAzureTenantId gets a reference to the given NullableString and assigns it to the AzureTenantId field.
func (o *WlanPortal) SetAzureTenantId(v string) {
	o.AzureTenantId.Set(&v)
}
// SetAzureTenantIdNil sets the value for AzureTenantId to be an explicit nil
func (o *WlanPortal) SetAzureTenantIdNil() {
	o.AzureTenantId.Set(nil)
}

// UnsetAzureTenantId ensures that no value is present for AzureTenantId, not even an explicit nil
func (o *WlanPortal) UnsetAzureTenantId() {
	o.AzureTenantId.Unset()
}

// GetBroadnetPassword returns the BroadnetPassword field value if set, zero value otherwise.
func (o *WlanPortal) GetBroadnetPassword() string {
	if o == nil || IsNil(o.BroadnetPassword) {
		var ret string
		return ret
	}
	return *o.BroadnetPassword
}

// GetBroadnetPasswordOk returns a tuple with the BroadnetPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetBroadnetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.BroadnetPassword) {
		return nil, false
	}
	return o.BroadnetPassword, true
}

// HasBroadnetPassword returns a boolean if a field has been set.
func (o *WlanPortal) HasBroadnetPassword() bool {
	if o != nil && !IsNil(o.BroadnetPassword) {
		return true
	}

	return false
}

// SetBroadnetPassword gets a reference to the given string and assigns it to the BroadnetPassword field.
func (o *WlanPortal) SetBroadnetPassword(v string) {
	o.BroadnetPassword = &v
}

// GetBroadnetSid returns the BroadnetSid field value if set, zero value otherwise.
func (o *WlanPortal) GetBroadnetSid() string {
	if o == nil || IsNil(o.BroadnetSid) {
		var ret string
		return ret
	}
	return *o.BroadnetSid
}

// GetBroadnetSidOk returns a tuple with the BroadnetSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetBroadnetSidOk() (*string, bool) {
	if o == nil || IsNil(o.BroadnetSid) {
		return nil, false
	}
	return o.BroadnetSid, true
}

// HasBroadnetSid returns a boolean if a field has been set.
func (o *WlanPortal) HasBroadnetSid() bool {
	if o != nil && !IsNil(o.BroadnetSid) {
		return true
	}

	return false
}

// SetBroadnetSid gets a reference to the given string and assigns it to the BroadnetSid field.
func (o *WlanPortal) SetBroadnetSid(v string) {
	o.BroadnetSid = &v
}

// GetBroadnetUserId returns the BroadnetUserId field value if set, zero value otherwise.
func (o *WlanPortal) GetBroadnetUserId() string {
	if o == nil || IsNil(o.BroadnetUserId) {
		var ret string
		return ret
	}
	return *o.BroadnetUserId
}

// GetBroadnetUserIdOk returns a tuple with the BroadnetUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetBroadnetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.BroadnetUserId) {
		return nil, false
	}
	return o.BroadnetUserId, true
}

// HasBroadnetUserId returns a boolean if a field has been set.
func (o *WlanPortal) HasBroadnetUserId() bool {
	if o != nil && !IsNil(o.BroadnetUserId) {
		return true
	}

	return false
}

// SetBroadnetUserId gets a reference to the given string and assigns it to the BroadnetUserId field.
func (o *WlanPortal) SetBroadnetUserId(v string) {
	o.BroadnetUserId = &v
}

// GetBypassWhenCloudDown returns the BypassWhenCloudDown field value if set, zero value otherwise.
func (o *WlanPortal) GetBypassWhenCloudDown() bool {
	if o == nil || IsNil(o.BypassWhenCloudDown) {
		var ret bool
		return ret
	}
	return *o.BypassWhenCloudDown
}

// GetBypassWhenCloudDownOk returns a tuple with the BypassWhenCloudDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetBypassWhenCloudDownOk() (*bool, bool) {
	if o == nil || IsNil(o.BypassWhenCloudDown) {
		return nil, false
	}
	return o.BypassWhenCloudDown, true
}

// HasBypassWhenCloudDown returns a boolean if a field has been set.
func (o *WlanPortal) HasBypassWhenCloudDown() bool {
	if o != nil && !IsNil(o.BypassWhenCloudDown) {
		return true
	}

	return false
}

// SetBypassWhenCloudDown gets a reference to the given bool and assigns it to the BypassWhenCloudDown field.
func (o *WlanPortal) SetBypassWhenCloudDown(v bool) {
	o.BypassWhenCloudDown = &v
}

// GetClickatellApiKey returns the ClickatellApiKey field value if set, zero value otherwise.
func (o *WlanPortal) GetClickatellApiKey() string {
	if o == nil || IsNil(o.ClickatellApiKey) {
		var ret string
		return ret
	}
	return *o.ClickatellApiKey
}

// GetClickatellApiKeyOk returns a tuple with the ClickatellApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetClickatellApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ClickatellApiKey) {
		return nil, false
	}
	return o.ClickatellApiKey, true
}

// HasClickatellApiKey returns a boolean if a field has been set.
func (o *WlanPortal) HasClickatellApiKey() bool {
	if o != nil && !IsNil(o.ClickatellApiKey) {
		return true
	}

	return false
}

// SetClickatellApiKey gets a reference to the given string and assigns it to the ClickatellApiKey field.
func (o *WlanPortal) SetClickatellApiKey(v string) {
	o.ClickatellApiKey = &v
}

// GetCrossSite returns the CrossSite field value if set, zero value otherwise.
func (o *WlanPortal) GetCrossSite() bool {
	if o == nil || IsNil(o.CrossSite) {
		var ret bool
		return ret
	}
	return *o.CrossSite
}

// GetCrossSiteOk returns a tuple with the CrossSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetCrossSiteOk() (*bool, bool) {
	if o == nil || IsNil(o.CrossSite) {
		return nil, false
	}
	return o.CrossSite, true
}

// HasCrossSite returns a boolean if a field has been set.
func (o *WlanPortal) HasCrossSite() bool {
	if o != nil && !IsNil(o.CrossSite) {
		return true
	}

	return false
}

// SetCrossSite gets a reference to the given bool and assigns it to the CrossSite field.
func (o *WlanPortal) SetCrossSite(v bool) {
	o.CrossSite = &v
}

// GetEmailEnabled returns the EmailEnabled field value if set, zero value otherwise.
func (o *WlanPortal) GetEmailEnabled() bool {
	if o == nil || IsNil(o.EmailEnabled) {
		var ret bool
		return ret
	}
	return *o.EmailEnabled
}

// GetEmailEnabledOk returns a tuple with the EmailEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetEmailEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.EmailEnabled) {
		return nil, false
	}
	return o.EmailEnabled, true
}

// HasEmailEnabled returns a boolean if a field has been set.
func (o *WlanPortal) HasEmailEnabled() bool {
	if o != nil && !IsNil(o.EmailEnabled) {
		return true
	}

	return false
}

// SetEmailEnabled gets a reference to the given bool and assigns it to the EmailEnabled field.
func (o *WlanPortal) SetEmailEnabled(v bool) {
	o.EmailEnabled = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *WlanPortal) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *WlanPortal) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *WlanPortal) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetExpire returns the Expire field value if set, zero value otherwise.
func (o *WlanPortal) GetExpire() float64 {
	if o == nil || IsNil(o.Expire) {
		var ret float64
		return ret
	}
	return *o.Expire
}

// GetExpireOk returns a tuple with the Expire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetExpireOk() (*float64, bool) {
	if o == nil || IsNil(o.Expire) {
		return nil, false
	}
	return o.Expire, true
}

// HasExpire returns a boolean if a field has been set.
func (o *WlanPortal) HasExpire() bool {
	if o != nil && !IsNil(o.Expire) {
		return true
	}

	return false
}

// SetExpire gets a reference to the given float64 and assigns it to the Expire field.
func (o *WlanPortal) SetExpire(v float64) {
	o.Expire = &v
}

// GetExternalPortalUrl returns the ExternalPortalUrl field value if set, zero value otherwise.
func (o *WlanPortal) GetExternalPortalUrl() string {
	if o == nil || IsNil(o.ExternalPortalUrl) {
		var ret string
		return ret
	}
	return *o.ExternalPortalUrl
}

// GetExternalPortalUrlOk returns a tuple with the ExternalPortalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetExternalPortalUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalPortalUrl) {
		return nil, false
	}
	return o.ExternalPortalUrl, true
}

// HasExternalPortalUrl returns a boolean if a field has been set.
func (o *WlanPortal) HasExternalPortalUrl() bool {
	if o != nil && !IsNil(o.ExternalPortalUrl) {
		return true
	}

	return false
}

// SetExternalPortalUrl gets a reference to the given string and assigns it to the ExternalPortalUrl field.
func (o *WlanPortal) SetExternalPortalUrl(v string) {
	o.ExternalPortalUrl = &v
}

// GetFacebookClientId returns the FacebookClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetFacebookClientId() string {
	if o == nil || IsNil(o.FacebookClientId.Get()) {
		var ret string
		return ret
	}
	return *o.FacebookClientId.Get()
}

// GetFacebookClientIdOk returns a tuple with the FacebookClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetFacebookClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FacebookClientId.Get(), o.FacebookClientId.IsSet()
}

// HasFacebookClientId returns a boolean if a field has been set.
func (o *WlanPortal) HasFacebookClientId() bool {
	if o != nil && o.FacebookClientId.IsSet() {
		return true
	}

	return false
}

// SetFacebookClientId gets a reference to the given NullableString and assigns it to the FacebookClientId field.
func (o *WlanPortal) SetFacebookClientId(v string) {
	o.FacebookClientId.Set(&v)
}
// SetFacebookClientIdNil sets the value for FacebookClientId to be an explicit nil
func (o *WlanPortal) SetFacebookClientIdNil() {
	o.FacebookClientId.Set(nil)
}

// UnsetFacebookClientId ensures that no value is present for FacebookClientId, not even an explicit nil
func (o *WlanPortal) UnsetFacebookClientId() {
	o.FacebookClientId.Unset()
}

// GetFacebookClientSecret returns the FacebookClientSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetFacebookClientSecret() string {
	if o == nil || IsNil(o.FacebookClientSecret.Get()) {
		var ret string
		return ret
	}
	return *o.FacebookClientSecret.Get()
}

// GetFacebookClientSecretOk returns a tuple with the FacebookClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetFacebookClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FacebookClientSecret.Get(), o.FacebookClientSecret.IsSet()
}

// HasFacebookClientSecret returns a boolean if a field has been set.
func (o *WlanPortal) HasFacebookClientSecret() bool {
	if o != nil && o.FacebookClientSecret.IsSet() {
		return true
	}

	return false
}

// SetFacebookClientSecret gets a reference to the given NullableString and assigns it to the FacebookClientSecret field.
func (o *WlanPortal) SetFacebookClientSecret(v string) {
	o.FacebookClientSecret.Set(&v)
}
// SetFacebookClientSecretNil sets the value for FacebookClientSecret to be an explicit nil
func (o *WlanPortal) SetFacebookClientSecretNil() {
	o.FacebookClientSecret.Set(nil)
}

// UnsetFacebookClientSecret ensures that no value is present for FacebookClientSecret, not even an explicit nil
func (o *WlanPortal) UnsetFacebookClientSecret() {
	o.FacebookClientSecret.Unset()
}

// GetFacebookEmailDomains returns the FacebookEmailDomains field value if set, zero value otherwise.
func (o *WlanPortal) GetFacebookEmailDomains() []string {
	if o == nil || IsNil(o.FacebookEmailDomains) {
		var ret []string
		return ret
	}
	return o.FacebookEmailDomains
}

// GetFacebookEmailDomainsOk returns a tuple with the FacebookEmailDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetFacebookEmailDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.FacebookEmailDomains) {
		return nil, false
	}
	return o.FacebookEmailDomains, true
}

// HasFacebookEmailDomains returns a boolean if a field has been set.
func (o *WlanPortal) HasFacebookEmailDomains() bool {
	if o != nil && !IsNil(o.FacebookEmailDomains) {
		return true
	}

	return false
}

// SetFacebookEmailDomains gets a reference to the given []string and assigns it to the FacebookEmailDomains field.
func (o *WlanPortal) SetFacebookEmailDomains(v []string) {
	o.FacebookEmailDomains = v
}

// GetFacebookEnabled returns the FacebookEnabled field value if set, zero value otherwise.
func (o *WlanPortal) GetFacebookEnabled() bool {
	if o == nil || IsNil(o.FacebookEnabled) {
		var ret bool
		return ret
	}
	return *o.FacebookEnabled
}

// GetFacebookEnabledOk returns a tuple with the FacebookEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetFacebookEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.FacebookEnabled) {
		return nil, false
	}
	return o.FacebookEnabled, true
}

// HasFacebookEnabled returns a boolean if a field has been set.
func (o *WlanPortal) HasFacebookEnabled() bool {
	if o != nil && !IsNil(o.FacebookEnabled) {
		return true
	}

	return false
}

// SetFacebookEnabled gets a reference to the given bool and assigns it to the FacebookEnabled field.
func (o *WlanPortal) SetFacebookEnabled(v bool) {
	o.FacebookEnabled = &v
}

// GetFacebookExpire returns the FacebookExpire field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetFacebookExpire() float64 {
	if o == nil || IsNil(o.FacebookExpire.Get()) {
		var ret float64
		return ret
	}
	return *o.FacebookExpire.Get()
}

// GetFacebookExpireOk returns a tuple with the FacebookExpire field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetFacebookExpireOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.FacebookExpire.Get(), o.FacebookExpire.IsSet()
}

// HasFacebookExpire returns a boolean if a field has been set.
func (o *WlanPortal) HasFacebookExpire() bool {
	if o != nil && o.FacebookExpire.IsSet() {
		return true
	}

	return false
}

// SetFacebookExpire gets a reference to the given NullableFloat64 and assigns it to the FacebookExpire field.
func (o *WlanPortal) SetFacebookExpire(v float64) {
	o.FacebookExpire.Set(&v)
}
// SetFacebookExpireNil sets the value for FacebookExpire to be an explicit nil
func (o *WlanPortal) SetFacebookExpireNil() {
	o.FacebookExpire.Set(nil)
}

// UnsetFacebookExpire ensures that no value is present for FacebookExpire, not even an explicit nil
func (o *WlanPortal) UnsetFacebookExpire() {
	o.FacebookExpire.Unset()
}

// GetForward returns the Forward field value if set, zero value otherwise.
func (o *WlanPortal) GetForward() bool {
	if o == nil || IsNil(o.Forward) {
		var ret bool
		return ret
	}
	return *o.Forward
}

// GetForwardOk returns a tuple with the Forward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetForwardOk() (*bool, bool) {
	if o == nil || IsNil(o.Forward) {
		return nil, false
	}
	return o.Forward, true
}

// HasForward returns a boolean if a field has been set.
func (o *WlanPortal) HasForward() bool {
	if o != nil && !IsNil(o.Forward) {
		return true
	}

	return false
}

// SetForward gets a reference to the given bool and assigns it to the Forward field.
func (o *WlanPortal) SetForward(v bool) {
	o.Forward = &v
}

// GetForwardUrl returns the ForwardUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetForwardUrl() string {
	if o == nil || IsNil(o.ForwardUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ForwardUrl.Get()
}

// GetForwardUrlOk returns a tuple with the ForwardUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetForwardUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForwardUrl.Get(), o.ForwardUrl.IsSet()
}

// HasForwardUrl returns a boolean if a field has been set.
func (o *WlanPortal) HasForwardUrl() bool {
	if o != nil && o.ForwardUrl.IsSet() {
		return true
	}

	return false
}

// SetForwardUrl gets a reference to the given NullableString and assigns it to the ForwardUrl field.
func (o *WlanPortal) SetForwardUrl(v string) {
	o.ForwardUrl.Set(&v)
}
// SetForwardUrlNil sets the value for ForwardUrl to be an explicit nil
func (o *WlanPortal) SetForwardUrlNil() {
	o.ForwardUrl.Set(nil)
}

// UnsetForwardUrl ensures that no value is present for ForwardUrl, not even an explicit nil
func (o *WlanPortal) UnsetForwardUrl() {
	o.ForwardUrl.Unset()
}

// GetGoogleClientId returns the GoogleClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetGoogleClientId() string {
	if o == nil || IsNil(o.GoogleClientId.Get()) {
		var ret string
		return ret
	}
	return *o.GoogleClientId.Get()
}

// GetGoogleClientIdOk returns a tuple with the GoogleClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetGoogleClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GoogleClientId.Get(), o.GoogleClientId.IsSet()
}

// HasGoogleClientId returns a boolean if a field has been set.
func (o *WlanPortal) HasGoogleClientId() bool {
	if o != nil && o.GoogleClientId.IsSet() {
		return true
	}

	return false
}

// SetGoogleClientId gets a reference to the given NullableString and assigns it to the GoogleClientId field.
func (o *WlanPortal) SetGoogleClientId(v string) {
	o.GoogleClientId.Set(&v)
}
// SetGoogleClientIdNil sets the value for GoogleClientId to be an explicit nil
func (o *WlanPortal) SetGoogleClientIdNil() {
	o.GoogleClientId.Set(nil)
}

// UnsetGoogleClientId ensures that no value is present for GoogleClientId, not even an explicit nil
func (o *WlanPortal) UnsetGoogleClientId() {
	o.GoogleClientId.Unset()
}

// GetGoogleClientSecret returns the GoogleClientSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetGoogleClientSecret() string {
	if o == nil || IsNil(o.GoogleClientSecret.Get()) {
		var ret string
		return ret
	}
	return *o.GoogleClientSecret.Get()
}

// GetGoogleClientSecretOk returns a tuple with the GoogleClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetGoogleClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GoogleClientSecret.Get(), o.GoogleClientSecret.IsSet()
}

// HasGoogleClientSecret returns a boolean if a field has been set.
func (o *WlanPortal) HasGoogleClientSecret() bool {
	if o != nil && o.GoogleClientSecret.IsSet() {
		return true
	}

	return false
}

// SetGoogleClientSecret gets a reference to the given NullableString and assigns it to the GoogleClientSecret field.
func (o *WlanPortal) SetGoogleClientSecret(v string) {
	o.GoogleClientSecret.Set(&v)
}
// SetGoogleClientSecretNil sets the value for GoogleClientSecret to be an explicit nil
func (o *WlanPortal) SetGoogleClientSecretNil() {
	o.GoogleClientSecret.Set(nil)
}

// UnsetGoogleClientSecret ensures that no value is present for GoogleClientSecret, not even an explicit nil
func (o *WlanPortal) UnsetGoogleClientSecret() {
	o.GoogleClientSecret.Unset()
}

// GetGoogleEmailDomains returns the GoogleEmailDomains field value if set, zero value otherwise.
func (o *WlanPortal) GetGoogleEmailDomains() []string {
	if o == nil || IsNil(o.GoogleEmailDomains) {
		var ret []string
		return ret
	}
	return o.GoogleEmailDomains
}

// GetGoogleEmailDomainsOk returns a tuple with the GoogleEmailDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetGoogleEmailDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.GoogleEmailDomains) {
		return nil, false
	}
	return o.GoogleEmailDomains, true
}

// HasGoogleEmailDomains returns a boolean if a field has been set.
func (o *WlanPortal) HasGoogleEmailDomains() bool {
	if o != nil && !IsNil(o.GoogleEmailDomains) {
		return true
	}

	return false
}

// SetGoogleEmailDomains gets a reference to the given []string and assigns it to the GoogleEmailDomains field.
func (o *WlanPortal) SetGoogleEmailDomains(v []string) {
	o.GoogleEmailDomains = v
}

// GetGoogleEnabled returns the GoogleEnabled field value if set, zero value otherwise.
func (o *WlanPortal) GetGoogleEnabled() bool {
	if o == nil || IsNil(o.GoogleEnabled) {
		var ret bool
		return ret
	}
	return *o.GoogleEnabled
}

// GetGoogleEnabledOk returns a tuple with the GoogleEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetGoogleEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.GoogleEnabled) {
		return nil, false
	}
	return o.GoogleEnabled, true
}

// HasGoogleEnabled returns a boolean if a field has been set.
func (o *WlanPortal) HasGoogleEnabled() bool {
	if o != nil && !IsNil(o.GoogleEnabled) {
		return true
	}

	return false
}

// SetGoogleEnabled gets a reference to the given bool and assigns it to the GoogleEnabled field.
func (o *WlanPortal) SetGoogleEnabled(v bool) {
	o.GoogleEnabled = &v
}

// GetGoogleExpire returns the GoogleExpire field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetGoogleExpire() float64 {
	if o == nil || IsNil(o.GoogleExpire.Get()) {
		var ret float64
		return ret
	}
	return *o.GoogleExpire.Get()
}

// GetGoogleExpireOk returns a tuple with the GoogleExpire field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetGoogleExpireOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.GoogleExpire.Get(), o.GoogleExpire.IsSet()
}

// HasGoogleExpire returns a boolean if a field has been set.
func (o *WlanPortal) HasGoogleExpire() bool {
	if o != nil && o.GoogleExpire.IsSet() {
		return true
	}

	return false
}

// SetGoogleExpire gets a reference to the given NullableFloat64 and assigns it to the GoogleExpire field.
func (o *WlanPortal) SetGoogleExpire(v float64) {
	o.GoogleExpire.Set(&v)
}
// SetGoogleExpireNil sets the value for GoogleExpire to be an explicit nil
func (o *WlanPortal) SetGoogleExpireNil() {
	o.GoogleExpire.Set(nil)
}

// UnsetGoogleExpire ensures that no value is present for GoogleExpire, not even an explicit nil
func (o *WlanPortal) UnsetGoogleExpire() {
	o.GoogleExpire.Unset()
}

// GetGupshupPassword returns the GupshupPassword field value if set, zero value otherwise.
func (o *WlanPortal) GetGupshupPassword() string {
	if o == nil || IsNil(o.GupshupPassword) {
		var ret string
		return ret
	}
	return *o.GupshupPassword
}

// GetGupshupPasswordOk returns a tuple with the GupshupPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetGupshupPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.GupshupPassword) {
		return nil, false
	}
	return o.GupshupPassword, true
}

// HasGupshupPassword returns a boolean if a field has been set.
func (o *WlanPortal) HasGupshupPassword() bool {
	if o != nil && !IsNil(o.GupshupPassword) {
		return true
	}

	return false
}

// SetGupshupPassword gets a reference to the given string and assigns it to the GupshupPassword field.
func (o *WlanPortal) SetGupshupPassword(v string) {
	o.GupshupPassword = &v
}

// GetGupshupUserid returns the GupshupUserid field value if set, zero value otherwise.
func (o *WlanPortal) GetGupshupUserid() string {
	if o == nil || IsNil(o.GupshupUserid) {
		var ret string
		return ret
	}
	return *o.GupshupUserid
}

// GetGupshupUseridOk returns a tuple with the GupshupUserid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetGupshupUseridOk() (*string, bool) {
	if o == nil || IsNil(o.GupshupUserid) {
		return nil, false
	}
	return o.GupshupUserid, true
}

// HasGupshupUserid returns a boolean if a field has been set.
func (o *WlanPortal) HasGupshupUserid() bool {
	if o != nil && !IsNil(o.GupshupUserid) {
		return true
	}

	return false
}

// SetGupshupUserid gets a reference to the given string and assigns it to the GupshupUserid field.
func (o *WlanPortal) SetGupshupUserid(v string) {
	o.GupshupUserid = &v
}

// GetMicrosoftClientId returns the MicrosoftClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetMicrosoftClientId() string {
	if o == nil || IsNil(o.MicrosoftClientId.Get()) {
		var ret string
		return ret
	}
	return *o.MicrosoftClientId.Get()
}

// GetMicrosoftClientIdOk returns a tuple with the MicrosoftClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetMicrosoftClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MicrosoftClientId.Get(), o.MicrosoftClientId.IsSet()
}

// HasMicrosoftClientId returns a boolean if a field has been set.
func (o *WlanPortal) HasMicrosoftClientId() bool {
	if o != nil && o.MicrosoftClientId.IsSet() {
		return true
	}

	return false
}

// SetMicrosoftClientId gets a reference to the given NullableString and assigns it to the MicrosoftClientId field.
func (o *WlanPortal) SetMicrosoftClientId(v string) {
	o.MicrosoftClientId.Set(&v)
}
// SetMicrosoftClientIdNil sets the value for MicrosoftClientId to be an explicit nil
func (o *WlanPortal) SetMicrosoftClientIdNil() {
	o.MicrosoftClientId.Set(nil)
}

// UnsetMicrosoftClientId ensures that no value is present for MicrosoftClientId, not even an explicit nil
func (o *WlanPortal) UnsetMicrosoftClientId() {
	o.MicrosoftClientId.Unset()
}

// GetMicrosoftClientSecret returns the MicrosoftClientSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetMicrosoftClientSecret() string {
	if o == nil || IsNil(o.MicrosoftClientSecret.Get()) {
		var ret string
		return ret
	}
	return *o.MicrosoftClientSecret.Get()
}

// GetMicrosoftClientSecretOk returns a tuple with the MicrosoftClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetMicrosoftClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MicrosoftClientSecret.Get(), o.MicrosoftClientSecret.IsSet()
}

// HasMicrosoftClientSecret returns a boolean if a field has been set.
func (o *WlanPortal) HasMicrosoftClientSecret() bool {
	if o != nil && o.MicrosoftClientSecret.IsSet() {
		return true
	}

	return false
}

// SetMicrosoftClientSecret gets a reference to the given NullableString and assigns it to the MicrosoftClientSecret field.
func (o *WlanPortal) SetMicrosoftClientSecret(v string) {
	o.MicrosoftClientSecret.Set(&v)
}
// SetMicrosoftClientSecretNil sets the value for MicrosoftClientSecret to be an explicit nil
func (o *WlanPortal) SetMicrosoftClientSecretNil() {
	o.MicrosoftClientSecret.Set(nil)
}

// UnsetMicrosoftClientSecret ensures that no value is present for MicrosoftClientSecret, not even an explicit nil
func (o *WlanPortal) UnsetMicrosoftClientSecret() {
	o.MicrosoftClientSecret.Unset()
}

// GetMicrosoftEmailDomains returns the MicrosoftEmailDomains field value if set, zero value otherwise.
func (o *WlanPortal) GetMicrosoftEmailDomains() []string {
	if o == nil || IsNil(o.MicrosoftEmailDomains) {
		var ret []string
		return ret
	}
	return o.MicrosoftEmailDomains
}

// GetMicrosoftEmailDomainsOk returns a tuple with the MicrosoftEmailDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetMicrosoftEmailDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.MicrosoftEmailDomains) {
		return nil, false
	}
	return o.MicrosoftEmailDomains, true
}

// HasMicrosoftEmailDomains returns a boolean if a field has been set.
func (o *WlanPortal) HasMicrosoftEmailDomains() bool {
	if o != nil && !IsNil(o.MicrosoftEmailDomains) {
		return true
	}

	return false
}

// SetMicrosoftEmailDomains gets a reference to the given []string and assigns it to the MicrosoftEmailDomains field.
func (o *WlanPortal) SetMicrosoftEmailDomains(v []string) {
	o.MicrosoftEmailDomains = v
}

// GetMicrosoftEnabled returns the MicrosoftEnabled field value if set, zero value otherwise.
func (o *WlanPortal) GetMicrosoftEnabled() bool {
	if o == nil || IsNil(o.MicrosoftEnabled) {
		var ret bool
		return ret
	}
	return *o.MicrosoftEnabled
}

// GetMicrosoftEnabledOk returns a tuple with the MicrosoftEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetMicrosoftEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MicrosoftEnabled) {
		return nil, false
	}
	return o.MicrosoftEnabled, true
}

// HasMicrosoftEnabled returns a boolean if a field has been set.
func (o *WlanPortal) HasMicrosoftEnabled() bool {
	if o != nil && !IsNil(o.MicrosoftEnabled) {
		return true
	}

	return false
}

// SetMicrosoftEnabled gets a reference to the given bool and assigns it to the MicrosoftEnabled field.
func (o *WlanPortal) SetMicrosoftEnabled(v bool) {
	o.MicrosoftEnabled = &v
}

// GetMicrosoftExpire returns the MicrosoftExpire field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetMicrosoftExpire() float64 {
	if o == nil || IsNil(o.MicrosoftExpire.Get()) {
		var ret float64
		return ret
	}
	return *o.MicrosoftExpire.Get()
}

// GetMicrosoftExpireOk returns a tuple with the MicrosoftExpire field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetMicrosoftExpireOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MicrosoftExpire.Get(), o.MicrosoftExpire.IsSet()
}

// HasMicrosoftExpire returns a boolean if a field has been set.
func (o *WlanPortal) HasMicrosoftExpire() bool {
	if o != nil && o.MicrosoftExpire.IsSet() {
		return true
	}

	return false
}

// SetMicrosoftExpire gets a reference to the given NullableFloat64 and assigns it to the MicrosoftExpire field.
func (o *WlanPortal) SetMicrosoftExpire(v float64) {
	o.MicrosoftExpire.Set(&v)
}
// SetMicrosoftExpireNil sets the value for MicrosoftExpire to be an explicit nil
func (o *WlanPortal) SetMicrosoftExpireNil() {
	o.MicrosoftExpire.Set(nil)
}

// UnsetMicrosoftExpire ensures that no value is present for MicrosoftExpire, not even an explicit nil
func (o *WlanPortal) UnsetMicrosoftExpire() {
	o.MicrosoftExpire.Unset()
}

// GetPassphraseEnabled returns the PassphraseEnabled field value if set, zero value otherwise.
func (o *WlanPortal) GetPassphraseEnabled() bool {
	if o == nil || IsNil(o.PassphraseEnabled) {
		var ret bool
		return ret
	}
	return *o.PassphraseEnabled
}

// GetPassphraseEnabledOk returns a tuple with the PassphraseEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetPassphraseEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PassphraseEnabled) {
		return nil, false
	}
	return o.PassphraseEnabled, true
}

// HasPassphraseEnabled returns a boolean if a field has been set.
func (o *WlanPortal) HasPassphraseEnabled() bool {
	if o != nil && !IsNil(o.PassphraseEnabled) {
		return true
	}

	return false
}

// SetPassphraseEnabled gets a reference to the given bool and assigns it to the PassphraseEnabled field.
func (o *WlanPortal) SetPassphraseEnabled(v bool) {
	o.PassphraseEnabled = &v
}

// GetPassphraseExpire returns the PassphraseExpire field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetPassphraseExpire() float64 {
	if o == nil || IsNil(o.PassphraseExpire.Get()) {
		var ret float64
		return ret
	}
	return *o.PassphraseExpire.Get()
}

// GetPassphraseExpireOk returns a tuple with the PassphraseExpire field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetPassphraseExpireOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PassphraseExpire.Get(), o.PassphraseExpire.IsSet()
}

// HasPassphraseExpire returns a boolean if a field has been set.
func (o *WlanPortal) HasPassphraseExpire() bool {
	if o != nil && o.PassphraseExpire.IsSet() {
		return true
	}

	return false
}

// SetPassphraseExpire gets a reference to the given NullableFloat64 and assigns it to the PassphraseExpire field.
func (o *WlanPortal) SetPassphraseExpire(v float64) {
	o.PassphraseExpire.Set(&v)
}
// SetPassphraseExpireNil sets the value for PassphraseExpire to be an explicit nil
func (o *WlanPortal) SetPassphraseExpireNil() {
	o.PassphraseExpire.Set(nil)
}

// UnsetPassphraseExpire ensures that no value is present for PassphraseExpire, not even an explicit nil
func (o *WlanPortal) UnsetPassphraseExpire() {
	o.PassphraseExpire.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetPassword() string {
	if o == nil || IsNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *WlanPortal) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *WlanPortal) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *WlanPortal) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *WlanPortal) UnsetPassword() {
	o.Password.Unset()
}

// GetPortalAllowedHostnames returns the PortalAllowedHostnames field value if set, zero value otherwise.
func (o *WlanPortal) GetPortalAllowedHostnames() string {
	if o == nil || IsNil(o.PortalAllowedHostnames) {
		var ret string
		return ret
	}
	return *o.PortalAllowedHostnames
}

// GetPortalAllowedHostnamesOk returns a tuple with the PortalAllowedHostnames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetPortalAllowedHostnamesOk() (*string, bool) {
	if o == nil || IsNil(o.PortalAllowedHostnames) {
		return nil, false
	}
	return o.PortalAllowedHostnames, true
}

// HasPortalAllowedHostnames returns a boolean if a field has been set.
func (o *WlanPortal) HasPortalAllowedHostnames() bool {
	if o != nil && !IsNil(o.PortalAllowedHostnames) {
		return true
	}

	return false
}

// SetPortalAllowedHostnames gets a reference to the given string and assigns it to the PortalAllowedHostnames field.
func (o *WlanPortal) SetPortalAllowedHostnames(v string) {
	o.PortalAllowedHostnames = &v
}

// GetPortalAllowedSubnets returns the PortalAllowedSubnets field value if set, zero value otherwise.
func (o *WlanPortal) GetPortalAllowedSubnets() string {
	if o == nil || IsNil(o.PortalAllowedSubnets) {
		var ret string
		return ret
	}
	return *o.PortalAllowedSubnets
}

// GetPortalAllowedSubnetsOk returns a tuple with the PortalAllowedSubnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetPortalAllowedSubnetsOk() (*string, bool) {
	if o == nil || IsNil(o.PortalAllowedSubnets) {
		return nil, false
	}
	return o.PortalAllowedSubnets, true
}

// HasPortalAllowedSubnets returns a boolean if a field has been set.
func (o *WlanPortal) HasPortalAllowedSubnets() bool {
	if o != nil && !IsNil(o.PortalAllowedSubnets) {
		return true
	}

	return false
}

// SetPortalAllowedSubnets gets a reference to the given string and assigns it to the PortalAllowedSubnets field.
func (o *WlanPortal) SetPortalAllowedSubnets(v string) {
	o.PortalAllowedSubnets = &v
}

// GetPortalApiSecret returns the PortalApiSecret field value if set, zero value otherwise.
func (o *WlanPortal) GetPortalApiSecret() string {
	if o == nil || IsNil(o.PortalApiSecret) {
		var ret string
		return ret
	}
	return *o.PortalApiSecret
}

// GetPortalApiSecretOk returns a tuple with the PortalApiSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetPortalApiSecretOk() (*string, bool) {
	if o == nil || IsNil(o.PortalApiSecret) {
		return nil, false
	}
	return o.PortalApiSecret, true
}

// HasPortalApiSecret returns a boolean if a field has been set.
func (o *WlanPortal) HasPortalApiSecret() bool {
	if o != nil && !IsNil(o.PortalApiSecret) {
		return true
	}

	return false
}

// SetPortalApiSecret gets a reference to the given string and assigns it to the PortalApiSecret field.
func (o *WlanPortal) SetPortalApiSecret(v string) {
	o.PortalApiSecret = &v
}

// GetPortalDeniedHostnames returns the PortalDeniedHostnames field value if set, zero value otherwise.
func (o *WlanPortal) GetPortalDeniedHostnames() string {
	if o == nil || IsNil(o.PortalDeniedHostnames) {
		var ret string
		return ret
	}
	return *o.PortalDeniedHostnames
}

// GetPortalDeniedHostnamesOk returns a tuple with the PortalDeniedHostnames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetPortalDeniedHostnamesOk() (*string, bool) {
	if o == nil || IsNil(o.PortalDeniedHostnames) {
		return nil, false
	}
	return o.PortalDeniedHostnames, true
}

// HasPortalDeniedHostnames returns a boolean if a field has been set.
func (o *WlanPortal) HasPortalDeniedHostnames() bool {
	if o != nil && !IsNil(o.PortalDeniedHostnames) {
		return true
	}

	return false
}

// SetPortalDeniedHostnames gets a reference to the given string and assigns it to the PortalDeniedHostnames field.
func (o *WlanPortal) SetPortalDeniedHostnames(v string) {
	o.PortalDeniedHostnames = &v
}

// GetPortalImage returns the PortalImage field value if set, zero value otherwise.
func (o *WlanPortal) GetPortalImage() string {
	if o == nil || IsNil(o.PortalImage) {
		var ret string
		return ret
	}
	return *o.PortalImage
}

// GetPortalImageOk returns a tuple with the PortalImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetPortalImageOk() (*string, bool) {
	if o == nil || IsNil(o.PortalImage) {
		return nil, false
	}
	return o.PortalImage, true
}

// HasPortalImage returns a boolean if a field has been set.
func (o *WlanPortal) HasPortalImage() bool {
	if o != nil && !IsNil(o.PortalImage) {
		return true
	}

	return false
}

// SetPortalImage gets a reference to the given string and assigns it to the PortalImage field.
func (o *WlanPortal) SetPortalImage(v string) {
	o.PortalImage = &v
}

// GetPortalSsoUrl returns the PortalSsoUrl field value if set, zero value otherwise.
func (o *WlanPortal) GetPortalSsoUrl() string {
	if o == nil || IsNil(o.PortalSsoUrl) {
		var ret string
		return ret
	}
	return *o.PortalSsoUrl
}

// GetPortalSsoUrlOk returns a tuple with the PortalSsoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetPortalSsoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PortalSsoUrl) {
		return nil, false
	}
	return o.PortalSsoUrl, true
}

// HasPortalSsoUrl returns a boolean if a field has been set.
func (o *WlanPortal) HasPortalSsoUrl() bool {
	if o != nil && !IsNil(o.PortalSsoUrl) {
		return true
	}

	return false
}

// SetPortalSsoUrl gets a reference to the given string and assigns it to the PortalSsoUrl field.
func (o *WlanPortal) SetPortalSsoUrl(v string) {
	o.PortalSsoUrl = &v
}

// GetPredefinedSponsorsEnabled returns the PredefinedSponsorsEnabled field value if set, zero value otherwise.
func (o *WlanPortal) GetPredefinedSponsorsEnabled() bool {
	if o == nil || IsNil(o.PredefinedSponsorsEnabled) {
		var ret bool
		return ret
	}
	return *o.PredefinedSponsorsEnabled
}

// GetPredefinedSponsorsEnabledOk returns a tuple with the PredefinedSponsorsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetPredefinedSponsorsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PredefinedSponsorsEnabled) {
		return nil, false
	}
	return o.PredefinedSponsorsEnabled, true
}

// HasPredefinedSponsorsEnabled returns a boolean if a field has been set.
func (o *WlanPortal) HasPredefinedSponsorsEnabled() bool {
	if o != nil && !IsNil(o.PredefinedSponsorsEnabled) {
		return true
	}

	return false
}

// SetPredefinedSponsorsEnabled gets a reference to the given bool and assigns it to the PredefinedSponsorsEnabled field.
func (o *WlanPortal) SetPredefinedSponsorsEnabled(v bool) {
	o.PredefinedSponsorsEnabled = &v
}

// GetPrivacy returns the Privacy field value if set, zero value otherwise.
func (o *WlanPortal) GetPrivacy() bool {
	if o == nil || IsNil(o.Privacy) {
		var ret bool
		return ret
	}
	return *o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetPrivacyOk() (*bool, bool) {
	if o == nil || IsNil(o.Privacy) {
		return nil, false
	}
	return o.Privacy, true
}

// HasPrivacy returns a boolean if a field has been set.
func (o *WlanPortal) HasPrivacy() bool {
	if o != nil && !IsNil(o.Privacy) {
		return true
	}

	return false
}

// SetPrivacy gets a reference to the given bool and assigns it to the Privacy field.
func (o *WlanPortal) SetPrivacy(v bool) {
	o.Privacy = &v
}

// GetPuzzelPassword returns the PuzzelPassword field value if set, zero value otherwise.
func (o *WlanPortal) GetPuzzelPassword() string {
	if o == nil || IsNil(o.PuzzelPassword) {
		var ret string
		return ret
	}
	return *o.PuzzelPassword
}

// GetPuzzelPasswordOk returns a tuple with the PuzzelPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetPuzzelPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.PuzzelPassword) {
		return nil, false
	}
	return o.PuzzelPassword, true
}

// HasPuzzelPassword returns a boolean if a field has been set.
func (o *WlanPortal) HasPuzzelPassword() bool {
	if o != nil && !IsNil(o.PuzzelPassword) {
		return true
	}

	return false
}

// SetPuzzelPassword gets a reference to the given string and assigns it to the PuzzelPassword field.
func (o *WlanPortal) SetPuzzelPassword(v string) {
	o.PuzzelPassword = &v
}

// GetPuzzelServiceId returns the PuzzelServiceId field value if set, zero value otherwise.
func (o *WlanPortal) GetPuzzelServiceId() string {
	if o == nil || IsNil(o.PuzzelServiceId) {
		var ret string
		return ret
	}
	return *o.PuzzelServiceId
}

// GetPuzzelServiceIdOk returns a tuple with the PuzzelServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetPuzzelServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.PuzzelServiceId) {
		return nil, false
	}
	return o.PuzzelServiceId, true
}

// HasPuzzelServiceId returns a boolean if a field has been set.
func (o *WlanPortal) HasPuzzelServiceId() bool {
	if o != nil && !IsNil(o.PuzzelServiceId) {
		return true
	}

	return false
}

// SetPuzzelServiceId gets a reference to the given string and assigns it to the PuzzelServiceId field.
func (o *WlanPortal) SetPuzzelServiceId(v string) {
	o.PuzzelServiceId = &v
}

// GetPuzzelUsername returns the PuzzelUsername field value if set, zero value otherwise.
func (o *WlanPortal) GetPuzzelUsername() string {
	if o == nil || IsNil(o.PuzzelUsername) {
		var ret string
		return ret
	}
	return *o.PuzzelUsername
}

// GetPuzzelUsernameOk returns a tuple with the PuzzelUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetPuzzelUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.PuzzelUsername) {
		return nil, false
	}
	return o.PuzzelUsername, true
}

// HasPuzzelUsername returns a boolean if a field has been set.
func (o *WlanPortal) HasPuzzelUsername() bool {
	if o != nil && !IsNil(o.PuzzelUsername) {
		return true
	}

	return false
}

// SetPuzzelUsername gets a reference to the given string and assigns it to the PuzzelUsername field.
func (o *WlanPortal) SetPuzzelUsername(v string) {
	o.PuzzelUsername = &v
}

// GetSmsMessageFormat returns the SmsMessageFormat field value if set, zero value otherwise.
func (o *WlanPortal) GetSmsMessageFormat() string {
	if o == nil || IsNil(o.SmsMessageFormat) {
		var ret string
		return ret
	}
	return *o.SmsMessageFormat
}

// GetSmsMessageFormatOk returns a tuple with the SmsMessageFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSmsMessageFormatOk() (*string, bool) {
	if o == nil || IsNil(o.SmsMessageFormat) {
		return nil, false
	}
	return o.SmsMessageFormat, true
}

// HasSmsMessageFormat returns a boolean if a field has been set.
func (o *WlanPortal) HasSmsMessageFormat() bool {
	if o != nil && !IsNil(o.SmsMessageFormat) {
		return true
	}

	return false
}

// SetSmsMessageFormat gets a reference to the given string and assigns it to the SmsMessageFormat field.
func (o *WlanPortal) SetSmsMessageFormat(v string) {
	o.SmsMessageFormat = &v
}

// GetSmsEnabled returns the SmsEnabled field value if set, zero value otherwise.
func (o *WlanPortal) GetSmsEnabled() bool {
	if o == nil || IsNil(o.SmsEnabled) {
		var ret bool
		return ret
	}
	return *o.SmsEnabled
}

// GetSmsEnabledOk returns a tuple with the SmsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSmsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SmsEnabled) {
		return nil, false
	}
	return o.SmsEnabled, true
}

// HasSmsEnabled returns a boolean if a field has been set.
func (o *WlanPortal) HasSmsEnabled() bool {
	if o != nil && !IsNil(o.SmsEnabled) {
		return true
	}

	return false
}

// SetSmsEnabled gets a reference to the given bool and assigns it to the SmsEnabled field.
func (o *WlanPortal) SetSmsEnabled(v bool) {
	o.SmsEnabled = &v
}

// GetSmsExpire returns the SmsExpire field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetSmsExpire() float64 {
	if o == nil || IsNil(o.SmsExpire.Get()) {
		var ret float64
		return ret
	}
	return *o.SmsExpire.Get()
}

// GetSmsExpireOk returns a tuple with the SmsExpire field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetSmsExpireOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SmsExpire.Get(), o.SmsExpire.IsSet()
}

// HasSmsExpire returns a boolean if a field has been set.
func (o *WlanPortal) HasSmsExpire() bool {
	if o != nil && o.SmsExpire.IsSet() {
		return true
	}

	return false
}

// SetSmsExpire gets a reference to the given NullableFloat64 and assigns it to the SmsExpire field.
func (o *WlanPortal) SetSmsExpire(v float64) {
	o.SmsExpire.Set(&v)
}
// SetSmsExpireNil sets the value for SmsExpire to be an explicit nil
func (o *WlanPortal) SetSmsExpireNil() {
	o.SmsExpire.Set(nil)
}

// UnsetSmsExpire ensures that no value is present for SmsExpire, not even an explicit nil
func (o *WlanPortal) UnsetSmsExpire() {
	o.SmsExpire.Unset()
}

// GetSmsProvider returns the SmsProvider field value if set, zero value otherwise.
func (o *WlanPortal) GetSmsProvider() WlanPortalSmsProvider {
	if o == nil || IsNil(o.SmsProvider) {
		var ret WlanPortalSmsProvider
		return ret
	}
	return *o.SmsProvider
}

// GetSmsProviderOk returns a tuple with the SmsProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSmsProviderOk() (*WlanPortalSmsProvider, bool) {
	if o == nil || IsNil(o.SmsProvider) {
		return nil, false
	}
	return o.SmsProvider, true
}

// HasSmsProvider returns a boolean if a field has been set.
func (o *WlanPortal) HasSmsProvider() bool {
	if o != nil && !IsNil(o.SmsProvider) {
		return true
	}

	return false
}

// SetSmsProvider gets a reference to the given WlanPortalSmsProvider and assigns it to the SmsProvider field.
func (o *WlanPortal) SetSmsProvider(v WlanPortalSmsProvider) {
	o.SmsProvider = &v
}

// GetSponsorAutoApprove returns the SponsorAutoApprove field value if set, zero value otherwise.
func (o *WlanPortal) GetSponsorAutoApprove() bool {
	if o == nil || IsNil(o.SponsorAutoApprove) {
		var ret bool
		return ret
	}
	return *o.SponsorAutoApprove
}

// GetSponsorAutoApproveOk returns a tuple with the SponsorAutoApprove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSponsorAutoApproveOk() (*bool, bool) {
	if o == nil || IsNil(o.SponsorAutoApprove) {
		return nil, false
	}
	return o.SponsorAutoApprove, true
}

// HasSponsorAutoApprove returns a boolean if a field has been set.
func (o *WlanPortal) HasSponsorAutoApprove() bool {
	if o != nil && !IsNil(o.SponsorAutoApprove) {
		return true
	}

	return false
}

// SetSponsorAutoApprove gets a reference to the given bool and assigns it to the SponsorAutoApprove field.
func (o *WlanPortal) SetSponsorAutoApprove(v bool) {
	o.SponsorAutoApprove = &v
}

// GetSponsorEmailDomains returns the SponsorEmailDomains field value if set, zero value otherwise.
func (o *WlanPortal) GetSponsorEmailDomains() []string {
	if o == nil || IsNil(o.SponsorEmailDomains) {
		var ret []string
		return ret
	}
	return o.SponsorEmailDomains
}

// GetSponsorEmailDomainsOk returns a tuple with the SponsorEmailDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSponsorEmailDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.SponsorEmailDomains) {
		return nil, false
	}
	return o.SponsorEmailDomains, true
}

// HasSponsorEmailDomains returns a boolean if a field has been set.
func (o *WlanPortal) HasSponsorEmailDomains() bool {
	if o != nil && !IsNil(o.SponsorEmailDomains) {
		return true
	}

	return false
}

// SetSponsorEmailDomains gets a reference to the given []string and assigns it to the SponsorEmailDomains field.
func (o *WlanPortal) SetSponsorEmailDomains(v []string) {
	o.SponsorEmailDomains = v
}

// GetSponsorEnabled returns the SponsorEnabled field value if set, zero value otherwise.
func (o *WlanPortal) GetSponsorEnabled() bool {
	if o == nil || IsNil(o.SponsorEnabled) {
		var ret bool
		return ret
	}
	return *o.SponsorEnabled
}

// GetSponsorEnabledOk returns a tuple with the SponsorEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSponsorEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SponsorEnabled) {
		return nil, false
	}
	return o.SponsorEnabled, true
}

// HasSponsorEnabled returns a boolean if a field has been set.
func (o *WlanPortal) HasSponsorEnabled() bool {
	if o != nil && !IsNil(o.SponsorEnabled) {
		return true
	}

	return false
}

// SetSponsorEnabled gets a reference to the given bool and assigns it to the SponsorEnabled field.
func (o *WlanPortal) SetSponsorEnabled(v bool) {
	o.SponsorEnabled = &v
}

// GetSponsorExpire returns the SponsorExpire field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetSponsorExpire() float64 {
	if o == nil || IsNil(o.SponsorExpire.Get()) {
		var ret float64
		return ret
	}
	return *o.SponsorExpire.Get()
}

// GetSponsorExpireOk returns a tuple with the SponsorExpire field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetSponsorExpireOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SponsorExpire.Get(), o.SponsorExpire.IsSet()
}

// HasSponsorExpire returns a boolean if a field has been set.
func (o *WlanPortal) HasSponsorExpire() bool {
	if o != nil && o.SponsorExpire.IsSet() {
		return true
	}

	return false
}

// SetSponsorExpire gets a reference to the given NullableFloat64 and assigns it to the SponsorExpire field.
func (o *WlanPortal) SetSponsorExpire(v float64) {
	o.SponsorExpire.Set(&v)
}
// SetSponsorExpireNil sets the value for SponsorExpire to be an explicit nil
func (o *WlanPortal) SetSponsorExpireNil() {
	o.SponsorExpire.Set(nil)
}

// UnsetSponsorExpire ensures that no value is present for SponsorExpire, not even an explicit nil
func (o *WlanPortal) UnsetSponsorExpire() {
	o.SponsorExpire.Unset()
}

// GetSponsorLinkValidityDuration returns the SponsorLinkValidityDuration field value if set, zero value otherwise.
func (o *WlanPortal) GetSponsorLinkValidityDuration() int32 {
	if o == nil || IsNil(o.SponsorLinkValidityDuration) {
		var ret int32
		return ret
	}
	return *o.SponsorLinkValidityDuration
}

// GetSponsorLinkValidityDurationOk returns a tuple with the SponsorLinkValidityDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSponsorLinkValidityDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.SponsorLinkValidityDuration) {
		return nil, false
	}
	return o.SponsorLinkValidityDuration, true
}

// HasSponsorLinkValidityDuration returns a boolean if a field has been set.
func (o *WlanPortal) HasSponsorLinkValidityDuration() bool {
	if o != nil && !IsNil(o.SponsorLinkValidityDuration) {
		return true
	}

	return false
}

// SetSponsorLinkValidityDuration gets a reference to the given int32 and assigns it to the SponsorLinkValidityDuration field.
func (o *WlanPortal) SetSponsorLinkValidityDuration(v int32) {
	o.SponsorLinkValidityDuration = &v
}

// GetSponsorNotifyAll returns the SponsorNotifyAll field value if set, zero value otherwise.
func (o *WlanPortal) GetSponsorNotifyAll() bool {
	if o == nil || IsNil(o.SponsorNotifyAll) {
		var ret bool
		return ret
	}
	return *o.SponsorNotifyAll
}

// GetSponsorNotifyAllOk returns a tuple with the SponsorNotifyAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSponsorNotifyAllOk() (*bool, bool) {
	if o == nil || IsNil(o.SponsorNotifyAll) {
		return nil, false
	}
	return o.SponsorNotifyAll, true
}

// HasSponsorNotifyAll returns a boolean if a field has been set.
func (o *WlanPortal) HasSponsorNotifyAll() bool {
	if o != nil && !IsNil(o.SponsorNotifyAll) {
		return true
	}

	return false
}

// SetSponsorNotifyAll gets a reference to the given bool and assigns it to the SponsorNotifyAll field.
func (o *WlanPortal) SetSponsorNotifyAll(v bool) {
	o.SponsorNotifyAll = &v
}

// GetSponsorStatusNotify returns the SponsorStatusNotify field value if set, zero value otherwise.
func (o *WlanPortal) GetSponsorStatusNotify() bool {
	if o == nil || IsNil(o.SponsorStatusNotify) {
		var ret bool
		return ret
	}
	return *o.SponsorStatusNotify
}

// GetSponsorStatusNotifyOk returns a tuple with the SponsorStatusNotify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSponsorStatusNotifyOk() (*bool, bool) {
	if o == nil || IsNil(o.SponsorStatusNotify) {
		return nil, false
	}
	return o.SponsorStatusNotify, true
}

// HasSponsorStatusNotify returns a boolean if a field has been set.
func (o *WlanPortal) HasSponsorStatusNotify() bool {
	if o != nil && !IsNil(o.SponsorStatusNotify) {
		return true
	}

	return false
}

// SetSponsorStatusNotify gets a reference to the given bool and assigns it to the SponsorStatusNotify field.
func (o *WlanPortal) SetSponsorStatusNotify(v bool) {
	o.SponsorStatusNotify = &v
}

// GetSponsors returns the Sponsors field value if set, zero value otherwise.
func (o *WlanPortal) GetSponsors() map[string]string {
	if o == nil || IsNil(o.Sponsors) {
		var ret map[string]string
		return ret
	}
	return *o.Sponsors
}

// GetSponsorsOk returns a tuple with the Sponsors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSponsorsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Sponsors) {
		return nil, false
	}
	return o.Sponsors, true
}

// HasSponsors returns a boolean if a field has been set.
func (o *WlanPortal) HasSponsors() bool {
	if o != nil && !IsNil(o.Sponsors) {
		return true
	}

	return false
}

// SetSponsors gets a reference to the given map[string]string and assigns it to the Sponsors field.
func (o *WlanPortal) SetSponsors(v map[string]string) {
	o.Sponsors = &v
}

// GetSsoDefaultRole returns the SsoDefaultRole field value if set, zero value otherwise.
func (o *WlanPortal) GetSsoDefaultRole() string {
	if o == nil || IsNil(o.SsoDefaultRole) {
		var ret string
		return ret
	}
	return *o.SsoDefaultRole
}

// GetSsoDefaultRoleOk returns a tuple with the SsoDefaultRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSsoDefaultRoleOk() (*string, bool) {
	if o == nil || IsNil(o.SsoDefaultRole) {
		return nil, false
	}
	return o.SsoDefaultRole, true
}

// HasSsoDefaultRole returns a boolean if a field has been set.
func (o *WlanPortal) HasSsoDefaultRole() bool {
	if o != nil && !IsNil(o.SsoDefaultRole) {
		return true
	}

	return false
}

// SetSsoDefaultRole gets a reference to the given string and assigns it to the SsoDefaultRole field.
func (o *WlanPortal) SetSsoDefaultRole(v string) {
	o.SsoDefaultRole = &v
}

// GetSsoForcedRole returns the SsoForcedRole field value if set, zero value otherwise.
func (o *WlanPortal) GetSsoForcedRole() string {
	if o == nil || IsNil(o.SsoForcedRole) {
		var ret string
		return ret
	}
	return *o.SsoForcedRole
}

// GetSsoForcedRoleOk returns a tuple with the SsoForcedRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSsoForcedRoleOk() (*string, bool) {
	if o == nil || IsNil(o.SsoForcedRole) {
		return nil, false
	}
	return o.SsoForcedRole, true
}

// HasSsoForcedRole returns a boolean if a field has been set.
func (o *WlanPortal) HasSsoForcedRole() bool {
	if o != nil && !IsNil(o.SsoForcedRole) {
		return true
	}

	return false
}

// SetSsoForcedRole gets a reference to the given string and assigns it to the SsoForcedRole field.
func (o *WlanPortal) SetSsoForcedRole(v string) {
	o.SsoForcedRole = &v
}

// GetSsoIdpCert returns the SsoIdpCert field value if set, zero value otherwise.
func (o *WlanPortal) GetSsoIdpCert() string {
	if o == nil || IsNil(o.SsoIdpCert) {
		var ret string
		return ret
	}
	return *o.SsoIdpCert
}

// GetSsoIdpCertOk returns a tuple with the SsoIdpCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSsoIdpCertOk() (*string, bool) {
	if o == nil || IsNil(o.SsoIdpCert) {
		return nil, false
	}
	return o.SsoIdpCert, true
}

// HasSsoIdpCert returns a boolean if a field has been set.
func (o *WlanPortal) HasSsoIdpCert() bool {
	if o != nil && !IsNil(o.SsoIdpCert) {
		return true
	}

	return false
}

// SetSsoIdpCert gets a reference to the given string and assigns it to the SsoIdpCert field.
func (o *WlanPortal) SetSsoIdpCert(v string) {
	o.SsoIdpCert = &v
}

// GetSsoIdpSignAlgo returns the SsoIdpSignAlgo field value if set, zero value otherwise.
func (o *WlanPortal) GetSsoIdpSignAlgo() string {
	if o == nil || IsNil(o.SsoIdpSignAlgo) {
		var ret string
		return ret
	}
	return *o.SsoIdpSignAlgo
}

// GetSsoIdpSignAlgoOk returns a tuple with the SsoIdpSignAlgo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSsoIdpSignAlgoOk() (*string, bool) {
	if o == nil || IsNil(o.SsoIdpSignAlgo) {
		return nil, false
	}
	return o.SsoIdpSignAlgo, true
}

// HasSsoIdpSignAlgo returns a boolean if a field has been set.
func (o *WlanPortal) HasSsoIdpSignAlgo() bool {
	if o != nil && !IsNil(o.SsoIdpSignAlgo) {
		return true
	}

	return false
}

// SetSsoIdpSignAlgo gets a reference to the given string and assigns it to the SsoIdpSignAlgo field.
func (o *WlanPortal) SetSsoIdpSignAlgo(v string) {
	o.SsoIdpSignAlgo = &v
}

// GetSsoIdpSsoUrl returns the SsoIdpSsoUrl field value if set, zero value otherwise.
func (o *WlanPortal) GetSsoIdpSsoUrl() string {
	if o == nil || IsNil(o.SsoIdpSsoUrl) {
		var ret string
		return ret
	}
	return *o.SsoIdpSsoUrl
}

// GetSsoIdpSsoUrlOk returns a tuple with the SsoIdpSsoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSsoIdpSsoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SsoIdpSsoUrl) {
		return nil, false
	}
	return o.SsoIdpSsoUrl, true
}

// HasSsoIdpSsoUrl returns a boolean if a field has been set.
func (o *WlanPortal) HasSsoIdpSsoUrl() bool {
	if o != nil && !IsNil(o.SsoIdpSsoUrl) {
		return true
	}

	return false
}

// SetSsoIdpSsoUrl gets a reference to the given string and assigns it to the SsoIdpSsoUrl field.
func (o *WlanPortal) SetSsoIdpSsoUrl(v string) {
	o.SsoIdpSsoUrl = &v
}

// GetSsoIssuer returns the SsoIssuer field value if set, zero value otherwise.
func (o *WlanPortal) GetSsoIssuer() string {
	if o == nil || IsNil(o.SsoIssuer) {
		var ret string
		return ret
	}
	return *o.SsoIssuer
}

// GetSsoIssuerOk returns a tuple with the SsoIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSsoIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.SsoIssuer) {
		return nil, false
	}
	return o.SsoIssuer, true
}

// HasSsoIssuer returns a boolean if a field has been set.
func (o *WlanPortal) HasSsoIssuer() bool {
	if o != nil && !IsNil(o.SsoIssuer) {
		return true
	}

	return false
}

// SetSsoIssuer gets a reference to the given string and assigns it to the SsoIssuer field.
func (o *WlanPortal) SetSsoIssuer(v string) {
	o.SsoIssuer = &v
}

// GetSsoNameidFormat returns the SsoNameidFormat field value if set, zero value otherwise.
func (o *WlanPortal) GetSsoNameidFormat() WlanPortalSsoNameidFormat {
	if o == nil || IsNil(o.SsoNameidFormat) {
		var ret WlanPortalSsoNameidFormat
		return ret
	}
	return *o.SsoNameidFormat
}

// GetSsoNameidFormatOk returns a tuple with the SsoNameidFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetSsoNameidFormatOk() (*WlanPortalSsoNameidFormat, bool) {
	if o == nil || IsNil(o.SsoNameidFormat) {
		return nil, false
	}
	return o.SsoNameidFormat, true
}

// HasSsoNameidFormat returns a boolean if a field has been set.
func (o *WlanPortal) HasSsoNameidFormat() bool {
	if o != nil && !IsNil(o.SsoNameidFormat) {
		return true
	}

	return false
}

// SetSsoNameidFormat gets a reference to the given WlanPortalSsoNameidFormat and assigns it to the SsoNameidFormat field.
func (o *WlanPortal) SetSsoNameidFormat(v WlanPortalSsoNameidFormat) {
	o.SsoNameidFormat = &v
}

// GetTelstraClientId returns the TelstraClientId field value if set, zero value otherwise.
func (o *WlanPortal) GetTelstraClientId() string {
	if o == nil || IsNil(o.TelstraClientId) {
		var ret string
		return ret
	}
	return *o.TelstraClientId
}

// GetTelstraClientIdOk returns a tuple with the TelstraClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetTelstraClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.TelstraClientId) {
		return nil, false
	}
	return o.TelstraClientId, true
}

// HasTelstraClientId returns a boolean if a field has been set.
func (o *WlanPortal) HasTelstraClientId() bool {
	if o != nil && !IsNil(o.TelstraClientId) {
		return true
	}

	return false
}

// SetTelstraClientId gets a reference to the given string and assigns it to the TelstraClientId field.
func (o *WlanPortal) SetTelstraClientId(v string) {
	o.TelstraClientId = &v
}

// GetTelstraClientSecret returns the TelstraClientSecret field value if set, zero value otherwise.
func (o *WlanPortal) GetTelstraClientSecret() string {
	if o == nil || IsNil(o.TelstraClientSecret) {
		var ret string
		return ret
	}
	return *o.TelstraClientSecret
}

// GetTelstraClientSecretOk returns a tuple with the TelstraClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetTelstraClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.TelstraClientSecret) {
		return nil, false
	}
	return o.TelstraClientSecret, true
}

// HasTelstraClientSecret returns a boolean if a field has been set.
func (o *WlanPortal) HasTelstraClientSecret() bool {
	if o != nil && !IsNil(o.TelstraClientSecret) {
		return true
	}

	return false
}

// SetTelstraClientSecret gets a reference to the given string and assigns it to the TelstraClientSecret field.
func (o *WlanPortal) SetTelstraClientSecret(v string) {
	o.TelstraClientSecret = &v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *WlanPortal) GetThumbnail() string {
	if o == nil || IsNil(o.Thumbnail) {
		var ret string
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortal) GetThumbnailOk() (*string, bool) {
	if o == nil || IsNil(o.Thumbnail) {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *WlanPortal) HasThumbnail() bool {
	if o != nil && !IsNil(o.Thumbnail) {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given string and assigns it to the Thumbnail field.
func (o *WlanPortal) SetThumbnail(v string) {
	o.Thumbnail = &v
}

// GetTwilioAuthToken returns the TwilioAuthToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetTwilioAuthToken() string {
	if o == nil || IsNil(o.TwilioAuthToken.Get()) {
		var ret string
		return ret
	}
	return *o.TwilioAuthToken.Get()
}

// GetTwilioAuthTokenOk returns a tuple with the TwilioAuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetTwilioAuthTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwilioAuthToken.Get(), o.TwilioAuthToken.IsSet()
}

// HasTwilioAuthToken returns a boolean if a field has been set.
func (o *WlanPortal) HasTwilioAuthToken() bool {
	if o != nil && o.TwilioAuthToken.IsSet() {
		return true
	}

	return false
}

// SetTwilioAuthToken gets a reference to the given NullableString and assigns it to the TwilioAuthToken field.
func (o *WlanPortal) SetTwilioAuthToken(v string) {
	o.TwilioAuthToken.Set(&v)
}
// SetTwilioAuthTokenNil sets the value for TwilioAuthToken to be an explicit nil
func (o *WlanPortal) SetTwilioAuthTokenNil() {
	o.TwilioAuthToken.Set(nil)
}

// UnsetTwilioAuthToken ensures that no value is present for TwilioAuthToken, not even an explicit nil
func (o *WlanPortal) UnsetTwilioAuthToken() {
	o.TwilioAuthToken.Unset()
}

// GetTwilioPhoneNumber returns the TwilioPhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetTwilioPhoneNumber() string {
	if o == nil || IsNil(o.TwilioPhoneNumber.Get()) {
		var ret string
		return ret
	}
	return *o.TwilioPhoneNumber.Get()
}

// GetTwilioPhoneNumberOk returns a tuple with the TwilioPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetTwilioPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwilioPhoneNumber.Get(), o.TwilioPhoneNumber.IsSet()
}

// HasTwilioPhoneNumber returns a boolean if a field has been set.
func (o *WlanPortal) HasTwilioPhoneNumber() bool {
	if o != nil && o.TwilioPhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetTwilioPhoneNumber gets a reference to the given NullableString and assigns it to the TwilioPhoneNumber field.
func (o *WlanPortal) SetTwilioPhoneNumber(v string) {
	o.TwilioPhoneNumber.Set(&v)
}
// SetTwilioPhoneNumberNil sets the value for TwilioPhoneNumber to be an explicit nil
func (o *WlanPortal) SetTwilioPhoneNumberNil() {
	o.TwilioPhoneNumber.Set(nil)
}

// UnsetTwilioPhoneNumber ensures that no value is present for TwilioPhoneNumber, not even an explicit nil
func (o *WlanPortal) UnsetTwilioPhoneNumber() {
	o.TwilioPhoneNumber.Unset()
}

// GetTwilioSid returns the TwilioSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WlanPortal) GetTwilioSid() string {
	if o == nil || IsNil(o.TwilioSid.Get()) {
		var ret string
		return ret
	}
	return *o.TwilioSid.Get()
}

// GetTwilioSidOk returns a tuple with the TwilioSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WlanPortal) GetTwilioSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwilioSid.Get(), o.TwilioSid.IsSet()
}

// HasTwilioSid returns a boolean if a field has been set.
func (o *WlanPortal) HasTwilioSid() bool {
	if o != nil && o.TwilioSid.IsSet() {
		return true
	}

	return false
}

// SetTwilioSid gets a reference to the given NullableString and assigns it to the TwilioSid field.
func (o *WlanPortal) SetTwilioSid(v string) {
	o.TwilioSid.Set(&v)
}
// SetTwilioSidNil sets the value for TwilioSid to be an explicit nil
func (o *WlanPortal) SetTwilioSidNil() {
	o.TwilioSid.Set(nil)
}

// UnsetTwilioSid ensures that no value is present for TwilioSid, not even an explicit nil
func (o *WlanPortal) UnsetTwilioSid() {
	o.TwilioSid.Unset()
}

func (o WlanPortal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WlanPortal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AmazonClientId.IsSet() {
		toSerialize["amazon_client_id"] = o.AmazonClientId.Get()
	}
	if o.AmazonClientSecret.IsSet() {
		toSerialize["amazon_client_secret"] = o.AmazonClientSecret.Get()
	}
	if !IsNil(o.AmazonEmailDomains) {
		toSerialize["amazon_email_domains"] = o.AmazonEmailDomains
	}
	if !IsNil(o.AmazonEnabled) {
		toSerialize["amazon_enabled"] = o.AmazonEnabled
	}
	if o.AmazonExpire.IsSet() {
		toSerialize["amazon_expire"] = o.AmazonExpire.Get()
	}
	if !IsNil(o.Auth) {
		toSerialize["auth"] = o.Auth
	}
	if o.AzureClientId.IsSet() {
		toSerialize["azure_client_id"] = o.AzureClientId.Get()
	}
	if o.AzureClientSecret.IsSet() {
		toSerialize["azure_client_secret"] = o.AzureClientSecret.Get()
	}
	if !IsNil(o.AzureEnabled) {
		toSerialize["azure_enabled"] = o.AzureEnabled
	}
	if o.AzureExpire.IsSet() {
		toSerialize["azure_expire"] = o.AzureExpire.Get()
	}
	if o.AzureTenantId.IsSet() {
		toSerialize["azure_tenant_id"] = o.AzureTenantId.Get()
	}
	if !IsNil(o.BroadnetPassword) {
		toSerialize["broadnet_password"] = o.BroadnetPassword
	}
	if !IsNil(o.BroadnetSid) {
		toSerialize["broadnet_sid"] = o.BroadnetSid
	}
	if !IsNil(o.BroadnetUserId) {
		toSerialize["broadnet_user_id"] = o.BroadnetUserId
	}
	if !IsNil(o.BypassWhenCloudDown) {
		toSerialize["bypass_when_cloud_down"] = o.BypassWhenCloudDown
	}
	if !IsNil(o.ClickatellApiKey) {
		toSerialize["clickatell_api_key"] = o.ClickatellApiKey
	}
	if !IsNil(o.CrossSite) {
		toSerialize["cross_site"] = o.CrossSite
	}
	if !IsNil(o.EmailEnabled) {
		toSerialize["email_enabled"] = o.EmailEnabled
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Expire) {
		toSerialize["expire"] = o.Expire
	}
	if !IsNil(o.ExternalPortalUrl) {
		toSerialize["external_portal_url"] = o.ExternalPortalUrl
	}
	if o.FacebookClientId.IsSet() {
		toSerialize["facebook_client_id"] = o.FacebookClientId.Get()
	}
	if o.FacebookClientSecret.IsSet() {
		toSerialize["facebook_client_secret"] = o.FacebookClientSecret.Get()
	}
	if !IsNil(o.FacebookEmailDomains) {
		toSerialize["facebook_email_domains"] = o.FacebookEmailDomains
	}
	if !IsNil(o.FacebookEnabled) {
		toSerialize["facebook_enabled"] = o.FacebookEnabled
	}
	if o.FacebookExpire.IsSet() {
		toSerialize["facebook_expire"] = o.FacebookExpire.Get()
	}
	if !IsNil(o.Forward) {
		toSerialize["forward"] = o.Forward
	}
	if o.ForwardUrl.IsSet() {
		toSerialize["forward_url"] = o.ForwardUrl.Get()
	}
	if o.GoogleClientId.IsSet() {
		toSerialize["google_client_id"] = o.GoogleClientId.Get()
	}
	if o.GoogleClientSecret.IsSet() {
		toSerialize["google_client_secret"] = o.GoogleClientSecret.Get()
	}
	if !IsNil(o.GoogleEmailDomains) {
		toSerialize["google_email_domains"] = o.GoogleEmailDomains
	}
	if !IsNil(o.GoogleEnabled) {
		toSerialize["google_enabled"] = o.GoogleEnabled
	}
	if o.GoogleExpire.IsSet() {
		toSerialize["google_expire"] = o.GoogleExpire.Get()
	}
	if !IsNil(o.GupshupPassword) {
		toSerialize["gupshup_password"] = o.GupshupPassword
	}
	if !IsNil(o.GupshupUserid) {
		toSerialize["gupshup_userid"] = o.GupshupUserid
	}
	if o.MicrosoftClientId.IsSet() {
		toSerialize["microsoft_client_id"] = o.MicrosoftClientId.Get()
	}
	if o.MicrosoftClientSecret.IsSet() {
		toSerialize["microsoft_client_secret"] = o.MicrosoftClientSecret.Get()
	}
	if !IsNil(o.MicrosoftEmailDomains) {
		toSerialize["microsoft_email_domains"] = o.MicrosoftEmailDomains
	}
	if !IsNil(o.MicrosoftEnabled) {
		toSerialize["microsoft_enabled"] = o.MicrosoftEnabled
	}
	if o.MicrosoftExpire.IsSet() {
		toSerialize["microsoft_expire"] = o.MicrosoftExpire.Get()
	}
	if !IsNil(o.PassphraseEnabled) {
		toSerialize["passphrase_enabled"] = o.PassphraseEnabled
	}
	if o.PassphraseExpire.IsSet() {
		toSerialize["passphrase_expire"] = o.PassphraseExpire.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if !IsNil(o.PortalAllowedHostnames) {
		toSerialize["portal_allowed_hostnames"] = o.PortalAllowedHostnames
	}
	if !IsNil(o.PortalAllowedSubnets) {
		toSerialize["portal_allowed_subnets"] = o.PortalAllowedSubnets
	}
	if !IsNil(o.PortalApiSecret) {
		toSerialize["portal_api_secret"] = o.PortalApiSecret
	}
	if !IsNil(o.PortalDeniedHostnames) {
		toSerialize["portal_denied_hostnames"] = o.PortalDeniedHostnames
	}
	if !IsNil(o.PortalImage) {
		toSerialize["portal_image"] = o.PortalImage
	}
	if !IsNil(o.PortalSsoUrl) {
		toSerialize["portal_sso_url"] = o.PortalSsoUrl
	}
	if !IsNil(o.PredefinedSponsorsEnabled) {
		toSerialize["predefined_sponsors_enabled"] = o.PredefinedSponsorsEnabled
	}
	if !IsNil(o.Privacy) {
		toSerialize["privacy"] = o.Privacy
	}
	if !IsNil(o.PuzzelPassword) {
		toSerialize["puzzel_password"] = o.PuzzelPassword
	}
	if !IsNil(o.PuzzelServiceId) {
		toSerialize["puzzel_service_id"] = o.PuzzelServiceId
	}
	if !IsNil(o.PuzzelUsername) {
		toSerialize["puzzel_username"] = o.PuzzelUsername
	}
	if !IsNil(o.SmsMessageFormat) {
		toSerialize["smsMessageFormat"] = o.SmsMessageFormat
	}
	if !IsNil(o.SmsEnabled) {
		toSerialize["sms_enabled"] = o.SmsEnabled
	}
	if o.SmsExpire.IsSet() {
		toSerialize["sms_expire"] = o.SmsExpire.Get()
	}
	if !IsNil(o.SmsProvider) {
		toSerialize["sms_provider"] = o.SmsProvider
	}
	if !IsNil(o.SponsorAutoApprove) {
		toSerialize["sponsor_auto_approve"] = o.SponsorAutoApprove
	}
	if !IsNil(o.SponsorEmailDomains) {
		toSerialize["sponsor_email_domains"] = o.SponsorEmailDomains
	}
	if !IsNil(o.SponsorEnabled) {
		toSerialize["sponsor_enabled"] = o.SponsorEnabled
	}
	if o.SponsorExpire.IsSet() {
		toSerialize["sponsor_expire"] = o.SponsorExpire.Get()
	}
	if !IsNil(o.SponsorLinkValidityDuration) {
		toSerialize["sponsor_link_validity_duration"] = o.SponsorLinkValidityDuration
	}
	if !IsNil(o.SponsorNotifyAll) {
		toSerialize["sponsor_notify_all"] = o.SponsorNotifyAll
	}
	if !IsNil(o.SponsorStatusNotify) {
		toSerialize["sponsor_status_notify"] = o.SponsorStatusNotify
	}
	if !IsNil(o.Sponsors) {
		toSerialize["sponsors"] = o.Sponsors
	}
	if !IsNil(o.SsoDefaultRole) {
		toSerialize["sso_default_role"] = o.SsoDefaultRole
	}
	if !IsNil(o.SsoForcedRole) {
		toSerialize["sso_forced_role"] = o.SsoForcedRole
	}
	if !IsNil(o.SsoIdpCert) {
		toSerialize["sso_idp_cert"] = o.SsoIdpCert
	}
	if !IsNil(o.SsoIdpSignAlgo) {
		toSerialize["sso_idp_sign_algo"] = o.SsoIdpSignAlgo
	}
	if !IsNil(o.SsoIdpSsoUrl) {
		toSerialize["sso_idp_sso_url"] = o.SsoIdpSsoUrl
	}
	if !IsNil(o.SsoIssuer) {
		toSerialize["sso_issuer"] = o.SsoIssuer
	}
	if !IsNil(o.SsoNameidFormat) {
		toSerialize["sso_nameid_format"] = o.SsoNameidFormat
	}
	if !IsNil(o.TelstraClientId) {
		toSerialize["telstra_client_id"] = o.TelstraClientId
	}
	if !IsNil(o.TelstraClientSecret) {
		toSerialize["telstra_client_secret"] = o.TelstraClientSecret
	}
	if !IsNil(o.Thumbnail) {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	if o.TwilioAuthToken.IsSet() {
		toSerialize["twilio_auth_token"] = o.TwilioAuthToken.Get()
	}
	if o.TwilioPhoneNumber.IsSet() {
		toSerialize["twilio_phone_number"] = o.TwilioPhoneNumber.Get()
	}
	if o.TwilioSid.IsSet() {
		toSerialize["twilio_sid"] = o.TwilioSid.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WlanPortal) UnmarshalJSON(data []byte) (err error) {
	varWlanPortal := _WlanPortal{}

	err = json.Unmarshal(data, &varWlanPortal)

	if err != nil {
		return err
	}

	*o = WlanPortal(varWlanPortal)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "amazon_client_id")
		delete(additionalProperties, "amazon_client_secret")
		delete(additionalProperties, "amazon_email_domains")
		delete(additionalProperties, "amazon_enabled")
		delete(additionalProperties, "amazon_expire")
		delete(additionalProperties, "auth")
		delete(additionalProperties, "azure_client_id")
		delete(additionalProperties, "azure_client_secret")
		delete(additionalProperties, "azure_enabled")
		delete(additionalProperties, "azure_expire")
		delete(additionalProperties, "azure_tenant_id")
		delete(additionalProperties, "broadnet_password")
		delete(additionalProperties, "broadnet_sid")
		delete(additionalProperties, "broadnet_user_id")
		delete(additionalProperties, "bypass_when_cloud_down")
		delete(additionalProperties, "clickatell_api_key")
		delete(additionalProperties, "cross_site")
		delete(additionalProperties, "email_enabled")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "expire")
		delete(additionalProperties, "external_portal_url")
		delete(additionalProperties, "facebook_client_id")
		delete(additionalProperties, "facebook_client_secret")
		delete(additionalProperties, "facebook_email_domains")
		delete(additionalProperties, "facebook_enabled")
		delete(additionalProperties, "facebook_expire")
		delete(additionalProperties, "forward")
		delete(additionalProperties, "forward_url")
		delete(additionalProperties, "google_client_id")
		delete(additionalProperties, "google_client_secret")
		delete(additionalProperties, "google_email_domains")
		delete(additionalProperties, "google_enabled")
		delete(additionalProperties, "google_expire")
		delete(additionalProperties, "gupshup_password")
		delete(additionalProperties, "gupshup_userid")
		delete(additionalProperties, "microsoft_client_id")
		delete(additionalProperties, "microsoft_client_secret")
		delete(additionalProperties, "microsoft_email_domains")
		delete(additionalProperties, "microsoft_enabled")
		delete(additionalProperties, "microsoft_expire")
		delete(additionalProperties, "passphrase_enabled")
		delete(additionalProperties, "passphrase_expire")
		delete(additionalProperties, "password")
		delete(additionalProperties, "portal_allowed_hostnames")
		delete(additionalProperties, "portal_allowed_subnets")
		delete(additionalProperties, "portal_api_secret")
		delete(additionalProperties, "portal_denied_hostnames")
		delete(additionalProperties, "portal_image")
		delete(additionalProperties, "portal_sso_url")
		delete(additionalProperties, "predefined_sponsors_enabled")
		delete(additionalProperties, "privacy")
		delete(additionalProperties, "puzzel_password")
		delete(additionalProperties, "puzzel_service_id")
		delete(additionalProperties, "puzzel_username")
		delete(additionalProperties, "smsMessageFormat")
		delete(additionalProperties, "sms_enabled")
		delete(additionalProperties, "sms_expire")
		delete(additionalProperties, "sms_provider")
		delete(additionalProperties, "sponsor_auto_approve")
		delete(additionalProperties, "sponsor_email_domains")
		delete(additionalProperties, "sponsor_enabled")
		delete(additionalProperties, "sponsor_expire")
		delete(additionalProperties, "sponsor_link_validity_duration")
		delete(additionalProperties, "sponsor_notify_all")
		delete(additionalProperties, "sponsor_status_notify")
		delete(additionalProperties, "sponsors")
		delete(additionalProperties, "sso_default_role")
		delete(additionalProperties, "sso_forced_role")
		delete(additionalProperties, "sso_idp_cert")
		delete(additionalProperties, "sso_idp_sign_algo")
		delete(additionalProperties, "sso_idp_sso_url")
		delete(additionalProperties, "sso_issuer")
		delete(additionalProperties, "sso_nameid_format")
		delete(additionalProperties, "telstra_client_id")
		delete(additionalProperties, "telstra_client_secret")
		delete(additionalProperties, "thumbnail")
		delete(additionalProperties, "twilio_auth_token")
		delete(additionalProperties, "twilio_phone_number")
		delete(additionalProperties, "twilio_sid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWlanPortal struct {
	value *WlanPortal
	isSet bool
}

func (v NullableWlanPortal) Get() *WlanPortal {
	return v.value
}

func (v *NullableWlanPortal) Set(val *WlanPortal) {
	v.value = val
	v.isSet = true
}

func (v NullableWlanPortal) IsSet() bool {
	return v.isSet
}

func (v *NullableWlanPortal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWlanPortal(val *WlanPortal) *NullableWlanPortal {
	return &NullableWlanPortal{value: val, isSet: true}
}

func (v NullableWlanPortal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWlanPortal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


