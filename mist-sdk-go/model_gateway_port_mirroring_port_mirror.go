/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the GatewayPortMirroringPortMirror type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayPortMirroringPortMirror{}

// GatewayPortMirroringPortMirror struct for GatewayPortMirroringPortMirror
type GatewayPortMirroringPortMirror struct {
	FamilyType *string `json:"family_type,omitempty"`
	IngressPortIds []string `json:"ingress_port_ids,omitempty"`
	OutputPortId *string `json:"output_port_id,omitempty"`
	Rate *int32 `json:"rate,omitempty"`
	RunLength *int32 `json:"run_length,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayPortMirroringPortMirror GatewayPortMirroringPortMirror

// NewGatewayPortMirroringPortMirror instantiates a new GatewayPortMirroringPortMirror object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayPortMirroringPortMirror() *GatewayPortMirroringPortMirror {
	this := GatewayPortMirroringPortMirror{}
	return &this
}

// NewGatewayPortMirroringPortMirrorWithDefaults instantiates a new GatewayPortMirroringPortMirror object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayPortMirroringPortMirrorWithDefaults() *GatewayPortMirroringPortMirror {
	this := GatewayPortMirroringPortMirror{}
	return &this
}

// GetFamilyType returns the FamilyType field value if set, zero value otherwise.
func (o *GatewayPortMirroringPortMirror) GetFamilyType() string {
	if o == nil || IsNil(o.FamilyType) {
		var ret string
		return ret
	}
	return *o.FamilyType
}

// GetFamilyTypeOk returns a tuple with the FamilyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortMirroringPortMirror) GetFamilyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FamilyType) {
		return nil, false
	}
	return o.FamilyType, true
}

// HasFamilyType returns a boolean if a field has been set.
func (o *GatewayPortMirroringPortMirror) HasFamilyType() bool {
	if o != nil && !IsNil(o.FamilyType) {
		return true
	}

	return false
}

// SetFamilyType gets a reference to the given string and assigns it to the FamilyType field.
func (o *GatewayPortMirroringPortMirror) SetFamilyType(v string) {
	o.FamilyType = &v
}

// GetIngressPortIds returns the IngressPortIds field value if set, zero value otherwise.
func (o *GatewayPortMirroringPortMirror) GetIngressPortIds() []string {
	if o == nil || IsNil(o.IngressPortIds) {
		var ret []string
		return ret
	}
	return o.IngressPortIds
}

// GetIngressPortIdsOk returns a tuple with the IngressPortIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortMirroringPortMirror) GetIngressPortIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.IngressPortIds) {
		return nil, false
	}
	return o.IngressPortIds, true
}

// HasIngressPortIds returns a boolean if a field has been set.
func (o *GatewayPortMirroringPortMirror) HasIngressPortIds() bool {
	if o != nil && !IsNil(o.IngressPortIds) {
		return true
	}

	return false
}

// SetIngressPortIds gets a reference to the given []string and assigns it to the IngressPortIds field.
func (o *GatewayPortMirroringPortMirror) SetIngressPortIds(v []string) {
	o.IngressPortIds = v
}

// GetOutputPortId returns the OutputPortId field value if set, zero value otherwise.
func (o *GatewayPortMirroringPortMirror) GetOutputPortId() string {
	if o == nil || IsNil(o.OutputPortId) {
		var ret string
		return ret
	}
	return *o.OutputPortId
}

// GetOutputPortIdOk returns a tuple with the OutputPortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortMirroringPortMirror) GetOutputPortIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutputPortId) {
		return nil, false
	}
	return o.OutputPortId, true
}

// HasOutputPortId returns a boolean if a field has been set.
func (o *GatewayPortMirroringPortMirror) HasOutputPortId() bool {
	if o != nil && !IsNil(o.OutputPortId) {
		return true
	}

	return false
}

// SetOutputPortId gets a reference to the given string and assigns it to the OutputPortId field.
func (o *GatewayPortMirroringPortMirror) SetOutputPortId(v string) {
	o.OutputPortId = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *GatewayPortMirroringPortMirror) GetRate() int32 {
	if o == nil || IsNil(o.Rate) {
		var ret int32
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortMirroringPortMirror) GetRateOk() (*int32, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *GatewayPortMirroringPortMirror) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given int32 and assigns it to the Rate field.
func (o *GatewayPortMirroringPortMirror) SetRate(v int32) {
	o.Rate = &v
}

// GetRunLength returns the RunLength field value if set, zero value otherwise.
func (o *GatewayPortMirroringPortMirror) GetRunLength() int32 {
	if o == nil || IsNil(o.RunLength) {
		var ret int32
		return ret
	}
	return *o.RunLength
}

// GetRunLengthOk returns a tuple with the RunLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortMirroringPortMirror) GetRunLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.RunLength) {
		return nil, false
	}
	return o.RunLength, true
}

// HasRunLength returns a boolean if a field has been set.
func (o *GatewayPortMirroringPortMirror) HasRunLength() bool {
	if o != nil && !IsNil(o.RunLength) {
		return true
	}

	return false
}

// SetRunLength gets a reference to the given int32 and assigns it to the RunLength field.
func (o *GatewayPortMirroringPortMirror) SetRunLength(v int32) {
	o.RunLength = &v
}

func (o GatewayPortMirroringPortMirror) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayPortMirroringPortMirror) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FamilyType) {
		toSerialize["family_type"] = o.FamilyType
	}
	if !IsNil(o.IngressPortIds) {
		toSerialize["ingress_port_ids"] = o.IngressPortIds
	}
	if !IsNil(o.OutputPortId) {
		toSerialize["output_port_id"] = o.OutputPortId
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	if !IsNil(o.RunLength) {
		toSerialize["run_length"] = o.RunLength
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayPortMirroringPortMirror) UnmarshalJSON(data []byte) (err error) {
	varGatewayPortMirroringPortMirror := _GatewayPortMirroringPortMirror{}

	err = json.Unmarshal(data, &varGatewayPortMirroringPortMirror)

	if err != nil {
		return err
	}

	*o = GatewayPortMirroringPortMirror(varGatewayPortMirroringPortMirror)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "family_type")
		delete(additionalProperties, "ingress_port_ids")
		delete(additionalProperties, "output_port_id")
		delete(additionalProperties, "rate")
		delete(additionalProperties, "run_length")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayPortMirroringPortMirror struct {
	value *GatewayPortMirroringPortMirror
	isSet bool
}

func (v NullableGatewayPortMirroringPortMirror) Get() *GatewayPortMirroringPortMirror {
	return v.value
}

func (v *NullableGatewayPortMirroringPortMirror) Set(val *GatewayPortMirroringPortMirror) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayPortMirroringPortMirror) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayPortMirroringPortMirror) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayPortMirroringPortMirror(val *GatewayPortMirroringPortMirror) *NullableGatewayPortMirroringPortMirror {
	return &NullableGatewayPortMirroringPortMirror{value: val, isSet: true}
}

func (v NullableGatewayPortMirroringPortMirror) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayPortMirroringPortMirror) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


