/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the MxclusterNacClientIp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MxclusterNacClientIp{}

// MxclusterNacClientIp struct for MxclusterNacClientIp
type MxclusterNacClientIp struct {
	// if different from above
	Secret *string `json:"secret,omitempty"`
	// present only for 3rd party clients
	SiteId *string `json:"site_id,omitempty"`
	Vendor *MxclusterNacClientVendor `json:"vendor,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MxclusterNacClientIp MxclusterNacClientIp

// NewMxclusterNacClientIp instantiates a new MxclusterNacClientIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMxclusterNacClientIp() *MxclusterNacClientIp {
	this := MxclusterNacClientIp{}
	return &this
}

// NewMxclusterNacClientIpWithDefaults instantiates a new MxclusterNacClientIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMxclusterNacClientIpWithDefaults() *MxclusterNacClientIp {
	this := MxclusterNacClientIp{}
	return &this
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *MxclusterNacClientIp) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxclusterNacClientIp) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *MxclusterNacClientIp) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *MxclusterNacClientIp) SetSecret(v string) {
	o.Secret = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *MxclusterNacClientIp) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxclusterNacClientIp) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *MxclusterNacClientIp) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *MxclusterNacClientIp) SetSiteId(v string) {
	o.SiteId = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *MxclusterNacClientIp) GetVendor() MxclusterNacClientVendor {
	if o == nil || IsNil(o.Vendor) {
		var ret MxclusterNacClientVendor
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MxclusterNacClientIp) GetVendorOk() (*MxclusterNacClientVendor, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *MxclusterNacClientIp) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given MxclusterNacClientVendor and assigns it to the Vendor field.
func (o *MxclusterNacClientIp) SetVendor(v MxclusterNacClientVendor) {
	o.Vendor = &v
}

func (o MxclusterNacClientIp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MxclusterNacClientIp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MxclusterNacClientIp) UnmarshalJSON(data []byte) (err error) {
	varMxclusterNacClientIp := _MxclusterNacClientIp{}

	err = json.Unmarshal(data, &varMxclusterNacClientIp)

	if err != nil {
		return err
	}

	*o = MxclusterNacClientIp(varMxclusterNacClientIp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "secret")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "vendor")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMxclusterNacClientIp struct {
	value *MxclusterNacClientIp
	isSet bool
}

func (v NullableMxclusterNacClientIp) Get() *MxclusterNacClientIp {
	return v.value
}

func (v *NullableMxclusterNacClientIp) Set(val *MxclusterNacClientIp) {
	v.value = val
	v.isSet = true
}

func (v NullableMxclusterNacClientIp) IsSet() bool {
	return v.isSet
}

func (v *NullableMxclusterNacClientIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMxclusterNacClientIp(val *MxclusterNacClientIp) *NullableMxclusterNacClientIp {
	return &NullableMxclusterNacClientIp{value: val, isSet: true}
}

func (v NullableMxclusterNacClientIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMxclusterNacClientIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


