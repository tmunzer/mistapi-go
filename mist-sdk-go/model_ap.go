/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the Ap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ap{}

// Ap AP
type Ap struct {
	Aeroscout *ApAeroscout `json:"aeroscout,omitempty"`
	BleConfig *BleConfig `json:"ble_config,omitempty"`
	Centrak *ApCentrak `json:"centrak,omitempty"`
	ClientBridge *ApClientBridge `json:"client_bridge,omitempty"`
	CreatedTime *float32 `json:"created_time,omitempty"`
	DeviceprofileId NullableString `json:"deviceprofile_id,omitempty"`
	// whether to disable eth1 port
	DisableEth1 *bool `json:"disable_eth1,omitempty"`
	// whether to disable eth2 port
	DisableEth2 *bool `json:"disable_eth2,omitempty"`
	// whether to disable eth3 port
	DisableEth3 *bool `json:"disable_eth3,omitempty"`
	// whether to disable module port
	DisableModule *bool `json:"disable_module,omitempty"`
	EslConfig *ApEslConfig `json:"esl_config,omitempty"`
	ForSite *bool `json:"for_site,omitempty"`
	// height, in meters, optional
	Height *float32 `json:"height,omitempty"`
	Id *string `json:"id,omitempty"`
	Image1Url NullableString `json:"image1_url,omitempty"`
	Image2Url NullableString `json:"image2_url,omitempty"`
	Image3Url NullableString `json:"image3_url,omitempty"`
	IotConfig *ApIot `json:"iot_config,omitempty"`
	IpConfig *ApIpConfig `json:"ip_config,omitempty"`
	Led *ApLed `json:"led,omitempty"`
	// whether this map is considered locked down
	Locked *bool `json:"locked,omitempty"`
	// map where the device belongs to
	MapId *string `json:"map_id,omitempty"`
	Mesh *ApMesh `json:"mesh,omitempty"`
	ModifiedTime *float32 `json:"modified_time,omitempty"`
	Name *string `json:"name,omitempty"`
	// any notes about this AP
	Notes *string `json:"notes,omitempty"`
	NtpServers []string `json:"ntp_servers,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	// orientation, 0-359, in degrees, up is 0, right is 90.
	Orientation *int32 `json:"orientation,omitempty"`
	// whether to enable power out through module port (for APH) or eth1 (for APL/BT11)
	PoePassthrough *bool `json:"poe_passthrough,omitempty"`
	// eth0 is not allowed here.  Property key is the interface(s) name (e.g. \"eth1\" or\"eth1,eth2\")
	PortConfig *map[string]ApPortConfig `json:"port_config,omitempty"`
	PwrConfig *ApPwrConfig `json:"pwr_config,omitempty"`
	RadioConfig *ApRadio `json:"radio_config,omitempty"`
	SiteId *string `json:"site_id,omitempty"`
	UplinkPortConfig *ApUplinkPortConfig `json:"uplink_port_config,omitempty"`
	UsbConfig *ApUsb `json:"usb_config,omitempty"`
	// a dictionary of name->value, the vars can then be used in Wlans. This can overwrite those from Site Vars
	Vars *map[string]string `json:"vars,omitempty"`
	// x in pixel
	X *float32 `json:"x,omitempty"`
	// y in pixel
	Y *float32 `json:"y,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Ap Ap

// NewAp instantiates a new Ap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAp() *Ap {
	this := Ap{}
	var disableEth1 bool = false
	this.DisableEth1 = &disableEth1
	var disableEth2 bool = false
	this.DisableEth2 = &disableEth2
	var disableEth3 bool = false
	this.DisableEth3 = &disableEth3
	var disableModule bool = false
	this.DisableModule = &disableModule
	var poePassthrough bool = false
	this.PoePassthrough = &poePassthrough
	return &this
}

// NewApWithDefaults instantiates a new Ap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApWithDefaults() *Ap {
	this := Ap{}
	var disableEth1 bool = false
	this.DisableEth1 = &disableEth1
	var disableEth2 bool = false
	this.DisableEth2 = &disableEth2
	var disableEth3 bool = false
	this.DisableEth3 = &disableEth3
	var disableModule bool = false
	this.DisableModule = &disableModule
	var poePassthrough bool = false
	this.PoePassthrough = &poePassthrough
	return &this
}

// GetAeroscout returns the Aeroscout field value if set, zero value otherwise.
func (o *Ap) GetAeroscout() ApAeroscout {
	if o == nil || IsNil(o.Aeroscout) {
		var ret ApAeroscout
		return ret
	}
	return *o.Aeroscout
}

// GetAeroscoutOk returns a tuple with the Aeroscout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetAeroscoutOk() (*ApAeroscout, bool) {
	if o == nil || IsNil(o.Aeroscout) {
		return nil, false
	}
	return o.Aeroscout, true
}

// HasAeroscout returns a boolean if a field has been set.
func (o *Ap) HasAeroscout() bool {
	if o != nil && !IsNil(o.Aeroscout) {
		return true
	}

	return false
}

// SetAeroscout gets a reference to the given ApAeroscout and assigns it to the Aeroscout field.
func (o *Ap) SetAeroscout(v ApAeroscout) {
	o.Aeroscout = &v
}

// GetBleConfig returns the BleConfig field value if set, zero value otherwise.
func (o *Ap) GetBleConfig() BleConfig {
	if o == nil || IsNil(o.BleConfig) {
		var ret BleConfig
		return ret
	}
	return *o.BleConfig
}

// GetBleConfigOk returns a tuple with the BleConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetBleConfigOk() (*BleConfig, bool) {
	if o == nil || IsNil(o.BleConfig) {
		return nil, false
	}
	return o.BleConfig, true
}

// HasBleConfig returns a boolean if a field has been set.
func (o *Ap) HasBleConfig() bool {
	if o != nil && !IsNil(o.BleConfig) {
		return true
	}

	return false
}

// SetBleConfig gets a reference to the given BleConfig and assigns it to the BleConfig field.
func (o *Ap) SetBleConfig(v BleConfig) {
	o.BleConfig = &v
}

// GetCentrak returns the Centrak field value if set, zero value otherwise.
func (o *Ap) GetCentrak() ApCentrak {
	if o == nil || IsNil(o.Centrak) {
		var ret ApCentrak
		return ret
	}
	return *o.Centrak
}

// GetCentrakOk returns a tuple with the Centrak field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetCentrakOk() (*ApCentrak, bool) {
	if o == nil || IsNil(o.Centrak) {
		return nil, false
	}
	return o.Centrak, true
}

// HasCentrak returns a boolean if a field has been set.
func (o *Ap) HasCentrak() bool {
	if o != nil && !IsNil(o.Centrak) {
		return true
	}

	return false
}

// SetCentrak gets a reference to the given ApCentrak and assigns it to the Centrak field.
func (o *Ap) SetCentrak(v ApCentrak) {
	o.Centrak = &v
}

// GetClientBridge returns the ClientBridge field value if set, zero value otherwise.
func (o *Ap) GetClientBridge() ApClientBridge {
	if o == nil || IsNil(o.ClientBridge) {
		var ret ApClientBridge
		return ret
	}
	return *o.ClientBridge
}

// GetClientBridgeOk returns a tuple with the ClientBridge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetClientBridgeOk() (*ApClientBridge, bool) {
	if o == nil || IsNil(o.ClientBridge) {
		return nil, false
	}
	return o.ClientBridge, true
}

// HasClientBridge returns a boolean if a field has been set.
func (o *Ap) HasClientBridge() bool {
	if o != nil && !IsNil(o.ClientBridge) {
		return true
	}

	return false
}

// SetClientBridge gets a reference to the given ApClientBridge and assigns it to the ClientBridge field.
func (o *Ap) SetClientBridge(v ApClientBridge) {
	o.ClientBridge = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *Ap) GetCreatedTime() float32 {
	if o == nil || IsNil(o.CreatedTime) {
		var ret float32
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetCreatedTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *Ap) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given float32 and assigns it to the CreatedTime field.
func (o *Ap) SetCreatedTime(v float32) {
	o.CreatedTime = &v
}

// GetDeviceprofileId returns the DeviceprofileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Ap) GetDeviceprofileId() string {
	if o == nil || IsNil(o.DeviceprofileId.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceprofileId.Get()
}

// GetDeviceprofileIdOk returns a tuple with the DeviceprofileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Ap) GetDeviceprofileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceprofileId.Get(), o.DeviceprofileId.IsSet()
}

// HasDeviceprofileId returns a boolean if a field has been set.
func (o *Ap) HasDeviceprofileId() bool {
	if o != nil && o.DeviceprofileId.IsSet() {
		return true
	}

	return false
}

// SetDeviceprofileId gets a reference to the given NullableString and assigns it to the DeviceprofileId field.
func (o *Ap) SetDeviceprofileId(v string) {
	o.DeviceprofileId.Set(&v)
}
// SetDeviceprofileIdNil sets the value for DeviceprofileId to be an explicit nil
func (o *Ap) SetDeviceprofileIdNil() {
	o.DeviceprofileId.Set(nil)
}

// UnsetDeviceprofileId ensures that no value is present for DeviceprofileId, not even an explicit nil
func (o *Ap) UnsetDeviceprofileId() {
	o.DeviceprofileId.Unset()
}

// GetDisableEth1 returns the DisableEth1 field value if set, zero value otherwise.
func (o *Ap) GetDisableEth1() bool {
	if o == nil || IsNil(o.DisableEth1) {
		var ret bool
		return ret
	}
	return *o.DisableEth1
}

// GetDisableEth1Ok returns a tuple with the DisableEth1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetDisableEth1Ok() (*bool, bool) {
	if o == nil || IsNil(o.DisableEth1) {
		return nil, false
	}
	return o.DisableEth1, true
}

// HasDisableEth1 returns a boolean if a field has been set.
func (o *Ap) HasDisableEth1() bool {
	if o != nil && !IsNil(o.DisableEth1) {
		return true
	}

	return false
}

// SetDisableEth1 gets a reference to the given bool and assigns it to the DisableEth1 field.
func (o *Ap) SetDisableEth1(v bool) {
	o.DisableEth1 = &v
}

// GetDisableEth2 returns the DisableEth2 field value if set, zero value otherwise.
func (o *Ap) GetDisableEth2() bool {
	if o == nil || IsNil(o.DisableEth2) {
		var ret bool
		return ret
	}
	return *o.DisableEth2
}

// GetDisableEth2Ok returns a tuple with the DisableEth2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetDisableEth2Ok() (*bool, bool) {
	if o == nil || IsNil(o.DisableEth2) {
		return nil, false
	}
	return o.DisableEth2, true
}

// HasDisableEth2 returns a boolean if a field has been set.
func (o *Ap) HasDisableEth2() bool {
	if o != nil && !IsNil(o.DisableEth2) {
		return true
	}

	return false
}

// SetDisableEth2 gets a reference to the given bool and assigns it to the DisableEth2 field.
func (o *Ap) SetDisableEth2(v bool) {
	o.DisableEth2 = &v
}

// GetDisableEth3 returns the DisableEth3 field value if set, zero value otherwise.
func (o *Ap) GetDisableEth3() bool {
	if o == nil || IsNil(o.DisableEth3) {
		var ret bool
		return ret
	}
	return *o.DisableEth3
}

// GetDisableEth3Ok returns a tuple with the DisableEth3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetDisableEth3Ok() (*bool, bool) {
	if o == nil || IsNil(o.DisableEth3) {
		return nil, false
	}
	return o.DisableEth3, true
}

// HasDisableEth3 returns a boolean if a field has been set.
func (o *Ap) HasDisableEth3() bool {
	if o != nil && !IsNil(o.DisableEth3) {
		return true
	}

	return false
}

// SetDisableEth3 gets a reference to the given bool and assigns it to the DisableEth3 field.
func (o *Ap) SetDisableEth3(v bool) {
	o.DisableEth3 = &v
}

// GetDisableModule returns the DisableModule field value if set, zero value otherwise.
func (o *Ap) GetDisableModule() bool {
	if o == nil || IsNil(o.DisableModule) {
		var ret bool
		return ret
	}
	return *o.DisableModule
}

// GetDisableModuleOk returns a tuple with the DisableModule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetDisableModuleOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableModule) {
		return nil, false
	}
	return o.DisableModule, true
}

// HasDisableModule returns a boolean if a field has been set.
func (o *Ap) HasDisableModule() bool {
	if o != nil && !IsNil(o.DisableModule) {
		return true
	}

	return false
}

// SetDisableModule gets a reference to the given bool and assigns it to the DisableModule field.
func (o *Ap) SetDisableModule(v bool) {
	o.DisableModule = &v
}

// GetEslConfig returns the EslConfig field value if set, zero value otherwise.
func (o *Ap) GetEslConfig() ApEslConfig {
	if o == nil || IsNil(o.EslConfig) {
		var ret ApEslConfig
		return ret
	}
	return *o.EslConfig
}

// GetEslConfigOk returns a tuple with the EslConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetEslConfigOk() (*ApEslConfig, bool) {
	if o == nil || IsNil(o.EslConfig) {
		return nil, false
	}
	return o.EslConfig, true
}

// HasEslConfig returns a boolean if a field has been set.
func (o *Ap) HasEslConfig() bool {
	if o != nil && !IsNil(o.EslConfig) {
		return true
	}

	return false
}

// SetEslConfig gets a reference to the given ApEslConfig and assigns it to the EslConfig field.
func (o *Ap) SetEslConfig(v ApEslConfig) {
	o.EslConfig = &v
}

// GetForSite returns the ForSite field value if set, zero value otherwise.
func (o *Ap) GetForSite() bool {
	if o == nil || IsNil(o.ForSite) {
		var ret bool
		return ret
	}
	return *o.ForSite
}

// GetForSiteOk returns a tuple with the ForSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetForSiteOk() (*bool, bool) {
	if o == nil || IsNil(o.ForSite) {
		return nil, false
	}
	return o.ForSite, true
}

// HasForSite returns a boolean if a field has been set.
func (o *Ap) HasForSite() bool {
	if o != nil && !IsNil(o.ForSite) {
		return true
	}

	return false
}

// SetForSite gets a reference to the given bool and assigns it to the ForSite field.
func (o *Ap) SetForSite(v bool) {
	o.ForSite = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *Ap) GetHeight() float32 {
	if o == nil || IsNil(o.Height) {
		var ret float32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetHeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *Ap) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given float32 and assigns it to the Height field.
func (o *Ap) SetHeight(v float32) {
	o.Height = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Ap) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ap) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ap) SetId(v string) {
	o.Id = &v
}

// GetImage1Url returns the Image1Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Ap) GetImage1Url() string {
	if o == nil || IsNil(o.Image1Url.Get()) {
		var ret string
		return ret
	}
	return *o.Image1Url.Get()
}

// GetImage1UrlOk returns a tuple with the Image1Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Ap) GetImage1UrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image1Url.Get(), o.Image1Url.IsSet()
}

// HasImage1Url returns a boolean if a field has been set.
func (o *Ap) HasImage1Url() bool {
	if o != nil && o.Image1Url.IsSet() {
		return true
	}

	return false
}

// SetImage1Url gets a reference to the given NullableString and assigns it to the Image1Url field.
func (o *Ap) SetImage1Url(v string) {
	o.Image1Url.Set(&v)
}
// SetImage1UrlNil sets the value for Image1Url to be an explicit nil
func (o *Ap) SetImage1UrlNil() {
	o.Image1Url.Set(nil)
}

// UnsetImage1Url ensures that no value is present for Image1Url, not even an explicit nil
func (o *Ap) UnsetImage1Url() {
	o.Image1Url.Unset()
}

// GetImage2Url returns the Image2Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Ap) GetImage2Url() string {
	if o == nil || IsNil(o.Image2Url.Get()) {
		var ret string
		return ret
	}
	return *o.Image2Url.Get()
}

// GetImage2UrlOk returns a tuple with the Image2Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Ap) GetImage2UrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image2Url.Get(), o.Image2Url.IsSet()
}

// HasImage2Url returns a boolean if a field has been set.
func (o *Ap) HasImage2Url() bool {
	if o != nil && o.Image2Url.IsSet() {
		return true
	}

	return false
}

// SetImage2Url gets a reference to the given NullableString and assigns it to the Image2Url field.
func (o *Ap) SetImage2Url(v string) {
	o.Image2Url.Set(&v)
}
// SetImage2UrlNil sets the value for Image2Url to be an explicit nil
func (o *Ap) SetImage2UrlNil() {
	o.Image2Url.Set(nil)
}

// UnsetImage2Url ensures that no value is present for Image2Url, not even an explicit nil
func (o *Ap) UnsetImage2Url() {
	o.Image2Url.Unset()
}

// GetImage3Url returns the Image3Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Ap) GetImage3Url() string {
	if o == nil || IsNil(o.Image3Url.Get()) {
		var ret string
		return ret
	}
	return *o.Image3Url.Get()
}

// GetImage3UrlOk returns a tuple with the Image3Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Ap) GetImage3UrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image3Url.Get(), o.Image3Url.IsSet()
}

// HasImage3Url returns a boolean if a field has been set.
func (o *Ap) HasImage3Url() bool {
	if o != nil && o.Image3Url.IsSet() {
		return true
	}

	return false
}

// SetImage3Url gets a reference to the given NullableString and assigns it to the Image3Url field.
func (o *Ap) SetImage3Url(v string) {
	o.Image3Url.Set(&v)
}
// SetImage3UrlNil sets the value for Image3Url to be an explicit nil
func (o *Ap) SetImage3UrlNil() {
	o.Image3Url.Set(nil)
}

// UnsetImage3Url ensures that no value is present for Image3Url, not even an explicit nil
func (o *Ap) UnsetImage3Url() {
	o.Image3Url.Unset()
}

// GetIotConfig returns the IotConfig field value if set, zero value otherwise.
func (o *Ap) GetIotConfig() ApIot {
	if o == nil || IsNil(o.IotConfig) {
		var ret ApIot
		return ret
	}
	return *o.IotConfig
}

// GetIotConfigOk returns a tuple with the IotConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetIotConfigOk() (*ApIot, bool) {
	if o == nil || IsNil(o.IotConfig) {
		return nil, false
	}
	return o.IotConfig, true
}

// HasIotConfig returns a boolean if a field has been set.
func (o *Ap) HasIotConfig() bool {
	if o != nil && !IsNil(o.IotConfig) {
		return true
	}

	return false
}

// SetIotConfig gets a reference to the given ApIot and assigns it to the IotConfig field.
func (o *Ap) SetIotConfig(v ApIot) {
	o.IotConfig = &v
}

// GetIpConfig returns the IpConfig field value if set, zero value otherwise.
func (o *Ap) GetIpConfig() ApIpConfig {
	if o == nil || IsNil(o.IpConfig) {
		var ret ApIpConfig
		return ret
	}
	return *o.IpConfig
}

// GetIpConfigOk returns a tuple with the IpConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetIpConfigOk() (*ApIpConfig, bool) {
	if o == nil || IsNil(o.IpConfig) {
		return nil, false
	}
	return o.IpConfig, true
}

// HasIpConfig returns a boolean if a field has been set.
func (o *Ap) HasIpConfig() bool {
	if o != nil && !IsNil(o.IpConfig) {
		return true
	}

	return false
}

// SetIpConfig gets a reference to the given ApIpConfig and assigns it to the IpConfig field.
func (o *Ap) SetIpConfig(v ApIpConfig) {
	o.IpConfig = &v
}

// GetLed returns the Led field value if set, zero value otherwise.
func (o *Ap) GetLed() ApLed {
	if o == nil || IsNil(o.Led) {
		var ret ApLed
		return ret
	}
	return *o.Led
}

// GetLedOk returns a tuple with the Led field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetLedOk() (*ApLed, bool) {
	if o == nil || IsNil(o.Led) {
		return nil, false
	}
	return o.Led, true
}

// HasLed returns a boolean if a field has been set.
func (o *Ap) HasLed() bool {
	if o != nil && !IsNil(o.Led) {
		return true
	}

	return false
}

// SetLed gets a reference to the given ApLed and assigns it to the Led field.
func (o *Ap) SetLed(v ApLed) {
	o.Led = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *Ap) GetLocked() bool {
	if o == nil || IsNil(o.Locked) {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.Locked) {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *Ap) HasLocked() bool {
	if o != nil && !IsNil(o.Locked) {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *Ap) SetLocked(v bool) {
	o.Locked = &v
}

// GetMapId returns the MapId field value if set, zero value otherwise.
func (o *Ap) GetMapId() string {
	if o == nil || IsNil(o.MapId) {
		var ret string
		return ret
	}
	return *o.MapId
}

// GetMapIdOk returns a tuple with the MapId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetMapIdOk() (*string, bool) {
	if o == nil || IsNil(o.MapId) {
		return nil, false
	}
	return o.MapId, true
}

// HasMapId returns a boolean if a field has been set.
func (o *Ap) HasMapId() bool {
	if o != nil && !IsNil(o.MapId) {
		return true
	}

	return false
}

// SetMapId gets a reference to the given string and assigns it to the MapId field.
func (o *Ap) SetMapId(v string) {
	o.MapId = &v
}

// GetMesh returns the Mesh field value if set, zero value otherwise.
func (o *Ap) GetMesh() ApMesh {
	if o == nil || IsNil(o.Mesh) {
		var ret ApMesh
		return ret
	}
	return *o.Mesh
}

// GetMeshOk returns a tuple with the Mesh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetMeshOk() (*ApMesh, bool) {
	if o == nil || IsNil(o.Mesh) {
		return nil, false
	}
	return o.Mesh, true
}

// HasMesh returns a boolean if a field has been set.
func (o *Ap) HasMesh() bool {
	if o != nil && !IsNil(o.Mesh) {
		return true
	}

	return false
}

// SetMesh gets a reference to the given ApMesh and assigns it to the Mesh field.
func (o *Ap) SetMesh(v ApMesh) {
	o.Mesh = &v
}

// GetModifiedTime returns the ModifiedTime field value if set, zero value otherwise.
func (o *Ap) GetModifiedTime() float32 {
	if o == nil || IsNil(o.ModifiedTime) {
		var ret float32
		return ret
	}
	return *o.ModifiedTime
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetModifiedTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.ModifiedTime) {
		return nil, false
	}
	return o.ModifiedTime, true
}

// HasModifiedTime returns a boolean if a field has been set.
func (o *Ap) HasModifiedTime() bool {
	if o != nil && !IsNil(o.ModifiedTime) {
		return true
	}

	return false
}

// SetModifiedTime gets a reference to the given float32 and assigns it to the ModifiedTime field.
func (o *Ap) SetModifiedTime(v float32) {
	o.ModifiedTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Ap) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ap) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ap) SetName(v string) {
	o.Name = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *Ap) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *Ap) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *Ap) SetNotes(v string) {
	o.Notes = &v
}

// GetNtpServers returns the NtpServers field value if set, zero value otherwise.
func (o *Ap) GetNtpServers() []string {
	if o == nil || IsNil(o.NtpServers) {
		var ret []string
		return ret
	}
	return o.NtpServers
}

// GetNtpServersOk returns a tuple with the NtpServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetNtpServersOk() ([]string, bool) {
	if o == nil || IsNil(o.NtpServers) {
		return nil, false
	}
	return o.NtpServers, true
}

// HasNtpServers returns a boolean if a field has been set.
func (o *Ap) HasNtpServers() bool {
	if o != nil && !IsNil(o.NtpServers) {
		return true
	}

	return false
}

// SetNtpServers gets a reference to the given []string and assigns it to the NtpServers field.
func (o *Ap) SetNtpServers(v []string) {
	o.NtpServers = v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *Ap) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *Ap) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *Ap) SetOrgId(v string) {
	o.OrgId = &v
}

// GetOrientation returns the Orientation field value if set, zero value otherwise.
func (o *Ap) GetOrientation() int32 {
	if o == nil || IsNil(o.Orientation) {
		var ret int32
		return ret
	}
	return *o.Orientation
}

// GetOrientationOk returns a tuple with the Orientation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetOrientationOk() (*int32, bool) {
	if o == nil || IsNil(o.Orientation) {
		return nil, false
	}
	return o.Orientation, true
}

// HasOrientation returns a boolean if a field has been set.
func (o *Ap) HasOrientation() bool {
	if o != nil && !IsNil(o.Orientation) {
		return true
	}

	return false
}

// SetOrientation gets a reference to the given int32 and assigns it to the Orientation field.
func (o *Ap) SetOrientation(v int32) {
	o.Orientation = &v
}

// GetPoePassthrough returns the PoePassthrough field value if set, zero value otherwise.
func (o *Ap) GetPoePassthrough() bool {
	if o == nil || IsNil(o.PoePassthrough) {
		var ret bool
		return ret
	}
	return *o.PoePassthrough
}

// GetPoePassthroughOk returns a tuple with the PoePassthrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetPoePassthroughOk() (*bool, bool) {
	if o == nil || IsNil(o.PoePassthrough) {
		return nil, false
	}
	return o.PoePassthrough, true
}

// HasPoePassthrough returns a boolean if a field has been set.
func (o *Ap) HasPoePassthrough() bool {
	if o != nil && !IsNil(o.PoePassthrough) {
		return true
	}

	return false
}

// SetPoePassthrough gets a reference to the given bool and assigns it to the PoePassthrough field.
func (o *Ap) SetPoePassthrough(v bool) {
	o.PoePassthrough = &v
}

// GetPortConfig returns the PortConfig field value if set, zero value otherwise.
func (o *Ap) GetPortConfig() map[string]ApPortConfig {
	if o == nil || IsNil(o.PortConfig) {
		var ret map[string]ApPortConfig
		return ret
	}
	return *o.PortConfig
}

// GetPortConfigOk returns a tuple with the PortConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetPortConfigOk() (*map[string]ApPortConfig, bool) {
	if o == nil || IsNil(o.PortConfig) {
		return nil, false
	}
	return o.PortConfig, true
}

// HasPortConfig returns a boolean if a field has been set.
func (o *Ap) HasPortConfig() bool {
	if o != nil && !IsNil(o.PortConfig) {
		return true
	}

	return false
}

// SetPortConfig gets a reference to the given map[string]ApPortConfig and assigns it to the PortConfig field.
func (o *Ap) SetPortConfig(v map[string]ApPortConfig) {
	o.PortConfig = &v
}

// GetPwrConfig returns the PwrConfig field value if set, zero value otherwise.
func (o *Ap) GetPwrConfig() ApPwrConfig {
	if o == nil || IsNil(o.PwrConfig) {
		var ret ApPwrConfig
		return ret
	}
	return *o.PwrConfig
}

// GetPwrConfigOk returns a tuple with the PwrConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetPwrConfigOk() (*ApPwrConfig, bool) {
	if o == nil || IsNil(o.PwrConfig) {
		return nil, false
	}
	return o.PwrConfig, true
}

// HasPwrConfig returns a boolean if a field has been set.
func (o *Ap) HasPwrConfig() bool {
	if o != nil && !IsNil(o.PwrConfig) {
		return true
	}

	return false
}

// SetPwrConfig gets a reference to the given ApPwrConfig and assigns it to the PwrConfig field.
func (o *Ap) SetPwrConfig(v ApPwrConfig) {
	o.PwrConfig = &v
}

// GetRadioConfig returns the RadioConfig field value if set, zero value otherwise.
func (o *Ap) GetRadioConfig() ApRadio {
	if o == nil || IsNil(o.RadioConfig) {
		var ret ApRadio
		return ret
	}
	return *o.RadioConfig
}

// GetRadioConfigOk returns a tuple with the RadioConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetRadioConfigOk() (*ApRadio, bool) {
	if o == nil || IsNil(o.RadioConfig) {
		return nil, false
	}
	return o.RadioConfig, true
}

// HasRadioConfig returns a boolean if a field has been set.
func (o *Ap) HasRadioConfig() bool {
	if o != nil && !IsNil(o.RadioConfig) {
		return true
	}

	return false
}

// SetRadioConfig gets a reference to the given ApRadio and assigns it to the RadioConfig field.
func (o *Ap) SetRadioConfig(v ApRadio) {
	o.RadioConfig = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *Ap) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *Ap) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *Ap) SetSiteId(v string) {
	o.SiteId = &v
}

// GetUplinkPortConfig returns the UplinkPortConfig field value if set, zero value otherwise.
func (o *Ap) GetUplinkPortConfig() ApUplinkPortConfig {
	if o == nil || IsNil(o.UplinkPortConfig) {
		var ret ApUplinkPortConfig
		return ret
	}
	return *o.UplinkPortConfig
}

// GetUplinkPortConfigOk returns a tuple with the UplinkPortConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetUplinkPortConfigOk() (*ApUplinkPortConfig, bool) {
	if o == nil || IsNil(o.UplinkPortConfig) {
		return nil, false
	}
	return o.UplinkPortConfig, true
}

// HasUplinkPortConfig returns a boolean if a field has been set.
func (o *Ap) HasUplinkPortConfig() bool {
	if o != nil && !IsNil(o.UplinkPortConfig) {
		return true
	}

	return false
}

// SetUplinkPortConfig gets a reference to the given ApUplinkPortConfig and assigns it to the UplinkPortConfig field.
func (o *Ap) SetUplinkPortConfig(v ApUplinkPortConfig) {
	o.UplinkPortConfig = &v
}

// GetUsbConfig returns the UsbConfig field value if set, zero value otherwise.
func (o *Ap) GetUsbConfig() ApUsb {
	if o == nil || IsNil(o.UsbConfig) {
		var ret ApUsb
		return ret
	}
	return *o.UsbConfig
}

// GetUsbConfigOk returns a tuple with the UsbConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetUsbConfigOk() (*ApUsb, bool) {
	if o == nil || IsNil(o.UsbConfig) {
		return nil, false
	}
	return o.UsbConfig, true
}

// HasUsbConfig returns a boolean if a field has been set.
func (o *Ap) HasUsbConfig() bool {
	if o != nil && !IsNil(o.UsbConfig) {
		return true
	}

	return false
}

// SetUsbConfig gets a reference to the given ApUsb and assigns it to the UsbConfig field.
func (o *Ap) SetUsbConfig(v ApUsb) {
	o.UsbConfig = &v
}

// GetVars returns the Vars field value if set, zero value otherwise.
func (o *Ap) GetVars() map[string]string {
	if o == nil || IsNil(o.Vars) {
		var ret map[string]string
		return ret
	}
	return *o.Vars
}

// GetVarsOk returns a tuple with the Vars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetVarsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Vars) {
		return nil, false
	}
	return o.Vars, true
}

// HasVars returns a boolean if a field has been set.
func (o *Ap) HasVars() bool {
	if o != nil && !IsNil(o.Vars) {
		return true
	}

	return false
}

// SetVars gets a reference to the given map[string]string and assigns it to the Vars field.
func (o *Ap) SetVars(v map[string]string) {
	o.Vars = &v
}

// GetX returns the X field value if set, zero value otherwise.
func (o *Ap) GetX() float32 {
	if o == nil || IsNil(o.X) {
		var ret float32
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetXOk() (*float32, bool) {
	if o == nil || IsNil(o.X) {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *Ap) HasX() bool {
	if o != nil && !IsNil(o.X) {
		return true
	}

	return false
}

// SetX gets a reference to the given float32 and assigns it to the X field.
func (o *Ap) SetX(v float32) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *Ap) GetY() float32 {
	if o == nil || IsNil(o.Y) {
		var ret float32
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ap) GetYOk() (*float32, bool) {
	if o == nil || IsNil(o.Y) {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *Ap) HasY() bool {
	if o != nil && !IsNil(o.Y) {
		return true
	}

	return false
}

// SetY gets a reference to the given float32 and assigns it to the Y field.
func (o *Ap) SetY(v float32) {
	o.Y = &v
}

func (o Ap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aeroscout) {
		toSerialize["aeroscout"] = o.Aeroscout
	}
	if !IsNil(o.BleConfig) {
		toSerialize["ble_config"] = o.BleConfig
	}
	if !IsNil(o.Centrak) {
		toSerialize["centrak"] = o.Centrak
	}
	if !IsNil(o.ClientBridge) {
		toSerialize["client_bridge"] = o.ClientBridge
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if o.DeviceprofileId.IsSet() {
		toSerialize["deviceprofile_id"] = o.DeviceprofileId.Get()
	}
	if !IsNil(o.DisableEth1) {
		toSerialize["disable_eth1"] = o.DisableEth1
	}
	if !IsNil(o.DisableEth2) {
		toSerialize["disable_eth2"] = o.DisableEth2
	}
	if !IsNil(o.DisableEth3) {
		toSerialize["disable_eth3"] = o.DisableEth3
	}
	if !IsNil(o.DisableModule) {
		toSerialize["disable_module"] = o.DisableModule
	}
	if !IsNil(o.EslConfig) {
		toSerialize["esl_config"] = o.EslConfig
	}
	if !IsNil(o.ForSite) {
		toSerialize["for_site"] = o.ForSite
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Image1Url.IsSet() {
		toSerialize["image1_url"] = o.Image1Url.Get()
	}
	if o.Image2Url.IsSet() {
		toSerialize["image2_url"] = o.Image2Url.Get()
	}
	if o.Image3Url.IsSet() {
		toSerialize["image3_url"] = o.Image3Url.Get()
	}
	if !IsNil(o.IotConfig) {
		toSerialize["iot_config"] = o.IotConfig
	}
	if !IsNil(o.IpConfig) {
		toSerialize["ip_config"] = o.IpConfig
	}
	if !IsNil(o.Led) {
		toSerialize["led"] = o.Led
	}
	if !IsNil(o.Locked) {
		toSerialize["locked"] = o.Locked
	}
	if !IsNil(o.MapId) {
		toSerialize["map_id"] = o.MapId
	}
	if !IsNil(o.Mesh) {
		toSerialize["mesh"] = o.Mesh
	}
	if !IsNil(o.ModifiedTime) {
		toSerialize["modified_time"] = o.ModifiedTime
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.NtpServers) {
		toSerialize["ntp_servers"] = o.NtpServers
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.Orientation) {
		toSerialize["orientation"] = o.Orientation
	}
	if !IsNil(o.PoePassthrough) {
		toSerialize["poe_passthrough"] = o.PoePassthrough
	}
	if !IsNil(o.PortConfig) {
		toSerialize["port_config"] = o.PortConfig
	}
	if !IsNil(o.PwrConfig) {
		toSerialize["pwr_config"] = o.PwrConfig
	}
	if !IsNil(o.RadioConfig) {
		toSerialize["radio_config"] = o.RadioConfig
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.UplinkPortConfig) {
		toSerialize["uplink_port_config"] = o.UplinkPortConfig
	}
	if !IsNil(o.UsbConfig) {
		toSerialize["usb_config"] = o.UsbConfig
	}
	if !IsNil(o.Vars) {
		toSerialize["vars"] = o.Vars
	}
	if !IsNil(o.X) {
		toSerialize["x"] = o.X
	}
	if !IsNil(o.Y) {
		toSerialize["y"] = o.Y
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Ap) UnmarshalJSON(data []byte) (err error) {
	varAp := _Ap{}

	err = json.Unmarshal(data, &varAp)

	if err != nil {
		return err
	}

	*o = Ap(varAp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "aeroscout")
		delete(additionalProperties, "ble_config")
		delete(additionalProperties, "centrak")
		delete(additionalProperties, "client_bridge")
		delete(additionalProperties, "created_time")
		delete(additionalProperties, "deviceprofile_id")
		delete(additionalProperties, "disable_eth1")
		delete(additionalProperties, "disable_eth2")
		delete(additionalProperties, "disable_eth3")
		delete(additionalProperties, "disable_module")
		delete(additionalProperties, "esl_config")
		delete(additionalProperties, "for_site")
		delete(additionalProperties, "height")
		delete(additionalProperties, "id")
		delete(additionalProperties, "image1_url")
		delete(additionalProperties, "image2_url")
		delete(additionalProperties, "image3_url")
		delete(additionalProperties, "iot_config")
		delete(additionalProperties, "ip_config")
		delete(additionalProperties, "led")
		delete(additionalProperties, "locked")
		delete(additionalProperties, "map_id")
		delete(additionalProperties, "mesh")
		delete(additionalProperties, "modified_time")
		delete(additionalProperties, "name")
		delete(additionalProperties, "notes")
		delete(additionalProperties, "ntp_servers")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "orientation")
		delete(additionalProperties, "poe_passthrough")
		delete(additionalProperties, "port_config")
		delete(additionalProperties, "pwr_config")
		delete(additionalProperties, "radio_config")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "uplink_port_config")
		delete(additionalProperties, "usb_config")
		delete(additionalProperties, "vars")
		delete(additionalProperties, "x")
		delete(additionalProperties, "y")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAp struct {
	value *Ap
	isSet bool
}

func (v NullableAp) Get() *Ap {
	return v.value
}

func (v *NullableAp) Set(val *Ap) {
	v.value = val
	v.isSet = true
}

func (v NullableAp) IsSet() bool {
	return v.isSet
}

func (v *NullableAp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAp(val *Ap) *NullableAp {
	return &NullableAp{value: val, isSet: true}
}

func (v NullableAp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


