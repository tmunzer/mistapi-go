/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the SleImpactedUsers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SleImpactedUsers{}

// SleImpactedUsers struct for SleImpactedUsers
type SleImpactedUsers struct {
	Classifier string `json:"classifier"`
	End float32 `json:"end"`
	Failure string `json:"failure"`
	Limit float32 `json:"limit"`
	Metric string `json:"metric"`
	Page float32 `json:"page"`
	Start float32 `json:"start"`
	TotalCount float32 `json:"total_count"`
	Users []SleImpactedUsersUser `json:"users"`
	AdditionalProperties map[string]interface{}
}

type _SleImpactedUsers SleImpactedUsers

// NewSleImpactedUsers instantiates a new SleImpactedUsers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSleImpactedUsers(classifier string, end float32, failure string, limit float32, metric string, page float32, start float32, totalCount float32, users []SleImpactedUsersUser) *SleImpactedUsers {
	this := SleImpactedUsers{}
	this.Classifier = classifier
	this.End = end
	this.Failure = failure
	this.Limit = limit
	this.Metric = metric
	this.Page = page
	this.Start = start
	this.TotalCount = totalCount
	this.Users = users
	return &this
}

// NewSleImpactedUsersWithDefaults instantiates a new SleImpactedUsers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSleImpactedUsersWithDefaults() *SleImpactedUsers {
	this := SleImpactedUsers{}
	return &this
}

// GetClassifier returns the Classifier field value
func (o *SleImpactedUsers) GetClassifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Classifier
}

// GetClassifierOk returns a tuple with the Classifier field value
// and a boolean to check if the value has been set.
func (o *SleImpactedUsers) GetClassifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Classifier, true
}

// SetClassifier sets field value
func (o *SleImpactedUsers) SetClassifier(v string) {
	o.Classifier = v
}

// GetEnd returns the End field value
func (o *SleImpactedUsers) GetEnd() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *SleImpactedUsers) GetEndOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *SleImpactedUsers) SetEnd(v float32) {
	o.End = v
}

// GetFailure returns the Failure field value
func (o *SleImpactedUsers) GetFailure() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Failure
}

// GetFailureOk returns a tuple with the Failure field value
// and a boolean to check if the value has been set.
func (o *SleImpactedUsers) GetFailureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Failure, true
}

// SetFailure sets field value
func (o *SleImpactedUsers) SetFailure(v string) {
	o.Failure = v
}

// GetLimit returns the Limit field value
func (o *SleImpactedUsers) GetLimit() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *SleImpactedUsers) GetLimitOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *SleImpactedUsers) SetLimit(v float32) {
	o.Limit = v
}

// GetMetric returns the Metric field value
func (o *SleImpactedUsers) GetMetric() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Metric
}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
func (o *SleImpactedUsers) GetMetricOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metric, true
}

// SetMetric sets field value
func (o *SleImpactedUsers) SetMetric(v string) {
	o.Metric = v
}

// GetPage returns the Page field value
func (o *SleImpactedUsers) GetPage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *SleImpactedUsers) GetPageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *SleImpactedUsers) SetPage(v float32) {
	o.Page = v
}

// GetStart returns the Start field value
func (o *SleImpactedUsers) GetStart() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *SleImpactedUsers) GetStartOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *SleImpactedUsers) SetStart(v float32) {
	o.Start = v
}

// GetTotalCount returns the TotalCount field value
func (o *SleImpactedUsers) GetTotalCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *SleImpactedUsers) GetTotalCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *SleImpactedUsers) SetTotalCount(v float32) {
	o.TotalCount = v
}

// GetUsers returns the Users field value
func (o *SleImpactedUsers) GetUsers() []SleImpactedUsersUser {
	if o == nil {
		var ret []SleImpactedUsersUser
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *SleImpactedUsers) GetUsersOk() ([]SleImpactedUsersUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *SleImpactedUsers) SetUsers(v []SleImpactedUsersUser) {
	o.Users = v
}

func (o SleImpactedUsers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SleImpactedUsers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["classifier"] = o.Classifier
	toSerialize["end"] = o.End
	toSerialize["failure"] = o.Failure
	toSerialize["limit"] = o.Limit
	toSerialize["metric"] = o.Metric
	toSerialize["page"] = o.Page
	toSerialize["start"] = o.Start
	toSerialize["total_count"] = o.TotalCount
	toSerialize["users"] = o.Users

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SleImpactedUsers) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"classifier",
		"end",
		"failure",
		"limit",
		"metric",
		"page",
		"start",
		"total_count",
		"users",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSleImpactedUsers := _SleImpactedUsers{}

	err = json.Unmarshal(data, &varSleImpactedUsers)

	if err != nil {
		return err
	}

	*o = SleImpactedUsers(varSleImpactedUsers)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "classifier")
		delete(additionalProperties, "end")
		delete(additionalProperties, "failure")
		delete(additionalProperties, "limit")
		delete(additionalProperties, "metric")
		delete(additionalProperties, "page")
		delete(additionalProperties, "start")
		delete(additionalProperties, "total_count")
		delete(additionalProperties, "users")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSleImpactedUsers struct {
	value *SleImpactedUsers
	isSet bool
}

func (v NullableSleImpactedUsers) Get() *SleImpactedUsers {
	return v.value
}

func (v *NullableSleImpactedUsers) Set(val *SleImpactedUsers) {
	v.value = val
	v.isSet = true
}

func (v NullableSleImpactedUsers) IsSet() bool {
	return v.isSet
}

func (v *NullableSleImpactedUsers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSleImpactedUsers(val *SleImpactedUsers) *NullableSleImpactedUsers {
	return &NullableSleImpactedUsers{value: val, isSet: true}
}

func (v NullableSleImpactedUsers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSleImpactedUsers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


