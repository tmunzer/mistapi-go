/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the WiredClientResponseDeviceMacPortItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WiredClientResponseDeviceMacPortItem{}

// WiredClientResponseDeviceMacPortItem struct for WiredClientResponseDeviceMacPortItem
type WiredClientResponseDeviceMacPortItem struct {
	DeviceMac *string `json:"device_mac,omitempty"`
	Ip *string `json:"ip,omitempty"`
	PortId *string `json:"port_id,omitempty"`
	PortParent *string `json:"port_parent,omitempty"`
	Start *string `json:"start,omitempty"`
	Vlan *int32 `json:"vlan,omitempty"`
	When *string `json:"when,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WiredClientResponseDeviceMacPortItem WiredClientResponseDeviceMacPortItem

// NewWiredClientResponseDeviceMacPortItem instantiates a new WiredClientResponseDeviceMacPortItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWiredClientResponseDeviceMacPortItem() *WiredClientResponseDeviceMacPortItem {
	this := WiredClientResponseDeviceMacPortItem{}
	return &this
}

// NewWiredClientResponseDeviceMacPortItemWithDefaults instantiates a new WiredClientResponseDeviceMacPortItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWiredClientResponseDeviceMacPortItemWithDefaults() *WiredClientResponseDeviceMacPortItem {
	this := WiredClientResponseDeviceMacPortItem{}
	return &this
}

// GetDeviceMac returns the DeviceMac field value if set, zero value otherwise.
func (o *WiredClientResponseDeviceMacPortItem) GetDeviceMac() string {
	if o == nil || IsNil(o.DeviceMac) {
		var ret string
		return ret
	}
	return *o.DeviceMac
}

// GetDeviceMacOk returns a tuple with the DeviceMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponseDeviceMacPortItem) GetDeviceMacOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceMac) {
		return nil, false
	}
	return o.DeviceMac, true
}

// HasDeviceMac returns a boolean if a field has been set.
func (o *WiredClientResponseDeviceMacPortItem) HasDeviceMac() bool {
	if o != nil && !IsNil(o.DeviceMac) {
		return true
	}

	return false
}

// SetDeviceMac gets a reference to the given string and assigns it to the DeviceMac field.
func (o *WiredClientResponseDeviceMacPortItem) SetDeviceMac(v string) {
	o.DeviceMac = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *WiredClientResponseDeviceMacPortItem) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponseDeviceMacPortItem) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *WiredClientResponseDeviceMacPortItem) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *WiredClientResponseDeviceMacPortItem) SetIp(v string) {
	o.Ip = &v
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *WiredClientResponseDeviceMacPortItem) GetPortId() string {
	if o == nil || IsNil(o.PortId) {
		var ret string
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponseDeviceMacPortItem) GetPortIdOk() (*string, bool) {
	if o == nil || IsNil(o.PortId) {
		return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *WiredClientResponseDeviceMacPortItem) HasPortId() bool {
	if o != nil && !IsNil(o.PortId) {
		return true
	}

	return false
}

// SetPortId gets a reference to the given string and assigns it to the PortId field.
func (o *WiredClientResponseDeviceMacPortItem) SetPortId(v string) {
	o.PortId = &v
}

// GetPortParent returns the PortParent field value if set, zero value otherwise.
func (o *WiredClientResponseDeviceMacPortItem) GetPortParent() string {
	if o == nil || IsNil(o.PortParent) {
		var ret string
		return ret
	}
	return *o.PortParent
}

// GetPortParentOk returns a tuple with the PortParent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponseDeviceMacPortItem) GetPortParentOk() (*string, bool) {
	if o == nil || IsNil(o.PortParent) {
		return nil, false
	}
	return o.PortParent, true
}

// HasPortParent returns a boolean if a field has been set.
func (o *WiredClientResponseDeviceMacPortItem) HasPortParent() bool {
	if o != nil && !IsNil(o.PortParent) {
		return true
	}

	return false
}

// SetPortParent gets a reference to the given string and assigns it to the PortParent field.
func (o *WiredClientResponseDeviceMacPortItem) SetPortParent(v string) {
	o.PortParent = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *WiredClientResponseDeviceMacPortItem) GetStart() string {
	if o == nil || IsNil(o.Start) {
		var ret string
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponseDeviceMacPortItem) GetStartOk() (*string, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *WiredClientResponseDeviceMacPortItem) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given string and assigns it to the Start field.
func (o *WiredClientResponseDeviceMacPortItem) SetStart(v string) {
	o.Start = &v
}

// GetVlan returns the Vlan field value if set, zero value otherwise.
func (o *WiredClientResponseDeviceMacPortItem) GetVlan() int32 {
	if o == nil || IsNil(o.Vlan) {
		var ret int32
		return ret
	}
	return *o.Vlan
}

// GetVlanOk returns a tuple with the Vlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponseDeviceMacPortItem) GetVlanOk() (*int32, bool) {
	if o == nil || IsNil(o.Vlan) {
		return nil, false
	}
	return o.Vlan, true
}

// HasVlan returns a boolean if a field has been set.
func (o *WiredClientResponseDeviceMacPortItem) HasVlan() bool {
	if o != nil && !IsNil(o.Vlan) {
		return true
	}

	return false
}

// SetVlan gets a reference to the given int32 and assigns it to the Vlan field.
func (o *WiredClientResponseDeviceMacPortItem) SetVlan(v int32) {
	o.Vlan = &v
}

// GetWhen returns the When field value if set, zero value otherwise.
func (o *WiredClientResponseDeviceMacPortItem) GetWhen() string {
	if o == nil || IsNil(o.When) {
		var ret string
		return ret
	}
	return *o.When
}

// GetWhenOk returns a tuple with the When field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiredClientResponseDeviceMacPortItem) GetWhenOk() (*string, bool) {
	if o == nil || IsNil(o.When) {
		return nil, false
	}
	return o.When, true
}

// HasWhen returns a boolean if a field has been set.
func (o *WiredClientResponseDeviceMacPortItem) HasWhen() bool {
	if o != nil && !IsNil(o.When) {
		return true
	}

	return false
}

// SetWhen gets a reference to the given string and assigns it to the When field.
func (o *WiredClientResponseDeviceMacPortItem) SetWhen(v string) {
	o.When = &v
}

func (o WiredClientResponseDeviceMacPortItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WiredClientResponseDeviceMacPortItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceMac) {
		toSerialize["device_mac"] = o.DeviceMac
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.PortId) {
		toSerialize["port_id"] = o.PortId
	}
	if !IsNil(o.PortParent) {
		toSerialize["port_parent"] = o.PortParent
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.Vlan) {
		toSerialize["vlan"] = o.Vlan
	}
	if !IsNil(o.When) {
		toSerialize["when"] = o.When
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WiredClientResponseDeviceMacPortItem) UnmarshalJSON(data []byte) (err error) {
	varWiredClientResponseDeviceMacPortItem := _WiredClientResponseDeviceMacPortItem{}

	err = json.Unmarshal(data, &varWiredClientResponseDeviceMacPortItem)

	if err != nil {
		return err
	}

	*o = WiredClientResponseDeviceMacPortItem(varWiredClientResponseDeviceMacPortItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "device_mac")
		delete(additionalProperties, "ip")
		delete(additionalProperties, "port_id")
		delete(additionalProperties, "port_parent")
		delete(additionalProperties, "start")
		delete(additionalProperties, "vlan")
		delete(additionalProperties, "when")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWiredClientResponseDeviceMacPortItem struct {
	value *WiredClientResponseDeviceMacPortItem
	isSet bool
}

func (v NullableWiredClientResponseDeviceMacPortItem) Get() *WiredClientResponseDeviceMacPortItem {
	return v.value
}

func (v *NullableWiredClientResponseDeviceMacPortItem) Set(val *WiredClientResponseDeviceMacPortItem) {
	v.value = val
	v.isSet = true
}

func (v NullableWiredClientResponseDeviceMacPortItem) IsSet() bool {
	return v.isSet
}

func (v *NullableWiredClientResponseDeviceMacPortItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWiredClientResponseDeviceMacPortItem(val *WiredClientResponseDeviceMacPortItem) *NullableWiredClientResponseDeviceMacPortItem {
	return &NullableWiredClientResponseDeviceMacPortItem{value: val, isSet: true}
}

func (v NullableWiredClientResponseDeviceMacPortItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWiredClientResponseDeviceMacPortItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


