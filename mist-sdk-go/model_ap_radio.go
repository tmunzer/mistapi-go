/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ApRadio type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApRadio{}

// ApRadio Radio AP settings
type ApRadio struct {
	AllowRrmDisable *bool `json:"allow_rrm_disable,omitempty"`
	// antenna gain for 2.4G - for models with external antenna only
	AntGain24 *int32 `json:"ant_gain_24,omitempty"`
	// antenna gain for 5G - for models with external antenna only
	AntGain5 *int32 `json:"ant_gain_5,omitempty"`
	// antenna gain for 6G - for models with external antenna only
	AntGain6 *int32 `json:"ant_gain_6,omitempty"`
	AntennaMode *ApRadioAntennaMode `json:"antenna_mode,omitempty"`
	Band24 *ApRadioBand24 `json:"band_24,omitempty"`
	Band24Usage *RadioBand24Usage `json:"band_24_usage,omitempty"`
	Band5 *ApRadioBand5 `json:"band_5,omitempty"`
	Band5On24Radio *ApRadioBand5 `json:"band_5_on_24_radio,omitempty"`
	Band6 *ApRadioBand6 `json:"band_6,omitempty"`
	// to make an outdoor operate indoor. for an outdoor-ap, some channels are disallowed by default, this allows the user to use it as an indoor-ap
	IndoorUse *bool `json:"indoor_use,omitempty"`
	// whether scanning radio is enabled
	ScanningEnabled *bool `json:"scanning_enabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApRadio ApRadio

// NewApRadio instantiates a new ApRadio object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApRadio() *ApRadio {
	this := ApRadio{}
	var allowRrmDisable bool = false
	this.AllowRrmDisable = &allowRrmDisable
	var antennaMode ApRadioAntennaMode = APRADIOANTENNAMODE_DEFAULT
	this.AntennaMode = &antennaMode
	var indoorUse bool = false
	this.IndoorUse = &indoorUse
	return &this
}

// NewApRadioWithDefaults instantiates a new ApRadio object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApRadioWithDefaults() *ApRadio {
	this := ApRadio{}
	var allowRrmDisable bool = false
	this.AllowRrmDisable = &allowRrmDisable
	var antennaMode ApRadioAntennaMode = APRADIOANTENNAMODE_DEFAULT
	this.AntennaMode = &antennaMode
	var indoorUse bool = false
	this.IndoorUse = &indoorUse
	return &this
}

// GetAllowRrmDisable returns the AllowRrmDisable field value if set, zero value otherwise.
func (o *ApRadio) GetAllowRrmDisable() bool {
	if o == nil || IsNil(o.AllowRrmDisable) {
		var ret bool
		return ret
	}
	return *o.AllowRrmDisable
}

// GetAllowRrmDisableOk returns a tuple with the AllowRrmDisable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApRadio) GetAllowRrmDisableOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowRrmDisable) {
		return nil, false
	}
	return o.AllowRrmDisable, true
}

// HasAllowRrmDisable returns a boolean if a field has been set.
func (o *ApRadio) HasAllowRrmDisable() bool {
	if o != nil && !IsNil(o.AllowRrmDisable) {
		return true
	}

	return false
}

// SetAllowRrmDisable gets a reference to the given bool and assigns it to the AllowRrmDisable field.
func (o *ApRadio) SetAllowRrmDisable(v bool) {
	o.AllowRrmDisable = &v
}

// GetAntGain24 returns the AntGain24 field value if set, zero value otherwise.
func (o *ApRadio) GetAntGain24() int32 {
	if o == nil || IsNil(o.AntGain24) {
		var ret int32
		return ret
	}
	return *o.AntGain24
}

// GetAntGain24Ok returns a tuple with the AntGain24 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApRadio) GetAntGain24Ok() (*int32, bool) {
	if o == nil || IsNil(o.AntGain24) {
		return nil, false
	}
	return o.AntGain24, true
}

// HasAntGain24 returns a boolean if a field has been set.
func (o *ApRadio) HasAntGain24() bool {
	if o != nil && !IsNil(o.AntGain24) {
		return true
	}

	return false
}

// SetAntGain24 gets a reference to the given int32 and assigns it to the AntGain24 field.
func (o *ApRadio) SetAntGain24(v int32) {
	o.AntGain24 = &v
}

// GetAntGain5 returns the AntGain5 field value if set, zero value otherwise.
func (o *ApRadio) GetAntGain5() int32 {
	if o == nil || IsNil(o.AntGain5) {
		var ret int32
		return ret
	}
	return *o.AntGain5
}

// GetAntGain5Ok returns a tuple with the AntGain5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApRadio) GetAntGain5Ok() (*int32, bool) {
	if o == nil || IsNil(o.AntGain5) {
		return nil, false
	}
	return o.AntGain5, true
}

// HasAntGain5 returns a boolean if a field has been set.
func (o *ApRadio) HasAntGain5() bool {
	if o != nil && !IsNil(o.AntGain5) {
		return true
	}

	return false
}

// SetAntGain5 gets a reference to the given int32 and assigns it to the AntGain5 field.
func (o *ApRadio) SetAntGain5(v int32) {
	o.AntGain5 = &v
}

// GetAntGain6 returns the AntGain6 field value if set, zero value otherwise.
func (o *ApRadio) GetAntGain6() int32 {
	if o == nil || IsNil(o.AntGain6) {
		var ret int32
		return ret
	}
	return *o.AntGain6
}

// GetAntGain6Ok returns a tuple with the AntGain6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApRadio) GetAntGain6Ok() (*int32, bool) {
	if o == nil || IsNil(o.AntGain6) {
		return nil, false
	}
	return o.AntGain6, true
}

// HasAntGain6 returns a boolean if a field has been set.
func (o *ApRadio) HasAntGain6() bool {
	if o != nil && !IsNil(o.AntGain6) {
		return true
	}

	return false
}

// SetAntGain6 gets a reference to the given int32 and assigns it to the AntGain6 field.
func (o *ApRadio) SetAntGain6(v int32) {
	o.AntGain6 = &v
}

// GetAntennaMode returns the AntennaMode field value if set, zero value otherwise.
func (o *ApRadio) GetAntennaMode() ApRadioAntennaMode {
	if o == nil || IsNil(o.AntennaMode) {
		var ret ApRadioAntennaMode
		return ret
	}
	return *o.AntennaMode
}

// GetAntennaModeOk returns a tuple with the AntennaMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApRadio) GetAntennaModeOk() (*ApRadioAntennaMode, bool) {
	if o == nil || IsNil(o.AntennaMode) {
		return nil, false
	}
	return o.AntennaMode, true
}

// HasAntennaMode returns a boolean if a field has been set.
func (o *ApRadio) HasAntennaMode() bool {
	if o != nil && !IsNil(o.AntennaMode) {
		return true
	}

	return false
}

// SetAntennaMode gets a reference to the given ApRadioAntennaMode and assigns it to the AntennaMode field.
func (o *ApRadio) SetAntennaMode(v ApRadioAntennaMode) {
	o.AntennaMode = &v
}

// GetBand24 returns the Band24 field value if set, zero value otherwise.
func (o *ApRadio) GetBand24() ApRadioBand24 {
	if o == nil || IsNil(o.Band24) {
		var ret ApRadioBand24
		return ret
	}
	return *o.Band24
}

// GetBand24Ok returns a tuple with the Band24 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApRadio) GetBand24Ok() (*ApRadioBand24, bool) {
	if o == nil || IsNil(o.Band24) {
		return nil, false
	}
	return o.Band24, true
}

// HasBand24 returns a boolean if a field has been set.
func (o *ApRadio) HasBand24() bool {
	if o != nil && !IsNil(o.Band24) {
		return true
	}

	return false
}

// SetBand24 gets a reference to the given ApRadioBand24 and assigns it to the Band24 field.
func (o *ApRadio) SetBand24(v ApRadioBand24) {
	o.Band24 = &v
}

// GetBand24Usage returns the Band24Usage field value if set, zero value otherwise.
func (o *ApRadio) GetBand24Usage() RadioBand24Usage {
	if o == nil || IsNil(o.Band24Usage) {
		var ret RadioBand24Usage
		return ret
	}
	return *o.Band24Usage
}

// GetBand24UsageOk returns a tuple with the Band24Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApRadio) GetBand24UsageOk() (*RadioBand24Usage, bool) {
	if o == nil || IsNil(o.Band24Usage) {
		return nil, false
	}
	return o.Band24Usage, true
}

// HasBand24Usage returns a boolean if a field has been set.
func (o *ApRadio) HasBand24Usage() bool {
	if o != nil && !IsNil(o.Band24Usage) {
		return true
	}

	return false
}

// SetBand24Usage gets a reference to the given RadioBand24Usage and assigns it to the Band24Usage field.
func (o *ApRadio) SetBand24Usage(v RadioBand24Usage) {
	o.Band24Usage = &v
}

// GetBand5 returns the Band5 field value if set, zero value otherwise.
func (o *ApRadio) GetBand5() ApRadioBand5 {
	if o == nil || IsNil(o.Band5) {
		var ret ApRadioBand5
		return ret
	}
	return *o.Band5
}

// GetBand5Ok returns a tuple with the Band5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApRadio) GetBand5Ok() (*ApRadioBand5, bool) {
	if o == nil || IsNil(o.Band5) {
		return nil, false
	}
	return o.Band5, true
}

// HasBand5 returns a boolean if a field has been set.
func (o *ApRadio) HasBand5() bool {
	if o != nil && !IsNil(o.Band5) {
		return true
	}

	return false
}

// SetBand5 gets a reference to the given ApRadioBand5 and assigns it to the Band5 field.
func (o *ApRadio) SetBand5(v ApRadioBand5) {
	o.Band5 = &v
}

// GetBand5On24Radio returns the Band5On24Radio field value if set, zero value otherwise.
func (o *ApRadio) GetBand5On24Radio() ApRadioBand5 {
	if o == nil || IsNil(o.Band5On24Radio) {
		var ret ApRadioBand5
		return ret
	}
	return *o.Band5On24Radio
}

// GetBand5On24RadioOk returns a tuple with the Band5On24Radio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApRadio) GetBand5On24RadioOk() (*ApRadioBand5, bool) {
	if o == nil || IsNil(o.Band5On24Radio) {
		return nil, false
	}
	return o.Band5On24Radio, true
}

// HasBand5On24Radio returns a boolean if a field has been set.
func (o *ApRadio) HasBand5On24Radio() bool {
	if o != nil && !IsNil(o.Band5On24Radio) {
		return true
	}

	return false
}

// SetBand5On24Radio gets a reference to the given ApRadioBand5 and assigns it to the Band5On24Radio field.
func (o *ApRadio) SetBand5On24Radio(v ApRadioBand5) {
	o.Band5On24Radio = &v
}

// GetBand6 returns the Band6 field value if set, zero value otherwise.
func (o *ApRadio) GetBand6() ApRadioBand6 {
	if o == nil || IsNil(o.Band6) {
		var ret ApRadioBand6
		return ret
	}
	return *o.Band6
}

// GetBand6Ok returns a tuple with the Band6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApRadio) GetBand6Ok() (*ApRadioBand6, bool) {
	if o == nil || IsNil(o.Band6) {
		return nil, false
	}
	return o.Band6, true
}

// HasBand6 returns a boolean if a field has been set.
func (o *ApRadio) HasBand6() bool {
	if o != nil && !IsNil(o.Band6) {
		return true
	}

	return false
}

// SetBand6 gets a reference to the given ApRadioBand6 and assigns it to the Band6 field.
func (o *ApRadio) SetBand6(v ApRadioBand6) {
	o.Band6 = &v
}

// GetIndoorUse returns the IndoorUse field value if set, zero value otherwise.
func (o *ApRadio) GetIndoorUse() bool {
	if o == nil || IsNil(o.IndoorUse) {
		var ret bool
		return ret
	}
	return *o.IndoorUse
}

// GetIndoorUseOk returns a tuple with the IndoorUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApRadio) GetIndoorUseOk() (*bool, bool) {
	if o == nil || IsNil(o.IndoorUse) {
		return nil, false
	}
	return o.IndoorUse, true
}

// HasIndoorUse returns a boolean if a field has been set.
func (o *ApRadio) HasIndoorUse() bool {
	if o != nil && !IsNil(o.IndoorUse) {
		return true
	}

	return false
}

// SetIndoorUse gets a reference to the given bool and assigns it to the IndoorUse field.
func (o *ApRadio) SetIndoorUse(v bool) {
	o.IndoorUse = &v
}

// GetScanningEnabled returns the ScanningEnabled field value if set, zero value otherwise.
func (o *ApRadio) GetScanningEnabled() bool {
	if o == nil || IsNil(o.ScanningEnabled) {
		var ret bool
		return ret
	}
	return *o.ScanningEnabled
}

// GetScanningEnabledOk returns a tuple with the ScanningEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApRadio) GetScanningEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ScanningEnabled) {
		return nil, false
	}
	return o.ScanningEnabled, true
}

// HasScanningEnabled returns a boolean if a field has been set.
func (o *ApRadio) HasScanningEnabled() bool {
	if o != nil && !IsNil(o.ScanningEnabled) {
		return true
	}

	return false
}

// SetScanningEnabled gets a reference to the given bool and assigns it to the ScanningEnabled field.
func (o *ApRadio) SetScanningEnabled(v bool) {
	o.ScanningEnabled = &v
}

func (o ApRadio) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApRadio) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowRrmDisable) {
		toSerialize["allow_rrm_disable"] = o.AllowRrmDisable
	}
	if !IsNil(o.AntGain24) {
		toSerialize["ant_gain_24"] = o.AntGain24
	}
	if !IsNil(o.AntGain5) {
		toSerialize["ant_gain_5"] = o.AntGain5
	}
	if !IsNil(o.AntGain6) {
		toSerialize["ant_gain_6"] = o.AntGain6
	}
	if !IsNil(o.AntennaMode) {
		toSerialize["antenna_mode"] = o.AntennaMode
	}
	if !IsNil(o.Band24) {
		toSerialize["band_24"] = o.Band24
	}
	if !IsNil(o.Band24Usage) {
		toSerialize["band_24_usage"] = o.Band24Usage
	}
	if !IsNil(o.Band5) {
		toSerialize["band_5"] = o.Band5
	}
	if !IsNil(o.Band5On24Radio) {
		toSerialize["band_5_on_24_radio"] = o.Band5On24Radio
	}
	if !IsNil(o.Band6) {
		toSerialize["band_6"] = o.Band6
	}
	if !IsNil(o.IndoorUse) {
		toSerialize["indoor_use"] = o.IndoorUse
	}
	if !IsNil(o.ScanningEnabled) {
		toSerialize["scanning_enabled"] = o.ScanningEnabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApRadio) UnmarshalJSON(data []byte) (err error) {
	varApRadio := _ApRadio{}

	err = json.Unmarshal(data, &varApRadio)

	if err != nil {
		return err
	}

	*o = ApRadio(varApRadio)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allow_rrm_disable")
		delete(additionalProperties, "ant_gain_24")
		delete(additionalProperties, "ant_gain_5")
		delete(additionalProperties, "ant_gain_6")
		delete(additionalProperties, "antenna_mode")
		delete(additionalProperties, "band_24")
		delete(additionalProperties, "band_24_usage")
		delete(additionalProperties, "band_5")
		delete(additionalProperties, "band_5_on_24_radio")
		delete(additionalProperties, "band_6")
		delete(additionalProperties, "indoor_use")
		delete(additionalProperties, "scanning_enabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApRadio struct {
	value *ApRadio
	isSet bool
}

func (v NullableApRadio) Get() *ApRadio {
	return v.value
}

func (v *NullableApRadio) Set(val *ApRadio) {
	v.value = val
	v.isSet = true
}

func (v NullableApRadio) IsSet() bool {
	return v.isSet
}

func (v *NullableApRadio) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApRadio(val *ApRadio) *NullableApRadio {
	return &NullableApRadio{value: val, isSet: true}
}

func (v NullableApRadio) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApRadio) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


