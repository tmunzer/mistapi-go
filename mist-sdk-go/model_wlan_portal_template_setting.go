/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the WlanPortalTemplateSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WlanPortalTemplateSetting{}

// WlanPortalTemplateSetting portal template wlan settings
type WlanPortalTemplateSetting struct {
	// “Please provide valid alternate email”
	AccessCodeAlternateEmail *string `json:"accessCodeAlternateEmail,omitempty"`
	// defines alignment on portal. “left” is default.
	Alignment *string `json:"alignment,omitempty"`
	// label for Amazon auth button
	AuthButtonAmazon *string `json:"authButtonAmazon,omitempty"`
	// label for Azure auth button
	AuthButtonAzure *string `json:"authButtonAzure,omitempty"`
	// label for Email auth button
	AuthButtonEmail *string `json:"authButtonEmail,omitempty"`
	// label for Facebook auth button
	AuthButtonFacebook *string `json:"authButtonFacebook,omitempty"`
	// label for Google auth button
	AuthButtonGoogle *string `json:"authButtonGoogle,omitempty"`
	// label for Microsoft auth button
	AuthButtonMicrosoft *string `json:"authButtonMicrosoft,omitempty"`
	// label for passphrase auth button
	AuthButtonPassphrase *string `json:"authButtonPassphrase,omitempty"`
	// label for SMS auth button
	AuthButtonSms *string `json:"authButtonSms,omitempty"`
	// label for Sponsor auth button
	AuthButtonSponsor *string `json:"authButtonSponsor,omitempty"`
	// “Connect to WiFi with”
	AuthLabel *string `json:"authLabel,omitempty"`
	// label of the link to go back to /logon
	BackLink *string `json:"backLink,omitempty"`
	// “#1074bc”
	Color *string `json:"color,omitempty"`
	// “#0b5183”
	ColorDark *string `json:"colorDark,omitempty"`
	// “#3589c6”
	ColorLight *string `json:"colorLight,omitempty"`
	// whether company field is required
	Company *bool `json:"company,omitempty"`
	// error message when company not provided
	CompanyError *string `json:"companyError,omitempty"`
	// label of company field
	CompanyLabel *string `json:"companyLabel,omitempty"`
	// whether email field is required
	Email *bool `json:"email,omitempty"`
	// error message when a user has valid social login but doesn’t match specified email domains.
	EmailAccessDomainError *string `json:"emailAccessDomainError,omitempty"`
	// Label for cancel confirmation code submission using email auth
	EmailCancel *string `json:"emailCancel,omitempty"`
	EmailCodeCancel *string `json:"emailCodeCancel,omitempty"`
	// “Please provide valid alternate email”
	EmailCodeError *string `json:"emailCodeError,omitempty"`
	// “Confirmation Code”
	EmailCodeFieldLabel *string `json:"emailCodeFieldLabel,omitempty"`
	// “Enter the access number that was sent to your email address.”
	EmailCodeMessage *string `json:"emailCodeMessage,omitempty"`
	// “Sign In
	EmailCodeSubmit *string `json:"emailCodeSubmit,omitempty"`
	// “Access Code”
	EmailCodeTitle *string `json:"emailCodeTitle,omitempty"`
	// error message when email not provided
	EmailError *string `json:"emailError,omitempty"`
	// “Enter your email address”
	EmailFieldLabel *string `json:"emailFieldLabel,omitempty"`
	// label of email field
	EmailLabel *string `json:"emailLabel,omitempty"`
	// “We will email you an authentication code which you can use to connect to the WiFi network.”
	EmailMessage *string `json:"emailMessage,omitempty"`
	// Label for confirmation code submit button using email auth
	EmailSubmit *string `json:"emailSubmit,omitempty"`
	// “Sign in with Email”
	EmailTitle *string `json:"emailTitle,omitempty"`
	// whether to ask field1
	Field1 *bool `json:"field1,omitempty"`
	// error message when field1 not provided
	Field1Error *string `json:"field1Error,omitempty"`
	// label of field1
	Field1Label *string `json:"field1Label,omitempty"`
	// whether field1 is required field
	Field1Required *bool `json:"field1Required,omitempty"`
	// whether to ask field2
	Field2 *bool `json:"field2,omitempty"`
	// error message when field2 not provided
	Field2Error *string `json:"field2Error,omitempty"`
	// label of field2
	Field2Label *string `json:"field2Label,omitempty"`
	// whether field2 is required field
	Field2Required *bool `json:"field2Required,omitempty"`
	// whether to ask field3
	Field3 *bool `json:"field3,omitempty"`
	// error message when field3 not provided
	Field3Error *string `json:"field3Error,omitempty"`
	// label of field3
	Field3Label *string `json:"field3Label,omitempty"`
	// whether field3 is required field
	Field3Required *bool `json:"field3Required,omitempty"`
	// whether to ask field4
	Field4 *bool `json:"field4,omitempty"`
	// error message when field4 not provided
	Field4Error *string `json:"field4Error,omitempty"`
	// label of field4
	Field4Label *string `json:"field4Label,omitempty"`
	// whether field4 is required field
	Field4Required *bool `json:"field4Required,omitempty"`
	// “Please enjoy the complimentary Wifi”
	Message *string `json:"message,omitempty"`
	// whether name field is required
	Name *bool `json:"name,omitempty"`
	// error message when name not provided
	NameError *string `json:"nameError,omitempty"`
	// label of name field
	NameLabel *string `json:"nameLabel,omitempty"`
	// whether to display “Do Not Store My Personal Information”
	Optout *bool `json:"optout,omitempty"`
	// Default value for the \\\"Do not store\\\" checkbox\"
	OptoutDefault *bool `json:"optoutDefault,omitempty"`
	// label for “Do Not Store My Personal Information”
	OptoutLabel *string `json:"optoutLabel,omitempty"`
	// “Welcome”
	PageTitle string `json:"pageTitle"`
	// “Cancel”
	PassphraseCancel *string `json:"passphraseCancel,omitempty"`
	// error message when invalid passphrase is provided
	PassphraseError *string `json:"passphraseError,omitempty"`
	// Passphrase
	PassphraseLabel *string `json:"passphraseLabel,omitempty"`
	// “Login using passphrase”
	PassphraseMessage *string `json:"passphraseMessage,omitempty"`
	// “Sign in”
	PassphraseSubmit *string `json:"passphraseSubmit,omitempty"`
	// Title for passphrase details page
	PassphraseTitle *string `json:"passphraseTitle,omitempty"`
	// whether to show “Powered by Mist”
	PoweredBy *bool `json:"poweredBy,omitempty"`
	// label to denote required field
	RequiredFieldLabel *string `json:"requiredFieldLabel,omitempty"`
	// label of the button to /signin
	SignInLabel *string `json:"signInLabel,omitempty"`
	// “Please Select”
	SmsCarrierDefault *string `json:"smsCarrierDefault,omitempty"`
	// “Please select a mobile carrier”
	SmsCarrierError *string `json:"smsCarrierError,omitempty"`
	// label for mobile carrier drop-down list
	SmsCarrierFieldLabel *string `json:"smsCarrierFieldLabel,omitempty"`
	// Label for cancel confirmation code submission
	SmsCodeCancel *string `json:"smsCodeCancel,omitempty"`
	// error message when confirmation code is invalid
	SmsCodeError *string `json:"smsCodeError,omitempty"`
	// “Confirmation Code”
	SmsCodeFieldLabel *string `json:"smsCodeFieldLabel,omitempty"`
	// “Enter the confirmation code”
	SmsCodeMessage *string `json:"smsCodeMessage,omitempty"`
	// Label for confirmation code submit button
	SmsCodeSubmit *string `json:"smsCodeSubmit,omitempty"`
	// “Access Code”
	SmsCodeTitle *string `json:"smsCodeTitle,omitempty"`
	// “Country Code”
	SmsCountryFieldLabel *string `json:"smsCountryFieldLabel,omitempty"`
	// “+1”
	SmsCountryFormat *string `json:"smsCountryFormat,omitempty"`
	// Label for checkbox to specify that the user has access code
	SmsHaveAccessCode *string `json:"smsHaveAccessCode,omitempty"`
	// format of access code sms message. {{code}} and {{duration}} are place holders and should be retained as is.
	SmsMessageFormat *string `json:"smsMessageFormat,omitempty"`
	// label for canceling mobile details for SMS auth
	SmsNumberCancel *string `json:"smsNumberCancel,omitempty"`
	// “Invalid Mobile Number”
	SmsNumberError *string `json:"smsNumberError,omitempty"`
	// label for field to provide mobile number
	SmsNumberFieldLabel *string `json:"smsNumberFieldLabel,omitempty"`
	// “2125551212 (digits only)”
	SmsNumberFormat *string `json:"smsNumberFormat,omitempty"`
	// “We will send an access code to your mobile number which you can use to connect to the WiFi network. Message and data rates may apply.”
	SmsNumberMessage *string `json:"smsNumberMessage,omitempty"`
	// label for submit button for code generation
	SmsNumberSubmit *string `json:"smsNumberSubmit,omitempty"`
	// Title for phone number details
	SmsNumberTitle *string `json:"smsNumberTitle,omitempty"`
	// “username”
	SmsUsernameFormat *string `json:"smsUsernameFormat,omitempty"`
	// how long confirmation code should be considered valid (in minutes)
	SmsValidityDuration *int32 `json:"smsValidityDuration,omitempty"`
	// “Go back and edit request form”
	SponsorBackLink *string `json:"sponsorBackLink,omitempty"`
	// “Cancel”
	SponsorCancel *string `json:"sponsorCancel,omitempty"`
	// label for Sponsor Email
	SponsorEmail *string `json:"sponsorEmail,omitempty"`
	// “Please provide valid sponsor email”
	SponsorEmailError *string `json:"sponsorEmailError,omitempty"`
	// html template to replace/override default sponsor email template  Sponsor Email Template supports following template variables:   * `approve_url`: Renders URL to approve the request; optionally &minutes=N query param can be appended to change the Authorization period of the guest, where N is a valid integer denoting number of minutes a guest remains authorized  * `deny_url`: Renders URL to reject the request  * `guest_email`: Renders Email ID of the guest  * `guest_name`: Renders Name of the guest  * `field1`: Renders value of the Custom Field 1  * `field2`: Renders value of the Custom Field 2  * `sponsor_link_validity_duration`: Renders validity time of the request (i.e. Approve/Deny URL)  * `auth_expire_minutes`: Renders Wlan-level configured Guest Authorization Expiration time period (in minutes), If not configured then default (1 day in minutes) 
	SponsorEmailTemplate *string `json:"sponsorEmailTemplate,omitempty"`
	// “Your request was approved by”
	SponsorInfoApproved *string `json:"sponsorInfoApproved,omitempty"`
	// “Your request was denied by”
	SponsorInfoDenied *string `json:"sponsorInfoDenied,omitempty"`
	// “Your notification has been sent to”
	SponsorInfoPending *string `json:"sponsorInfoPending,omitempty"`
	// label for Sponsor Name
	SponsorName *string `json:"sponsorName,omitempty"`
	// “Please provide sponsor’s name”
	SponsorNameError *string `json:"sponsorNameError,omitempty"`
	// “Please wait for them to acknowledge.”
	SponsorNotePending *string `json:"sponsorNotePending,omitempty"`
	// ‘submit button label request Wifi Access and notify sponsor about guest request
	SponsorRequestAccess *string `json:"sponsorRequestAccess,omitempty"`
	// “Select Sponsor”
	SponsorSelectEmail *string `json:"sponsorSelectEmail,omitempty"`
	// text to display if sponsor approves request
	SponsorStatusApproved *string `json:"sponsorStatusApproved,omitempty"`
	// text to display when sponsor denies request
	SponsorStatusDenied *string `json:"sponsorStatusDenied,omitempty"`
	// text to display if request is still pending
	SponsorStatusPending *string `json:"sponsorStatusPending,omitempty"`
	// submit button label to notify sponsor about guest request
	SponsorSubmit *string `json:"sponsorSubmit,omitempty"`
	// “Please select a sponsor”
	SponsorsError *string `json:"sponsorsError,omitempty"`
	// “Your request was approved”
	SponsorsInfoApproved *string `json:"sponsorsInfoApproved,omitempty"`
	// “Your request was denied”
	SponsorsInfoDenied *string `json:"sponsorsInfoDenied,omitempty"`
	// “Your notification has been sent to the sponsors”
	SponsorsInfoPending *string `json:"sponsorsInfoPending,omitempty"`
	Tos *bool `json:"tos,omitempty"`
	// prefix of the label of the link to go to /tos
	TosAcceptLabel *string `json:"tosAcceptLabel,omitempty"`
	// error message when tos not accepted
	TosError *string `json:"tosError,omitempty"`
	// label of the link to go to /tos
	TosLink *string `json:"tosLink,omitempty"`
	// text of the Terms of Service
	TosText *string `json:"tosText,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WlanPortalTemplateSetting WlanPortalTemplateSetting

// NewWlanPortalTemplateSetting instantiates a new WlanPortalTemplateSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWlanPortalTemplateSetting(pageTitle string) *WlanPortalTemplateSetting {
	this := WlanPortalTemplateSetting{}
	var company bool = false
	this.Company = &company
	var email bool = false
	this.Email = &email
	var name bool = false
	this.Name = &name
	var optout bool = false
	this.Optout = &optout
	var optoutDefault bool = true
	this.OptoutDefault = &optoutDefault
	var optoutLabel string = "Do not store"
	this.OptoutLabel = &optoutLabel
	this.PageTitle = pageTitle
	var poweredBy bool = true
	this.PoweredBy = &poweredBy
	var tos bool = true
	this.Tos = &tos
	return &this
}

// NewWlanPortalTemplateSettingWithDefaults instantiates a new WlanPortalTemplateSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWlanPortalTemplateSettingWithDefaults() *WlanPortalTemplateSetting {
	this := WlanPortalTemplateSetting{}
	var company bool = false
	this.Company = &company
	var email bool = false
	this.Email = &email
	var name bool = false
	this.Name = &name
	var optout bool = false
	this.Optout = &optout
	var optoutDefault bool = true
	this.OptoutDefault = &optoutDefault
	var optoutLabel string = "Do not store"
	this.OptoutLabel = &optoutLabel
	var poweredBy bool = true
	this.PoweredBy = &poweredBy
	var tos bool = true
	this.Tos = &tos
	return &this
}

// GetAccessCodeAlternateEmail returns the AccessCodeAlternateEmail field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetAccessCodeAlternateEmail() string {
	if o == nil || IsNil(o.AccessCodeAlternateEmail) {
		var ret string
		return ret
	}
	return *o.AccessCodeAlternateEmail
}

// GetAccessCodeAlternateEmailOk returns a tuple with the AccessCodeAlternateEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetAccessCodeAlternateEmailOk() (*string, bool) {
	if o == nil || IsNil(o.AccessCodeAlternateEmail) {
		return nil, false
	}
	return o.AccessCodeAlternateEmail, true
}

// HasAccessCodeAlternateEmail returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasAccessCodeAlternateEmail() bool {
	if o != nil && !IsNil(o.AccessCodeAlternateEmail) {
		return true
	}

	return false
}

// SetAccessCodeAlternateEmail gets a reference to the given string and assigns it to the AccessCodeAlternateEmail field.
func (o *WlanPortalTemplateSetting) SetAccessCodeAlternateEmail(v string) {
	o.AccessCodeAlternateEmail = &v
}

// GetAlignment returns the Alignment field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetAlignment() string {
	if o == nil || IsNil(o.Alignment) {
		var ret string
		return ret
	}
	return *o.Alignment
}

// GetAlignmentOk returns a tuple with the Alignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetAlignmentOk() (*string, bool) {
	if o == nil || IsNil(o.Alignment) {
		return nil, false
	}
	return o.Alignment, true
}

// HasAlignment returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasAlignment() bool {
	if o != nil && !IsNil(o.Alignment) {
		return true
	}

	return false
}

// SetAlignment gets a reference to the given string and assigns it to the Alignment field.
func (o *WlanPortalTemplateSetting) SetAlignment(v string) {
	o.Alignment = &v
}

// GetAuthButtonAmazon returns the AuthButtonAmazon field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetAuthButtonAmazon() string {
	if o == nil || IsNil(o.AuthButtonAmazon) {
		var ret string
		return ret
	}
	return *o.AuthButtonAmazon
}

// GetAuthButtonAmazonOk returns a tuple with the AuthButtonAmazon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetAuthButtonAmazonOk() (*string, bool) {
	if o == nil || IsNil(o.AuthButtonAmazon) {
		return nil, false
	}
	return o.AuthButtonAmazon, true
}

// HasAuthButtonAmazon returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasAuthButtonAmazon() bool {
	if o != nil && !IsNil(o.AuthButtonAmazon) {
		return true
	}

	return false
}

// SetAuthButtonAmazon gets a reference to the given string and assigns it to the AuthButtonAmazon field.
func (o *WlanPortalTemplateSetting) SetAuthButtonAmazon(v string) {
	o.AuthButtonAmazon = &v
}

// GetAuthButtonAzure returns the AuthButtonAzure field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetAuthButtonAzure() string {
	if o == nil || IsNil(o.AuthButtonAzure) {
		var ret string
		return ret
	}
	return *o.AuthButtonAzure
}

// GetAuthButtonAzureOk returns a tuple with the AuthButtonAzure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetAuthButtonAzureOk() (*string, bool) {
	if o == nil || IsNil(o.AuthButtonAzure) {
		return nil, false
	}
	return o.AuthButtonAzure, true
}

// HasAuthButtonAzure returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasAuthButtonAzure() bool {
	if o != nil && !IsNil(o.AuthButtonAzure) {
		return true
	}

	return false
}

// SetAuthButtonAzure gets a reference to the given string and assigns it to the AuthButtonAzure field.
func (o *WlanPortalTemplateSetting) SetAuthButtonAzure(v string) {
	o.AuthButtonAzure = &v
}

// GetAuthButtonEmail returns the AuthButtonEmail field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetAuthButtonEmail() string {
	if o == nil || IsNil(o.AuthButtonEmail) {
		var ret string
		return ret
	}
	return *o.AuthButtonEmail
}

// GetAuthButtonEmailOk returns a tuple with the AuthButtonEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetAuthButtonEmailOk() (*string, bool) {
	if o == nil || IsNil(o.AuthButtonEmail) {
		return nil, false
	}
	return o.AuthButtonEmail, true
}

// HasAuthButtonEmail returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasAuthButtonEmail() bool {
	if o != nil && !IsNil(o.AuthButtonEmail) {
		return true
	}

	return false
}

// SetAuthButtonEmail gets a reference to the given string and assigns it to the AuthButtonEmail field.
func (o *WlanPortalTemplateSetting) SetAuthButtonEmail(v string) {
	o.AuthButtonEmail = &v
}

// GetAuthButtonFacebook returns the AuthButtonFacebook field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetAuthButtonFacebook() string {
	if o == nil || IsNil(o.AuthButtonFacebook) {
		var ret string
		return ret
	}
	return *o.AuthButtonFacebook
}

// GetAuthButtonFacebookOk returns a tuple with the AuthButtonFacebook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetAuthButtonFacebookOk() (*string, bool) {
	if o == nil || IsNil(o.AuthButtonFacebook) {
		return nil, false
	}
	return o.AuthButtonFacebook, true
}

// HasAuthButtonFacebook returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasAuthButtonFacebook() bool {
	if o != nil && !IsNil(o.AuthButtonFacebook) {
		return true
	}

	return false
}

// SetAuthButtonFacebook gets a reference to the given string and assigns it to the AuthButtonFacebook field.
func (o *WlanPortalTemplateSetting) SetAuthButtonFacebook(v string) {
	o.AuthButtonFacebook = &v
}

// GetAuthButtonGoogle returns the AuthButtonGoogle field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetAuthButtonGoogle() string {
	if o == nil || IsNil(o.AuthButtonGoogle) {
		var ret string
		return ret
	}
	return *o.AuthButtonGoogle
}

// GetAuthButtonGoogleOk returns a tuple with the AuthButtonGoogle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetAuthButtonGoogleOk() (*string, bool) {
	if o == nil || IsNil(o.AuthButtonGoogle) {
		return nil, false
	}
	return o.AuthButtonGoogle, true
}

// HasAuthButtonGoogle returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasAuthButtonGoogle() bool {
	if o != nil && !IsNil(o.AuthButtonGoogle) {
		return true
	}

	return false
}

// SetAuthButtonGoogle gets a reference to the given string and assigns it to the AuthButtonGoogle field.
func (o *WlanPortalTemplateSetting) SetAuthButtonGoogle(v string) {
	o.AuthButtonGoogle = &v
}

// GetAuthButtonMicrosoft returns the AuthButtonMicrosoft field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetAuthButtonMicrosoft() string {
	if o == nil || IsNil(o.AuthButtonMicrosoft) {
		var ret string
		return ret
	}
	return *o.AuthButtonMicrosoft
}

// GetAuthButtonMicrosoftOk returns a tuple with the AuthButtonMicrosoft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetAuthButtonMicrosoftOk() (*string, bool) {
	if o == nil || IsNil(o.AuthButtonMicrosoft) {
		return nil, false
	}
	return o.AuthButtonMicrosoft, true
}

// HasAuthButtonMicrosoft returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasAuthButtonMicrosoft() bool {
	if o != nil && !IsNil(o.AuthButtonMicrosoft) {
		return true
	}

	return false
}

// SetAuthButtonMicrosoft gets a reference to the given string and assigns it to the AuthButtonMicrosoft field.
func (o *WlanPortalTemplateSetting) SetAuthButtonMicrosoft(v string) {
	o.AuthButtonMicrosoft = &v
}

// GetAuthButtonPassphrase returns the AuthButtonPassphrase field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetAuthButtonPassphrase() string {
	if o == nil || IsNil(o.AuthButtonPassphrase) {
		var ret string
		return ret
	}
	return *o.AuthButtonPassphrase
}

// GetAuthButtonPassphraseOk returns a tuple with the AuthButtonPassphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetAuthButtonPassphraseOk() (*string, bool) {
	if o == nil || IsNil(o.AuthButtonPassphrase) {
		return nil, false
	}
	return o.AuthButtonPassphrase, true
}

// HasAuthButtonPassphrase returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasAuthButtonPassphrase() bool {
	if o != nil && !IsNil(o.AuthButtonPassphrase) {
		return true
	}

	return false
}

// SetAuthButtonPassphrase gets a reference to the given string and assigns it to the AuthButtonPassphrase field.
func (o *WlanPortalTemplateSetting) SetAuthButtonPassphrase(v string) {
	o.AuthButtonPassphrase = &v
}

// GetAuthButtonSms returns the AuthButtonSms field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetAuthButtonSms() string {
	if o == nil || IsNil(o.AuthButtonSms) {
		var ret string
		return ret
	}
	return *o.AuthButtonSms
}

// GetAuthButtonSmsOk returns a tuple with the AuthButtonSms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetAuthButtonSmsOk() (*string, bool) {
	if o == nil || IsNil(o.AuthButtonSms) {
		return nil, false
	}
	return o.AuthButtonSms, true
}

// HasAuthButtonSms returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasAuthButtonSms() bool {
	if o != nil && !IsNil(o.AuthButtonSms) {
		return true
	}

	return false
}

// SetAuthButtonSms gets a reference to the given string and assigns it to the AuthButtonSms field.
func (o *WlanPortalTemplateSetting) SetAuthButtonSms(v string) {
	o.AuthButtonSms = &v
}

// GetAuthButtonSponsor returns the AuthButtonSponsor field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetAuthButtonSponsor() string {
	if o == nil || IsNil(o.AuthButtonSponsor) {
		var ret string
		return ret
	}
	return *o.AuthButtonSponsor
}

// GetAuthButtonSponsorOk returns a tuple with the AuthButtonSponsor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetAuthButtonSponsorOk() (*string, bool) {
	if o == nil || IsNil(o.AuthButtonSponsor) {
		return nil, false
	}
	return o.AuthButtonSponsor, true
}

// HasAuthButtonSponsor returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasAuthButtonSponsor() bool {
	if o != nil && !IsNil(o.AuthButtonSponsor) {
		return true
	}

	return false
}

// SetAuthButtonSponsor gets a reference to the given string and assigns it to the AuthButtonSponsor field.
func (o *WlanPortalTemplateSetting) SetAuthButtonSponsor(v string) {
	o.AuthButtonSponsor = &v
}

// GetAuthLabel returns the AuthLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetAuthLabel() string {
	if o == nil || IsNil(o.AuthLabel) {
		var ret string
		return ret
	}
	return *o.AuthLabel
}

// GetAuthLabelOk returns a tuple with the AuthLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetAuthLabelOk() (*string, bool) {
	if o == nil || IsNil(o.AuthLabel) {
		return nil, false
	}
	return o.AuthLabel, true
}

// HasAuthLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasAuthLabel() bool {
	if o != nil && !IsNil(o.AuthLabel) {
		return true
	}

	return false
}

// SetAuthLabel gets a reference to the given string and assigns it to the AuthLabel field.
func (o *WlanPortalTemplateSetting) SetAuthLabel(v string) {
	o.AuthLabel = &v
}

// GetBackLink returns the BackLink field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetBackLink() string {
	if o == nil || IsNil(o.BackLink) {
		var ret string
		return ret
	}
	return *o.BackLink
}

// GetBackLinkOk returns a tuple with the BackLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetBackLinkOk() (*string, bool) {
	if o == nil || IsNil(o.BackLink) {
		return nil, false
	}
	return o.BackLink, true
}

// HasBackLink returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasBackLink() bool {
	if o != nil && !IsNil(o.BackLink) {
		return true
	}

	return false
}

// SetBackLink gets a reference to the given string and assigns it to the BackLink field.
func (o *WlanPortalTemplateSetting) SetBackLink(v string) {
	o.BackLink = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *WlanPortalTemplateSetting) SetColor(v string) {
	o.Color = &v
}

// GetColorDark returns the ColorDark field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetColorDark() string {
	if o == nil || IsNil(o.ColorDark) {
		var ret string
		return ret
	}
	return *o.ColorDark
}

// GetColorDarkOk returns a tuple with the ColorDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetColorDarkOk() (*string, bool) {
	if o == nil || IsNil(o.ColorDark) {
		return nil, false
	}
	return o.ColorDark, true
}

// HasColorDark returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasColorDark() bool {
	if o != nil && !IsNil(o.ColorDark) {
		return true
	}

	return false
}

// SetColorDark gets a reference to the given string and assigns it to the ColorDark field.
func (o *WlanPortalTemplateSetting) SetColorDark(v string) {
	o.ColorDark = &v
}

// GetColorLight returns the ColorLight field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetColorLight() string {
	if o == nil || IsNil(o.ColorLight) {
		var ret string
		return ret
	}
	return *o.ColorLight
}

// GetColorLightOk returns a tuple with the ColorLight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetColorLightOk() (*string, bool) {
	if o == nil || IsNil(o.ColorLight) {
		return nil, false
	}
	return o.ColorLight, true
}

// HasColorLight returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasColorLight() bool {
	if o != nil && !IsNil(o.ColorLight) {
		return true
	}

	return false
}

// SetColorLight gets a reference to the given string and assigns it to the ColorLight field.
func (o *WlanPortalTemplateSetting) SetColorLight(v string) {
	o.ColorLight = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetCompany() bool {
	if o == nil || IsNil(o.Company) {
		var ret bool
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetCompanyOk() (*bool, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given bool and assigns it to the Company field.
func (o *WlanPortalTemplateSetting) SetCompany(v bool) {
	o.Company = &v
}

// GetCompanyError returns the CompanyError field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetCompanyError() string {
	if o == nil || IsNil(o.CompanyError) {
		var ret string
		return ret
	}
	return *o.CompanyError
}

// GetCompanyErrorOk returns a tuple with the CompanyError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetCompanyErrorOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyError) {
		return nil, false
	}
	return o.CompanyError, true
}

// HasCompanyError returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasCompanyError() bool {
	if o != nil && !IsNil(o.CompanyError) {
		return true
	}

	return false
}

// SetCompanyError gets a reference to the given string and assigns it to the CompanyError field.
func (o *WlanPortalTemplateSetting) SetCompanyError(v string) {
	o.CompanyError = &v
}

// GetCompanyLabel returns the CompanyLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetCompanyLabel() string {
	if o == nil || IsNil(o.CompanyLabel) {
		var ret string
		return ret
	}
	return *o.CompanyLabel
}

// GetCompanyLabelOk returns a tuple with the CompanyLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetCompanyLabelOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyLabel) {
		return nil, false
	}
	return o.CompanyLabel, true
}

// HasCompanyLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasCompanyLabel() bool {
	if o != nil && !IsNil(o.CompanyLabel) {
		return true
	}

	return false
}

// SetCompanyLabel gets a reference to the given string and assigns it to the CompanyLabel field.
func (o *WlanPortalTemplateSetting) SetCompanyLabel(v string) {
	o.CompanyLabel = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmail() bool {
	if o == nil || IsNil(o.Email) {
		var ret bool
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailOk() (*bool, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given bool and assigns it to the Email field.
func (o *WlanPortalTemplateSetting) SetEmail(v bool) {
	o.Email = &v
}

// GetEmailAccessDomainError returns the EmailAccessDomainError field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailAccessDomainError() string {
	if o == nil || IsNil(o.EmailAccessDomainError) {
		var ret string
		return ret
	}
	return *o.EmailAccessDomainError
}

// GetEmailAccessDomainErrorOk returns a tuple with the EmailAccessDomainError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailAccessDomainErrorOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAccessDomainError) {
		return nil, false
	}
	return o.EmailAccessDomainError, true
}

// HasEmailAccessDomainError returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailAccessDomainError() bool {
	if o != nil && !IsNil(o.EmailAccessDomainError) {
		return true
	}

	return false
}

// SetEmailAccessDomainError gets a reference to the given string and assigns it to the EmailAccessDomainError field.
func (o *WlanPortalTemplateSetting) SetEmailAccessDomainError(v string) {
	o.EmailAccessDomainError = &v
}

// GetEmailCancel returns the EmailCancel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailCancel() string {
	if o == nil || IsNil(o.EmailCancel) {
		var ret string
		return ret
	}
	return *o.EmailCancel
}

// GetEmailCancelOk returns a tuple with the EmailCancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailCancelOk() (*string, bool) {
	if o == nil || IsNil(o.EmailCancel) {
		return nil, false
	}
	return o.EmailCancel, true
}

// HasEmailCancel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailCancel() bool {
	if o != nil && !IsNil(o.EmailCancel) {
		return true
	}

	return false
}

// SetEmailCancel gets a reference to the given string and assigns it to the EmailCancel field.
func (o *WlanPortalTemplateSetting) SetEmailCancel(v string) {
	o.EmailCancel = &v
}

// GetEmailCodeCancel returns the EmailCodeCancel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailCodeCancel() string {
	if o == nil || IsNil(o.EmailCodeCancel) {
		var ret string
		return ret
	}
	return *o.EmailCodeCancel
}

// GetEmailCodeCancelOk returns a tuple with the EmailCodeCancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailCodeCancelOk() (*string, bool) {
	if o == nil || IsNil(o.EmailCodeCancel) {
		return nil, false
	}
	return o.EmailCodeCancel, true
}

// HasEmailCodeCancel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailCodeCancel() bool {
	if o != nil && !IsNil(o.EmailCodeCancel) {
		return true
	}

	return false
}

// SetEmailCodeCancel gets a reference to the given string and assigns it to the EmailCodeCancel field.
func (o *WlanPortalTemplateSetting) SetEmailCodeCancel(v string) {
	o.EmailCodeCancel = &v
}

// GetEmailCodeError returns the EmailCodeError field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailCodeError() string {
	if o == nil || IsNil(o.EmailCodeError) {
		var ret string
		return ret
	}
	return *o.EmailCodeError
}

// GetEmailCodeErrorOk returns a tuple with the EmailCodeError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailCodeErrorOk() (*string, bool) {
	if o == nil || IsNil(o.EmailCodeError) {
		return nil, false
	}
	return o.EmailCodeError, true
}

// HasEmailCodeError returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailCodeError() bool {
	if o != nil && !IsNil(o.EmailCodeError) {
		return true
	}

	return false
}

// SetEmailCodeError gets a reference to the given string and assigns it to the EmailCodeError field.
func (o *WlanPortalTemplateSetting) SetEmailCodeError(v string) {
	o.EmailCodeError = &v
}

// GetEmailCodeFieldLabel returns the EmailCodeFieldLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailCodeFieldLabel() string {
	if o == nil || IsNil(o.EmailCodeFieldLabel) {
		var ret string
		return ret
	}
	return *o.EmailCodeFieldLabel
}

// GetEmailCodeFieldLabelOk returns a tuple with the EmailCodeFieldLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailCodeFieldLabelOk() (*string, bool) {
	if o == nil || IsNil(o.EmailCodeFieldLabel) {
		return nil, false
	}
	return o.EmailCodeFieldLabel, true
}

// HasEmailCodeFieldLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailCodeFieldLabel() bool {
	if o != nil && !IsNil(o.EmailCodeFieldLabel) {
		return true
	}

	return false
}

// SetEmailCodeFieldLabel gets a reference to the given string and assigns it to the EmailCodeFieldLabel field.
func (o *WlanPortalTemplateSetting) SetEmailCodeFieldLabel(v string) {
	o.EmailCodeFieldLabel = &v
}

// GetEmailCodeMessage returns the EmailCodeMessage field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailCodeMessage() string {
	if o == nil || IsNil(o.EmailCodeMessage) {
		var ret string
		return ret
	}
	return *o.EmailCodeMessage
}

// GetEmailCodeMessageOk returns a tuple with the EmailCodeMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailCodeMessageOk() (*string, bool) {
	if o == nil || IsNil(o.EmailCodeMessage) {
		return nil, false
	}
	return o.EmailCodeMessage, true
}

// HasEmailCodeMessage returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailCodeMessage() bool {
	if o != nil && !IsNil(o.EmailCodeMessage) {
		return true
	}

	return false
}

// SetEmailCodeMessage gets a reference to the given string and assigns it to the EmailCodeMessage field.
func (o *WlanPortalTemplateSetting) SetEmailCodeMessage(v string) {
	o.EmailCodeMessage = &v
}

// GetEmailCodeSubmit returns the EmailCodeSubmit field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailCodeSubmit() string {
	if o == nil || IsNil(o.EmailCodeSubmit) {
		var ret string
		return ret
	}
	return *o.EmailCodeSubmit
}

// GetEmailCodeSubmitOk returns a tuple with the EmailCodeSubmit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailCodeSubmitOk() (*string, bool) {
	if o == nil || IsNil(o.EmailCodeSubmit) {
		return nil, false
	}
	return o.EmailCodeSubmit, true
}

// HasEmailCodeSubmit returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailCodeSubmit() bool {
	if o != nil && !IsNil(o.EmailCodeSubmit) {
		return true
	}

	return false
}

// SetEmailCodeSubmit gets a reference to the given string and assigns it to the EmailCodeSubmit field.
func (o *WlanPortalTemplateSetting) SetEmailCodeSubmit(v string) {
	o.EmailCodeSubmit = &v
}

// GetEmailCodeTitle returns the EmailCodeTitle field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailCodeTitle() string {
	if o == nil || IsNil(o.EmailCodeTitle) {
		var ret string
		return ret
	}
	return *o.EmailCodeTitle
}

// GetEmailCodeTitleOk returns a tuple with the EmailCodeTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailCodeTitleOk() (*string, bool) {
	if o == nil || IsNil(o.EmailCodeTitle) {
		return nil, false
	}
	return o.EmailCodeTitle, true
}

// HasEmailCodeTitle returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailCodeTitle() bool {
	if o != nil && !IsNil(o.EmailCodeTitle) {
		return true
	}

	return false
}

// SetEmailCodeTitle gets a reference to the given string and assigns it to the EmailCodeTitle field.
func (o *WlanPortalTemplateSetting) SetEmailCodeTitle(v string) {
	o.EmailCodeTitle = &v
}

// GetEmailError returns the EmailError field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailError() string {
	if o == nil || IsNil(o.EmailError) {
		var ret string
		return ret
	}
	return *o.EmailError
}

// GetEmailErrorOk returns a tuple with the EmailError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailErrorOk() (*string, bool) {
	if o == nil || IsNil(o.EmailError) {
		return nil, false
	}
	return o.EmailError, true
}

// HasEmailError returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailError() bool {
	if o != nil && !IsNil(o.EmailError) {
		return true
	}

	return false
}

// SetEmailError gets a reference to the given string and assigns it to the EmailError field.
func (o *WlanPortalTemplateSetting) SetEmailError(v string) {
	o.EmailError = &v
}

// GetEmailFieldLabel returns the EmailFieldLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailFieldLabel() string {
	if o == nil || IsNil(o.EmailFieldLabel) {
		var ret string
		return ret
	}
	return *o.EmailFieldLabel
}

// GetEmailFieldLabelOk returns a tuple with the EmailFieldLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailFieldLabelOk() (*string, bool) {
	if o == nil || IsNil(o.EmailFieldLabel) {
		return nil, false
	}
	return o.EmailFieldLabel, true
}

// HasEmailFieldLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailFieldLabel() bool {
	if o != nil && !IsNil(o.EmailFieldLabel) {
		return true
	}

	return false
}

// SetEmailFieldLabel gets a reference to the given string and assigns it to the EmailFieldLabel field.
func (o *WlanPortalTemplateSetting) SetEmailFieldLabel(v string) {
	o.EmailFieldLabel = &v
}

// GetEmailLabel returns the EmailLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailLabel() string {
	if o == nil || IsNil(o.EmailLabel) {
		var ret string
		return ret
	}
	return *o.EmailLabel
}

// GetEmailLabelOk returns a tuple with the EmailLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailLabelOk() (*string, bool) {
	if o == nil || IsNil(o.EmailLabel) {
		return nil, false
	}
	return o.EmailLabel, true
}

// HasEmailLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailLabel() bool {
	if o != nil && !IsNil(o.EmailLabel) {
		return true
	}

	return false
}

// SetEmailLabel gets a reference to the given string and assigns it to the EmailLabel field.
func (o *WlanPortalTemplateSetting) SetEmailLabel(v string) {
	o.EmailLabel = &v
}

// GetEmailMessage returns the EmailMessage field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailMessage() string {
	if o == nil || IsNil(o.EmailMessage) {
		var ret string
		return ret
	}
	return *o.EmailMessage
}

// GetEmailMessageOk returns a tuple with the EmailMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailMessageOk() (*string, bool) {
	if o == nil || IsNil(o.EmailMessage) {
		return nil, false
	}
	return o.EmailMessage, true
}

// HasEmailMessage returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailMessage() bool {
	if o != nil && !IsNil(o.EmailMessage) {
		return true
	}

	return false
}

// SetEmailMessage gets a reference to the given string and assigns it to the EmailMessage field.
func (o *WlanPortalTemplateSetting) SetEmailMessage(v string) {
	o.EmailMessage = &v
}

// GetEmailSubmit returns the EmailSubmit field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailSubmit() string {
	if o == nil || IsNil(o.EmailSubmit) {
		var ret string
		return ret
	}
	return *o.EmailSubmit
}

// GetEmailSubmitOk returns a tuple with the EmailSubmit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailSubmitOk() (*string, bool) {
	if o == nil || IsNil(o.EmailSubmit) {
		return nil, false
	}
	return o.EmailSubmit, true
}

// HasEmailSubmit returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailSubmit() bool {
	if o != nil && !IsNil(o.EmailSubmit) {
		return true
	}

	return false
}

// SetEmailSubmit gets a reference to the given string and assigns it to the EmailSubmit field.
func (o *WlanPortalTemplateSetting) SetEmailSubmit(v string) {
	o.EmailSubmit = &v
}

// GetEmailTitle returns the EmailTitle field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetEmailTitle() string {
	if o == nil || IsNil(o.EmailTitle) {
		var ret string
		return ret
	}
	return *o.EmailTitle
}

// GetEmailTitleOk returns a tuple with the EmailTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetEmailTitleOk() (*string, bool) {
	if o == nil || IsNil(o.EmailTitle) {
		return nil, false
	}
	return o.EmailTitle, true
}

// HasEmailTitle returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasEmailTitle() bool {
	if o != nil && !IsNil(o.EmailTitle) {
		return true
	}

	return false
}

// SetEmailTitle gets a reference to the given string and assigns it to the EmailTitle field.
func (o *WlanPortalTemplateSetting) SetEmailTitle(v string) {
	o.EmailTitle = &v
}

// GetField1 returns the Field1 field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField1() bool {
	if o == nil || IsNil(o.Field1) {
		var ret bool
		return ret
	}
	return *o.Field1
}

// GetField1Ok returns a tuple with the Field1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField1Ok() (*bool, bool) {
	if o == nil || IsNil(o.Field1) {
		return nil, false
	}
	return o.Field1, true
}

// HasField1 returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField1() bool {
	if o != nil && !IsNil(o.Field1) {
		return true
	}

	return false
}

// SetField1 gets a reference to the given bool and assigns it to the Field1 field.
func (o *WlanPortalTemplateSetting) SetField1(v bool) {
	o.Field1 = &v
}

// GetField1Error returns the Field1Error field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField1Error() string {
	if o == nil || IsNil(o.Field1Error) {
		var ret string
		return ret
	}
	return *o.Field1Error
}

// GetField1ErrorOk returns a tuple with the Field1Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField1ErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Field1Error) {
		return nil, false
	}
	return o.Field1Error, true
}

// HasField1Error returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField1Error() bool {
	if o != nil && !IsNil(o.Field1Error) {
		return true
	}

	return false
}

// SetField1Error gets a reference to the given string and assigns it to the Field1Error field.
func (o *WlanPortalTemplateSetting) SetField1Error(v string) {
	o.Field1Error = &v
}

// GetField1Label returns the Field1Label field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField1Label() string {
	if o == nil || IsNil(o.Field1Label) {
		var ret string
		return ret
	}
	return *o.Field1Label
}

// GetField1LabelOk returns a tuple with the Field1Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField1LabelOk() (*string, bool) {
	if o == nil || IsNil(o.Field1Label) {
		return nil, false
	}
	return o.Field1Label, true
}

// HasField1Label returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField1Label() bool {
	if o != nil && !IsNil(o.Field1Label) {
		return true
	}

	return false
}

// SetField1Label gets a reference to the given string and assigns it to the Field1Label field.
func (o *WlanPortalTemplateSetting) SetField1Label(v string) {
	o.Field1Label = &v
}

// GetField1Required returns the Field1Required field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField1Required() bool {
	if o == nil || IsNil(o.Field1Required) {
		var ret bool
		return ret
	}
	return *o.Field1Required
}

// GetField1RequiredOk returns a tuple with the Field1Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField1RequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Field1Required) {
		return nil, false
	}
	return o.Field1Required, true
}

// HasField1Required returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField1Required() bool {
	if o != nil && !IsNil(o.Field1Required) {
		return true
	}

	return false
}

// SetField1Required gets a reference to the given bool and assigns it to the Field1Required field.
func (o *WlanPortalTemplateSetting) SetField1Required(v bool) {
	o.Field1Required = &v
}

// GetField2 returns the Field2 field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField2() bool {
	if o == nil || IsNil(o.Field2) {
		var ret bool
		return ret
	}
	return *o.Field2
}

// GetField2Ok returns a tuple with the Field2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField2Ok() (*bool, bool) {
	if o == nil || IsNil(o.Field2) {
		return nil, false
	}
	return o.Field2, true
}

// HasField2 returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField2() bool {
	if o != nil && !IsNil(o.Field2) {
		return true
	}

	return false
}

// SetField2 gets a reference to the given bool and assigns it to the Field2 field.
func (o *WlanPortalTemplateSetting) SetField2(v bool) {
	o.Field2 = &v
}

// GetField2Error returns the Field2Error field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField2Error() string {
	if o == nil || IsNil(o.Field2Error) {
		var ret string
		return ret
	}
	return *o.Field2Error
}

// GetField2ErrorOk returns a tuple with the Field2Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField2ErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Field2Error) {
		return nil, false
	}
	return o.Field2Error, true
}

// HasField2Error returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField2Error() bool {
	if o != nil && !IsNil(o.Field2Error) {
		return true
	}

	return false
}

// SetField2Error gets a reference to the given string and assigns it to the Field2Error field.
func (o *WlanPortalTemplateSetting) SetField2Error(v string) {
	o.Field2Error = &v
}

// GetField2Label returns the Field2Label field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField2Label() string {
	if o == nil || IsNil(o.Field2Label) {
		var ret string
		return ret
	}
	return *o.Field2Label
}

// GetField2LabelOk returns a tuple with the Field2Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField2LabelOk() (*string, bool) {
	if o == nil || IsNil(o.Field2Label) {
		return nil, false
	}
	return o.Field2Label, true
}

// HasField2Label returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField2Label() bool {
	if o != nil && !IsNil(o.Field2Label) {
		return true
	}

	return false
}

// SetField2Label gets a reference to the given string and assigns it to the Field2Label field.
func (o *WlanPortalTemplateSetting) SetField2Label(v string) {
	o.Field2Label = &v
}

// GetField2Required returns the Field2Required field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField2Required() bool {
	if o == nil || IsNil(o.Field2Required) {
		var ret bool
		return ret
	}
	return *o.Field2Required
}

// GetField2RequiredOk returns a tuple with the Field2Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField2RequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Field2Required) {
		return nil, false
	}
	return o.Field2Required, true
}

// HasField2Required returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField2Required() bool {
	if o != nil && !IsNil(o.Field2Required) {
		return true
	}

	return false
}

// SetField2Required gets a reference to the given bool and assigns it to the Field2Required field.
func (o *WlanPortalTemplateSetting) SetField2Required(v bool) {
	o.Field2Required = &v
}

// GetField3 returns the Field3 field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField3() bool {
	if o == nil || IsNil(o.Field3) {
		var ret bool
		return ret
	}
	return *o.Field3
}

// GetField3Ok returns a tuple with the Field3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField3Ok() (*bool, bool) {
	if o == nil || IsNil(o.Field3) {
		return nil, false
	}
	return o.Field3, true
}

// HasField3 returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField3() bool {
	if o != nil && !IsNil(o.Field3) {
		return true
	}

	return false
}

// SetField3 gets a reference to the given bool and assigns it to the Field3 field.
func (o *WlanPortalTemplateSetting) SetField3(v bool) {
	o.Field3 = &v
}

// GetField3Error returns the Field3Error field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField3Error() string {
	if o == nil || IsNil(o.Field3Error) {
		var ret string
		return ret
	}
	return *o.Field3Error
}

// GetField3ErrorOk returns a tuple with the Field3Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField3ErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Field3Error) {
		return nil, false
	}
	return o.Field3Error, true
}

// HasField3Error returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField3Error() bool {
	if o != nil && !IsNil(o.Field3Error) {
		return true
	}

	return false
}

// SetField3Error gets a reference to the given string and assigns it to the Field3Error field.
func (o *WlanPortalTemplateSetting) SetField3Error(v string) {
	o.Field3Error = &v
}

// GetField3Label returns the Field3Label field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField3Label() string {
	if o == nil || IsNil(o.Field3Label) {
		var ret string
		return ret
	}
	return *o.Field3Label
}

// GetField3LabelOk returns a tuple with the Field3Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField3LabelOk() (*string, bool) {
	if o == nil || IsNil(o.Field3Label) {
		return nil, false
	}
	return o.Field3Label, true
}

// HasField3Label returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField3Label() bool {
	if o != nil && !IsNil(o.Field3Label) {
		return true
	}

	return false
}

// SetField3Label gets a reference to the given string and assigns it to the Field3Label field.
func (o *WlanPortalTemplateSetting) SetField3Label(v string) {
	o.Field3Label = &v
}

// GetField3Required returns the Field3Required field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField3Required() bool {
	if o == nil || IsNil(o.Field3Required) {
		var ret bool
		return ret
	}
	return *o.Field3Required
}

// GetField3RequiredOk returns a tuple with the Field3Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField3RequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Field3Required) {
		return nil, false
	}
	return o.Field3Required, true
}

// HasField3Required returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField3Required() bool {
	if o != nil && !IsNil(o.Field3Required) {
		return true
	}

	return false
}

// SetField3Required gets a reference to the given bool and assigns it to the Field3Required field.
func (o *WlanPortalTemplateSetting) SetField3Required(v bool) {
	o.Field3Required = &v
}

// GetField4 returns the Field4 field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField4() bool {
	if o == nil || IsNil(o.Field4) {
		var ret bool
		return ret
	}
	return *o.Field4
}

// GetField4Ok returns a tuple with the Field4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField4Ok() (*bool, bool) {
	if o == nil || IsNil(o.Field4) {
		return nil, false
	}
	return o.Field4, true
}

// HasField4 returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField4() bool {
	if o != nil && !IsNil(o.Field4) {
		return true
	}

	return false
}

// SetField4 gets a reference to the given bool and assigns it to the Field4 field.
func (o *WlanPortalTemplateSetting) SetField4(v bool) {
	o.Field4 = &v
}

// GetField4Error returns the Field4Error field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField4Error() string {
	if o == nil || IsNil(o.Field4Error) {
		var ret string
		return ret
	}
	return *o.Field4Error
}

// GetField4ErrorOk returns a tuple with the Field4Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField4ErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Field4Error) {
		return nil, false
	}
	return o.Field4Error, true
}

// HasField4Error returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField4Error() bool {
	if o != nil && !IsNil(o.Field4Error) {
		return true
	}

	return false
}

// SetField4Error gets a reference to the given string and assigns it to the Field4Error field.
func (o *WlanPortalTemplateSetting) SetField4Error(v string) {
	o.Field4Error = &v
}

// GetField4Label returns the Field4Label field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField4Label() string {
	if o == nil || IsNil(o.Field4Label) {
		var ret string
		return ret
	}
	return *o.Field4Label
}

// GetField4LabelOk returns a tuple with the Field4Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField4LabelOk() (*string, bool) {
	if o == nil || IsNil(o.Field4Label) {
		return nil, false
	}
	return o.Field4Label, true
}

// HasField4Label returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField4Label() bool {
	if o != nil && !IsNil(o.Field4Label) {
		return true
	}

	return false
}

// SetField4Label gets a reference to the given string and assigns it to the Field4Label field.
func (o *WlanPortalTemplateSetting) SetField4Label(v string) {
	o.Field4Label = &v
}

// GetField4Required returns the Field4Required field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetField4Required() bool {
	if o == nil || IsNil(o.Field4Required) {
		var ret bool
		return ret
	}
	return *o.Field4Required
}

// GetField4RequiredOk returns a tuple with the Field4Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetField4RequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Field4Required) {
		return nil, false
	}
	return o.Field4Required, true
}

// HasField4Required returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasField4Required() bool {
	if o != nil && !IsNil(o.Field4Required) {
		return true
	}

	return false
}

// SetField4Required gets a reference to the given bool and assigns it to the Field4Required field.
func (o *WlanPortalTemplateSetting) SetField4Required(v bool) {
	o.Field4Required = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *WlanPortalTemplateSetting) SetMessage(v string) {
	o.Message = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetName() bool {
	if o == nil || IsNil(o.Name) {
		var ret bool
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetNameOk() (*bool, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given bool and assigns it to the Name field.
func (o *WlanPortalTemplateSetting) SetName(v bool) {
	o.Name = &v
}

// GetNameError returns the NameError field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetNameError() string {
	if o == nil || IsNil(o.NameError) {
		var ret string
		return ret
	}
	return *o.NameError
}

// GetNameErrorOk returns a tuple with the NameError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetNameErrorOk() (*string, bool) {
	if o == nil || IsNil(o.NameError) {
		return nil, false
	}
	return o.NameError, true
}

// HasNameError returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasNameError() bool {
	if o != nil && !IsNil(o.NameError) {
		return true
	}

	return false
}

// SetNameError gets a reference to the given string and assigns it to the NameError field.
func (o *WlanPortalTemplateSetting) SetNameError(v string) {
	o.NameError = &v
}

// GetNameLabel returns the NameLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetNameLabel() string {
	if o == nil || IsNil(o.NameLabel) {
		var ret string
		return ret
	}
	return *o.NameLabel
}

// GetNameLabelOk returns a tuple with the NameLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetNameLabelOk() (*string, bool) {
	if o == nil || IsNil(o.NameLabel) {
		return nil, false
	}
	return o.NameLabel, true
}

// HasNameLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasNameLabel() bool {
	if o != nil && !IsNil(o.NameLabel) {
		return true
	}

	return false
}

// SetNameLabel gets a reference to the given string and assigns it to the NameLabel field.
func (o *WlanPortalTemplateSetting) SetNameLabel(v string) {
	o.NameLabel = &v
}

// GetOptout returns the Optout field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetOptout() bool {
	if o == nil || IsNil(o.Optout) {
		var ret bool
		return ret
	}
	return *o.Optout
}

// GetOptoutOk returns a tuple with the Optout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetOptoutOk() (*bool, bool) {
	if o == nil || IsNil(o.Optout) {
		return nil, false
	}
	return o.Optout, true
}

// HasOptout returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasOptout() bool {
	if o != nil && !IsNil(o.Optout) {
		return true
	}

	return false
}

// SetOptout gets a reference to the given bool and assigns it to the Optout field.
func (o *WlanPortalTemplateSetting) SetOptout(v bool) {
	o.Optout = &v
}

// GetOptoutDefault returns the OptoutDefault field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetOptoutDefault() bool {
	if o == nil || IsNil(o.OptoutDefault) {
		var ret bool
		return ret
	}
	return *o.OptoutDefault
}

// GetOptoutDefaultOk returns a tuple with the OptoutDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetOptoutDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.OptoutDefault) {
		return nil, false
	}
	return o.OptoutDefault, true
}

// HasOptoutDefault returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasOptoutDefault() bool {
	if o != nil && !IsNil(o.OptoutDefault) {
		return true
	}

	return false
}

// SetOptoutDefault gets a reference to the given bool and assigns it to the OptoutDefault field.
func (o *WlanPortalTemplateSetting) SetOptoutDefault(v bool) {
	o.OptoutDefault = &v
}

// GetOptoutLabel returns the OptoutLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetOptoutLabel() string {
	if o == nil || IsNil(o.OptoutLabel) {
		var ret string
		return ret
	}
	return *o.OptoutLabel
}

// GetOptoutLabelOk returns a tuple with the OptoutLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetOptoutLabelOk() (*string, bool) {
	if o == nil || IsNil(o.OptoutLabel) {
		return nil, false
	}
	return o.OptoutLabel, true
}

// HasOptoutLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasOptoutLabel() bool {
	if o != nil && !IsNil(o.OptoutLabel) {
		return true
	}

	return false
}

// SetOptoutLabel gets a reference to the given string and assigns it to the OptoutLabel field.
func (o *WlanPortalTemplateSetting) SetOptoutLabel(v string) {
	o.OptoutLabel = &v
}

// GetPageTitle returns the PageTitle field value
func (o *WlanPortalTemplateSetting) GetPageTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PageTitle
}

// GetPageTitleOk returns a tuple with the PageTitle field value
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetPageTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageTitle, true
}

// SetPageTitle sets field value
func (o *WlanPortalTemplateSetting) SetPageTitle(v string) {
	o.PageTitle = v
}

// GetPassphraseCancel returns the PassphraseCancel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetPassphraseCancel() string {
	if o == nil || IsNil(o.PassphraseCancel) {
		var ret string
		return ret
	}
	return *o.PassphraseCancel
}

// GetPassphraseCancelOk returns a tuple with the PassphraseCancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetPassphraseCancelOk() (*string, bool) {
	if o == nil || IsNil(o.PassphraseCancel) {
		return nil, false
	}
	return o.PassphraseCancel, true
}

// HasPassphraseCancel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasPassphraseCancel() bool {
	if o != nil && !IsNil(o.PassphraseCancel) {
		return true
	}

	return false
}

// SetPassphraseCancel gets a reference to the given string and assigns it to the PassphraseCancel field.
func (o *WlanPortalTemplateSetting) SetPassphraseCancel(v string) {
	o.PassphraseCancel = &v
}

// GetPassphraseError returns the PassphraseError field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetPassphraseError() string {
	if o == nil || IsNil(o.PassphraseError) {
		var ret string
		return ret
	}
	return *o.PassphraseError
}

// GetPassphraseErrorOk returns a tuple with the PassphraseError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetPassphraseErrorOk() (*string, bool) {
	if o == nil || IsNil(o.PassphraseError) {
		return nil, false
	}
	return o.PassphraseError, true
}

// HasPassphraseError returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasPassphraseError() bool {
	if o != nil && !IsNil(o.PassphraseError) {
		return true
	}

	return false
}

// SetPassphraseError gets a reference to the given string and assigns it to the PassphraseError field.
func (o *WlanPortalTemplateSetting) SetPassphraseError(v string) {
	o.PassphraseError = &v
}

// GetPassphraseLabel returns the PassphraseLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetPassphraseLabel() string {
	if o == nil || IsNil(o.PassphraseLabel) {
		var ret string
		return ret
	}
	return *o.PassphraseLabel
}

// GetPassphraseLabelOk returns a tuple with the PassphraseLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetPassphraseLabelOk() (*string, bool) {
	if o == nil || IsNil(o.PassphraseLabel) {
		return nil, false
	}
	return o.PassphraseLabel, true
}

// HasPassphraseLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasPassphraseLabel() bool {
	if o != nil && !IsNil(o.PassphraseLabel) {
		return true
	}

	return false
}

// SetPassphraseLabel gets a reference to the given string and assigns it to the PassphraseLabel field.
func (o *WlanPortalTemplateSetting) SetPassphraseLabel(v string) {
	o.PassphraseLabel = &v
}

// GetPassphraseMessage returns the PassphraseMessage field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetPassphraseMessage() string {
	if o == nil || IsNil(o.PassphraseMessage) {
		var ret string
		return ret
	}
	return *o.PassphraseMessage
}

// GetPassphraseMessageOk returns a tuple with the PassphraseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetPassphraseMessageOk() (*string, bool) {
	if o == nil || IsNil(o.PassphraseMessage) {
		return nil, false
	}
	return o.PassphraseMessage, true
}

// HasPassphraseMessage returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasPassphraseMessage() bool {
	if o != nil && !IsNil(o.PassphraseMessage) {
		return true
	}

	return false
}

// SetPassphraseMessage gets a reference to the given string and assigns it to the PassphraseMessage field.
func (o *WlanPortalTemplateSetting) SetPassphraseMessage(v string) {
	o.PassphraseMessage = &v
}

// GetPassphraseSubmit returns the PassphraseSubmit field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetPassphraseSubmit() string {
	if o == nil || IsNil(o.PassphraseSubmit) {
		var ret string
		return ret
	}
	return *o.PassphraseSubmit
}

// GetPassphraseSubmitOk returns a tuple with the PassphraseSubmit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetPassphraseSubmitOk() (*string, bool) {
	if o == nil || IsNil(o.PassphraseSubmit) {
		return nil, false
	}
	return o.PassphraseSubmit, true
}

// HasPassphraseSubmit returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasPassphraseSubmit() bool {
	if o != nil && !IsNil(o.PassphraseSubmit) {
		return true
	}

	return false
}

// SetPassphraseSubmit gets a reference to the given string and assigns it to the PassphraseSubmit field.
func (o *WlanPortalTemplateSetting) SetPassphraseSubmit(v string) {
	o.PassphraseSubmit = &v
}

// GetPassphraseTitle returns the PassphraseTitle field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetPassphraseTitle() string {
	if o == nil || IsNil(o.PassphraseTitle) {
		var ret string
		return ret
	}
	return *o.PassphraseTitle
}

// GetPassphraseTitleOk returns a tuple with the PassphraseTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetPassphraseTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PassphraseTitle) {
		return nil, false
	}
	return o.PassphraseTitle, true
}

// HasPassphraseTitle returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasPassphraseTitle() bool {
	if o != nil && !IsNil(o.PassphraseTitle) {
		return true
	}

	return false
}

// SetPassphraseTitle gets a reference to the given string and assigns it to the PassphraseTitle field.
func (o *WlanPortalTemplateSetting) SetPassphraseTitle(v string) {
	o.PassphraseTitle = &v
}

// GetPoweredBy returns the PoweredBy field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetPoweredBy() bool {
	if o == nil || IsNil(o.PoweredBy) {
		var ret bool
		return ret
	}
	return *o.PoweredBy
}

// GetPoweredByOk returns a tuple with the PoweredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetPoweredByOk() (*bool, bool) {
	if o == nil || IsNil(o.PoweredBy) {
		return nil, false
	}
	return o.PoweredBy, true
}

// HasPoweredBy returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasPoweredBy() bool {
	if o != nil && !IsNil(o.PoweredBy) {
		return true
	}

	return false
}

// SetPoweredBy gets a reference to the given bool and assigns it to the PoweredBy field.
func (o *WlanPortalTemplateSetting) SetPoweredBy(v bool) {
	o.PoweredBy = &v
}

// GetRequiredFieldLabel returns the RequiredFieldLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetRequiredFieldLabel() string {
	if o == nil || IsNil(o.RequiredFieldLabel) {
		var ret string
		return ret
	}
	return *o.RequiredFieldLabel
}

// GetRequiredFieldLabelOk returns a tuple with the RequiredFieldLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetRequiredFieldLabelOk() (*string, bool) {
	if o == nil || IsNil(o.RequiredFieldLabel) {
		return nil, false
	}
	return o.RequiredFieldLabel, true
}

// HasRequiredFieldLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasRequiredFieldLabel() bool {
	if o != nil && !IsNil(o.RequiredFieldLabel) {
		return true
	}

	return false
}

// SetRequiredFieldLabel gets a reference to the given string and assigns it to the RequiredFieldLabel field.
func (o *WlanPortalTemplateSetting) SetRequiredFieldLabel(v string) {
	o.RequiredFieldLabel = &v
}

// GetSignInLabel returns the SignInLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSignInLabel() string {
	if o == nil || IsNil(o.SignInLabel) {
		var ret string
		return ret
	}
	return *o.SignInLabel
}

// GetSignInLabelOk returns a tuple with the SignInLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSignInLabelOk() (*string, bool) {
	if o == nil || IsNil(o.SignInLabel) {
		return nil, false
	}
	return o.SignInLabel, true
}

// HasSignInLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSignInLabel() bool {
	if o != nil && !IsNil(o.SignInLabel) {
		return true
	}

	return false
}

// SetSignInLabel gets a reference to the given string and assigns it to the SignInLabel field.
func (o *WlanPortalTemplateSetting) SetSignInLabel(v string) {
	o.SignInLabel = &v
}

// GetSmsCarrierDefault returns the SmsCarrierDefault field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsCarrierDefault() string {
	if o == nil || IsNil(o.SmsCarrierDefault) {
		var ret string
		return ret
	}
	return *o.SmsCarrierDefault
}

// GetSmsCarrierDefaultOk returns a tuple with the SmsCarrierDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsCarrierDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.SmsCarrierDefault) {
		return nil, false
	}
	return o.SmsCarrierDefault, true
}

// HasSmsCarrierDefault returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsCarrierDefault() bool {
	if o != nil && !IsNil(o.SmsCarrierDefault) {
		return true
	}

	return false
}

// SetSmsCarrierDefault gets a reference to the given string and assigns it to the SmsCarrierDefault field.
func (o *WlanPortalTemplateSetting) SetSmsCarrierDefault(v string) {
	o.SmsCarrierDefault = &v
}

// GetSmsCarrierError returns the SmsCarrierError field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsCarrierError() string {
	if o == nil || IsNil(o.SmsCarrierError) {
		var ret string
		return ret
	}
	return *o.SmsCarrierError
}

// GetSmsCarrierErrorOk returns a tuple with the SmsCarrierError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsCarrierErrorOk() (*string, bool) {
	if o == nil || IsNil(o.SmsCarrierError) {
		return nil, false
	}
	return o.SmsCarrierError, true
}

// HasSmsCarrierError returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsCarrierError() bool {
	if o != nil && !IsNil(o.SmsCarrierError) {
		return true
	}

	return false
}

// SetSmsCarrierError gets a reference to the given string and assigns it to the SmsCarrierError field.
func (o *WlanPortalTemplateSetting) SetSmsCarrierError(v string) {
	o.SmsCarrierError = &v
}

// GetSmsCarrierFieldLabel returns the SmsCarrierFieldLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsCarrierFieldLabel() string {
	if o == nil || IsNil(o.SmsCarrierFieldLabel) {
		var ret string
		return ret
	}
	return *o.SmsCarrierFieldLabel
}

// GetSmsCarrierFieldLabelOk returns a tuple with the SmsCarrierFieldLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsCarrierFieldLabelOk() (*string, bool) {
	if o == nil || IsNil(o.SmsCarrierFieldLabel) {
		return nil, false
	}
	return o.SmsCarrierFieldLabel, true
}

// HasSmsCarrierFieldLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsCarrierFieldLabel() bool {
	if o != nil && !IsNil(o.SmsCarrierFieldLabel) {
		return true
	}

	return false
}

// SetSmsCarrierFieldLabel gets a reference to the given string and assigns it to the SmsCarrierFieldLabel field.
func (o *WlanPortalTemplateSetting) SetSmsCarrierFieldLabel(v string) {
	o.SmsCarrierFieldLabel = &v
}

// GetSmsCodeCancel returns the SmsCodeCancel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsCodeCancel() string {
	if o == nil || IsNil(o.SmsCodeCancel) {
		var ret string
		return ret
	}
	return *o.SmsCodeCancel
}

// GetSmsCodeCancelOk returns a tuple with the SmsCodeCancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsCodeCancelOk() (*string, bool) {
	if o == nil || IsNil(o.SmsCodeCancel) {
		return nil, false
	}
	return o.SmsCodeCancel, true
}

// HasSmsCodeCancel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsCodeCancel() bool {
	if o != nil && !IsNil(o.SmsCodeCancel) {
		return true
	}

	return false
}

// SetSmsCodeCancel gets a reference to the given string and assigns it to the SmsCodeCancel field.
func (o *WlanPortalTemplateSetting) SetSmsCodeCancel(v string) {
	o.SmsCodeCancel = &v
}

// GetSmsCodeError returns the SmsCodeError field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsCodeError() string {
	if o == nil || IsNil(o.SmsCodeError) {
		var ret string
		return ret
	}
	return *o.SmsCodeError
}

// GetSmsCodeErrorOk returns a tuple with the SmsCodeError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsCodeErrorOk() (*string, bool) {
	if o == nil || IsNil(o.SmsCodeError) {
		return nil, false
	}
	return o.SmsCodeError, true
}

// HasSmsCodeError returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsCodeError() bool {
	if o != nil && !IsNil(o.SmsCodeError) {
		return true
	}

	return false
}

// SetSmsCodeError gets a reference to the given string and assigns it to the SmsCodeError field.
func (o *WlanPortalTemplateSetting) SetSmsCodeError(v string) {
	o.SmsCodeError = &v
}

// GetSmsCodeFieldLabel returns the SmsCodeFieldLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsCodeFieldLabel() string {
	if o == nil || IsNil(o.SmsCodeFieldLabel) {
		var ret string
		return ret
	}
	return *o.SmsCodeFieldLabel
}

// GetSmsCodeFieldLabelOk returns a tuple with the SmsCodeFieldLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsCodeFieldLabelOk() (*string, bool) {
	if o == nil || IsNil(o.SmsCodeFieldLabel) {
		return nil, false
	}
	return o.SmsCodeFieldLabel, true
}

// HasSmsCodeFieldLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsCodeFieldLabel() bool {
	if o != nil && !IsNil(o.SmsCodeFieldLabel) {
		return true
	}

	return false
}

// SetSmsCodeFieldLabel gets a reference to the given string and assigns it to the SmsCodeFieldLabel field.
func (o *WlanPortalTemplateSetting) SetSmsCodeFieldLabel(v string) {
	o.SmsCodeFieldLabel = &v
}

// GetSmsCodeMessage returns the SmsCodeMessage field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsCodeMessage() string {
	if o == nil || IsNil(o.SmsCodeMessage) {
		var ret string
		return ret
	}
	return *o.SmsCodeMessage
}

// GetSmsCodeMessageOk returns a tuple with the SmsCodeMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsCodeMessageOk() (*string, bool) {
	if o == nil || IsNil(o.SmsCodeMessage) {
		return nil, false
	}
	return o.SmsCodeMessage, true
}

// HasSmsCodeMessage returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsCodeMessage() bool {
	if o != nil && !IsNil(o.SmsCodeMessage) {
		return true
	}

	return false
}

// SetSmsCodeMessage gets a reference to the given string and assigns it to the SmsCodeMessage field.
func (o *WlanPortalTemplateSetting) SetSmsCodeMessage(v string) {
	o.SmsCodeMessage = &v
}

// GetSmsCodeSubmit returns the SmsCodeSubmit field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsCodeSubmit() string {
	if o == nil || IsNil(o.SmsCodeSubmit) {
		var ret string
		return ret
	}
	return *o.SmsCodeSubmit
}

// GetSmsCodeSubmitOk returns a tuple with the SmsCodeSubmit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsCodeSubmitOk() (*string, bool) {
	if o == nil || IsNil(o.SmsCodeSubmit) {
		return nil, false
	}
	return o.SmsCodeSubmit, true
}

// HasSmsCodeSubmit returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsCodeSubmit() bool {
	if o != nil && !IsNil(o.SmsCodeSubmit) {
		return true
	}

	return false
}

// SetSmsCodeSubmit gets a reference to the given string and assigns it to the SmsCodeSubmit field.
func (o *WlanPortalTemplateSetting) SetSmsCodeSubmit(v string) {
	o.SmsCodeSubmit = &v
}

// GetSmsCodeTitle returns the SmsCodeTitle field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsCodeTitle() string {
	if o == nil || IsNil(o.SmsCodeTitle) {
		var ret string
		return ret
	}
	return *o.SmsCodeTitle
}

// GetSmsCodeTitleOk returns a tuple with the SmsCodeTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsCodeTitleOk() (*string, bool) {
	if o == nil || IsNil(o.SmsCodeTitle) {
		return nil, false
	}
	return o.SmsCodeTitle, true
}

// HasSmsCodeTitle returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsCodeTitle() bool {
	if o != nil && !IsNil(o.SmsCodeTitle) {
		return true
	}

	return false
}

// SetSmsCodeTitle gets a reference to the given string and assigns it to the SmsCodeTitle field.
func (o *WlanPortalTemplateSetting) SetSmsCodeTitle(v string) {
	o.SmsCodeTitle = &v
}

// GetSmsCountryFieldLabel returns the SmsCountryFieldLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsCountryFieldLabel() string {
	if o == nil || IsNil(o.SmsCountryFieldLabel) {
		var ret string
		return ret
	}
	return *o.SmsCountryFieldLabel
}

// GetSmsCountryFieldLabelOk returns a tuple with the SmsCountryFieldLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsCountryFieldLabelOk() (*string, bool) {
	if o == nil || IsNil(o.SmsCountryFieldLabel) {
		return nil, false
	}
	return o.SmsCountryFieldLabel, true
}

// HasSmsCountryFieldLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsCountryFieldLabel() bool {
	if o != nil && !IsNil(o.SmsCountryFieldLabel) {
		return true
	}

	return false
}

// SetSmsCountryFieldLabel gets a reference to the given string and assigns it to the SmsCountryFieldLabel field.
func (o *WlanPortalTemplateSetting) SetSmsCountryFieldLabel(v string) {
	o.SmsCountryFieldLabel = &v
}

// GetSmsCountryFormat returns the SmsCountryFormat field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsCountryFormat() string {
	if o == nil || IsNil(o.SmsCountryFormat) {
		var ret string
		return ret
	}
	return *o.SmsCountryFormat
}

// GetSmsCountryFormatOk returns a tuple with the SmsCountryFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsCountryFormatOk() (*string, bool) {
	if o == nil || IsNil(o.SmsCountryFormat) {
		return nil, false
	}
	return o.SmsCountryFormat, true
}

// HasSmsCountryFormat returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsCountryFormat() bool {
	if o != nil && !IsNil(o.SmsCountryFormat) {
		return true
	}

	return false
}

// SetSmsCountryFormat gets a reference to the given string and assigns it to the SmsCountryFormat field.
func (o *WlanPortalTemplateSetting) SetSmsCountryFormat(v string) {
	o.SmsCountryFormat = &v
}

// GetSmsHaveAccessCode returns the SmsHaveAccessCode field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsHaveAccessCode() string {
	if o == nil || IsNil(o.SmsHaveAccessCode) {
		var ret string
		return ret
	}
	return *o.SmsHaveAccessCode
}

// GetSmsHaveAccessCodeOk returns a tuple with the SmsHaveAccessCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsHaveAccessCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SmsHaveAccessCode) {
		return nil, false
	}
	return o.SmsHaveAccessCode, true
}

// HasSmsHaveAccessCode returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsHaveAccessCode() bool {
	if o != nil && !IsNil(o.SmsHaveAccessCode) {
		return true
	}

	return false
}

// SetSmsHaveAccessCode gets a reference to the given string and assigns it to the SmsHaveAccessCode field.
func (o *WlanPortalTemplateSetting) SetSmsHaveAccessCode(v string) {
	o.SmsHaveAccessCode = &v
}

// GetSmsMessageFormat returns the SmsMessageFormat field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsMessageFormat() string {
	if o == nil || IsNil(o.SmsMessageFormat) {
		var ret string
		return ret
	}
	return *o.SmsMessageFormat
}

// GetSmsMessageFormatOk returns a tuple with the SmsMessageFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsMessageFormatOk() (*string, bool) {
	if o == nil || IsNil(o.SmsMessageFormat) {
		return nil, false
	}
	return o.SmsMessageFormat, true
}

// HasSmsMessageFormat returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsMessageFormat() bool {
	if o != nil && !IsNil(o.SmsMessageFormat) {
		return true
	}

	return false
}

// SetSmsMessageFormat gets a reference to the given string and assigns it to the SmsMessageFormat field.
func (o *WlanPortalTemplateSetting) SetSmsMessageFormat(v string) {
	o.SmsMessageFormat = &v
}

// GetSmsNumberCancel returns the SmsNumberCancel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsNumberCancel() string {
	if o == nil || IsNil(o.SmsNumberCancel) {
		var ret string
		return ret
	}
	return *o.SmsNumberCancel
}

// GetSmsNumberCancelOk returns a tuple with the SmsNumberCancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsNumberCancelOk() (*string, bool) {
	if o == nil || IsNil(o.SmsNumberCancel) {
		return nil, false
	}
	return o.SmsNumberCancel, true
}

// HasSmsNumberCancel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsNumberCancel() bool {
	if o != nil && !IsNil(o.SmsNumberCancel) {
		return true
	}

	return false
}

// SetSmsNumberCancel gets a reference to the given string and assigns it to the SmsNumberCancel field.
func (o *WlanPortalTemplateSetting) SetSmsNumberCancel(v string) {
	o.SmsNumberCancel = &v
}

// GetSmsNumberError returns the SmsNumberError field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsNumberError() string {
	if o == nil || IsNil(o.SmsNumberError) {
		var ret string
		return ret
	}
	return *o.SmsNumberError
}

// GetSmsNumberErrorOk returns a tuple with the SmsNumberError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsNumberErrorOk() (*string, bool) {
	if o == nil || IsNil(o.SmsNumberError) {
		return nil, false
	}
	return o.SmsNumberError, true
}

// HasSmsNumberError returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsNumberError() bool {
	if o != nil && !IsNil(o.SmsNumberError) {
		return true
	}

	return false
}

// SetSmsNumberError gets a reference to the given string and assigns it to the SmsNumberError field.
func (o *WlanPortalTemplateSetting) SetSmsNumberError(v string) {
	o.SmsNumberError = &v
}

// GetSmsNumberFieldLabel returns the SmsNumberFieldLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsNumberFieldLabel() string {
	if o == nil || IsNil(o.SmsNumberFieldLabel) {
		var ret string
		return ret
	}
	return *o.SmsNumberFieldLabel
}

// GetSmsNumberFieldLabelOk returns a tuple with the SmsNumberFieldLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsNumberFieldLabelOk() (*string, bool) {
	if o == nil || IsNil(o.SmsNumberFieldLabel) {
		return nil, false
	}
	return o.SmsNumberFieldLabel, true
}

// HasSmsNumberFieldLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsNumberFieldLabel() bool {
	if o != nil && !IsNil(o.SmsNumberFieldLabel) {
		return true
	}

	return false
}

// SetSmsNumberFieldLabel gets a reference to the given string and assigns it to the SmsNumberFieldLabel field.
func (o *WlanPortalTemplateSetting) SetSmsNumberFieldLabel(v string) {
	o.SmsNumberFieldLabel = &v
}

// GetSmsNumberFormat returns the SmsNumberFormat field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsNumberFormat() string {
	if o == nil || IsNil(o.SmsNumberFormat) {
		var ret string
		return ret
	}
	return *o.SmsNumberFormat
}

// GetSmsNumberFormatOk returns a tuple with the SmsNumberFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsNumberFormatOk() (*string, bool) {
	if o == nil || IsNil(o.SmsNumberFormat) {
		return nil, false
	}
	return o.SmsNumberFormat, true
}

// HasSmsNumberFormat returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsNumberFormat() bool {
	if o != nil && !IsNil(o.SmsNumberFormat) {
		return true
	}

	return false
}

// SetSmsNumberFormat gets a reference to the given string and assigns it to the SmsNumberFormat field.
func (o *WlanPortalTemplateSetting) SetSmsNumberFormat(v string) {
	o.SmsNumberFormat = &v
}

// GetSmsNumberMessage returns the SmsNumberMessage field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsNumberMessage() string {
	if o == nil || IsNil(o.SmsNumberMessage) {
		var ret string
		return ret
	}
	return *o.SmsNumberMessage
}

// GetSmsNumberMessageOk returns a tuple with the SmsNumberMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsNumberMessageOk() (*string, bool) {
	if o == nil || IsNil(o.SmsNumberMessage) {
		return nil, false
	}
	return o.SmsNumberMessage, true
}

// HasSmsNumberMessage returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsNumberMessage() bool {
	if o != nil && !IsNil(o.SmsNumberMessage) {
		return true
	}

	return false
}

// SetSmsNumberMessage gets a reference to the given string and assigns it to the SmsNumberMessage field.
func (o *WlanPortalTemplateSetting) SetSmsNumberMessage(v string) {
	o.SmsNumberMessage = &v
}

// GetSmsNumberSubmit returns the SmsNumberSubmit field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsNumberSubmit() string {
	if o == nil || IsNil(o.SmsNumberSubmit) {
		var ret string
		return ret
	}
	return *o.SmsNumberSubmit
}

// GetSmsNumberSubmitOk returns a tuple with the SmsNumberSubmit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsNumberSubmitOk() (*string, bool) {
	if o == nil || IsNil(o.SmsNumberSubmit) {
		return nil, false
	}
	return o.SmsNumberSubmit, true
}

// HasSmsNumberSubmit returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsNumberSubmit() bool {
	if o != nil && !IsNil(o.SmsNumberSubmit) {
		return true
	}

	return false
}

// SetSmsNumberSubmit gets a reference to the given string and assigns it to the SmsNumberSubmit field.
func (o *WlanPortalTemplateSetting) SetSmsNumberSubmit(v string) {
	o.SmsNumberSubmit = &v
}

// GetSmsNumberTitle returns the SmsNumberTitle field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsNumberTitle() string {
	if o == nil || IsNil(o.SmsNumberTitle) {
		var ret string
		return ret
	}
	return *o.SmsNumberTitle
}

// GetSmsNumberTitleOk returns a tuple with the SmsNumberTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsNumberTitleOk() (*string, bool) {
	if o == nil || IsNil(o.SmsNumberTitle) {
		return nil, false
	}
	return o.SmsNumberTitle, true
}

// HasSmsNumberTitle returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsNumberTitle() bool {
	if o != nil && !IsNil(o.SmsNumberTitle) {
		return true
	}

	return false
}

// SetSmsNumberTitle gets a reference to the given string and assigns it to the SmsNumberTitle field.
func (o *WlanPortalTemplateSetting) SetSmsNumberTitle(v string) {
	o.SmsNumberTitle = &v
}

// GetSmsUsernameFormat returns the SmsUsernameFormat field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsUsernameFormat() string {
	if o == nil || IsNil(o.SmsUsernameFormat) {
		var ret string
		return ret
	}
	return *o.SmsUsernameFormat
}

// GetSmsUsernameFormatOk returns a tuple with the SmsUsernameFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsUsernameFormatOk() (*string, bool) {
	if o == nil || IsNil(o.SmsUsernameFormat) {
		return nil, false
	}
	return o.SmsUsernameFormat, true
}

// HasSmsUsernameFormat returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsUsernameFormat() bool {
	if o != nil && !IsNil(o.SmsUsernameFormat) {
		return true
	}

	return false
}

// SetSmsUsernameFormat gets a reference to the given string and assigns it to the SmsUsernameFormat field.
func (o *WlanPortalTemplateSetting) SetSmsUsernameFormat(v string) {
	o.SmsUsernameFormat = &v
}

// GetSmsValidityDuration returns the SmsValidityDuration field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSmsValidityDuration() int32 {
	if o == nil || IsNil(o.SmsValidityDuration) {
		var ret int32
		return ret
	}
	return *o.SmsValidityDuration
}

// GetSmsValidityDurationOk returns a tuple with the SmsValidityDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSmsValidityDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.SmsValidityDuration) {
		return nil, false
	}
	return o.SmsValidityDuration, true
}

// HasSmsValidityDuration returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSmsValidityDuration() bool {
	if o != nil && !IsNil(o.SmsValidityDuration) {
		return true
	}

	return false
}

// SetSmsValidityDuration gets a reference to the given int32 and assigns it to the SmsValidityDuration field.
func (o *WlanPortalTemplateSetting) SetSmsValidityDuration(v int32) {
	o.SmsValidityDuration = &v
}

// GetSponsorBackLink returns the SponsorBackLink field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorBackLink() string {
	if o == nil || IsNil(o.SponsorBackLink) {
		var ret string
		return ret
	}
	return *o.SponsorBackLink
}

// GetSponsorBackLinkOk returns a tuple with the SponsorBackLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorBackLinkOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorBackLink) {
		return nil, false
	}
	return o.SponsorBackLink, true
}

// HasSponsorBackLink returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorBackLink() bool {
	if o != nil && !IsNil(o.SponsorBackLink) {
		return true
	}

	return false
}

// SetSponsorBackLink gets a reference to the given string and assigns it to the SponsorBackLink field.
func (o *WlanPortalTemplateSetting) SetSponsorBackLink(v string) {
	o.SponsorBackLink = &v
}

// GetSponsorCancel returns the SponsorCancel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorCancel() string {
	if o == nil || IsNil(o.SponsorCancel) {
		var ret string
		return ret
	}
	return *o.SponsorCancel
}

// GetSponsorCancelOk returns a tuple with the SponsorCancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorCancelOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorCancel) {
		return nil, false
	}
	return o.SponsorCancel, true
}

// HasSponsorCancel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorCancel() bool {
	if o != nil && !IsNil(o.SponsorCancel) {
		return true
	}

	return false
}

// SetSponsorCancel gets a reference to the given string and assigns it to the SponsorCancel field.
func (o *WlanPortalTemplateSetting) SetSponsorCancel(v string) {
	o.SponsorCancel = &v
}

// GetSponsorEmail returns the SponsorEmail field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorEmail() string {
	if o == nil || IsNil(o.SponsorEmail) {
		var ret string
		return ret
	}
	return *o.SponsorEmail
}

// GetSponsorEmailOk returns a tuple with the SponsorEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorEmail) {
		return nil, false
	}
	return o.SponsorEmail, true
}

// HasSponsorEmail returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorEmail() bool {
	if o != nil && !IsNil(o.SponsorEmail) {
		return true
	}

	return false
}

// SetSponsorEmail gets a reference to the given string and assigns it to the SponsorEmail field.
func (o *WlanPortalTemplateSetting) SetSponsorEmail(v string) {
	o.SponsorEmail = &v
}

// GetSponsorEmailError returns the SponsorEmailError field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorEmailError() string {
	if o == nil || IsNil(o.SponsorEmailError) {
		var ret string
		return ret
	}
	return *o.SponsorEmailError
}

// GetSponsorEmailErrorOk returns a tuple with the SponsorEmailError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorEmailErrorOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorEmailError) {
		return nil, false
	}
	return o.SponsorEmailError, true
}

// HasSponsorEmailError returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorEmailError() bool {
	if o != nil && !IsNil(o.SponsorEmailError) {
		return true
	}

	return false
}

// SetSponsorEmailError gets a reference to the given string and assigns it to the SponsorEmailError field.
func (o *WlanPortalTemplateSetting) SetSponsorEmailError(v string) {
	o.SponsorEmailError = &v
}

// GetSponsorEmailTemplate returns the SponsorEmailTemplate field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorEmailTemplate() string {
	if o == nil || IsNil(o.SponsorEmailTemplate) {
		var ret string
		return ret
	}
	return *o.SponsorEmailTemplate
}

// GetSponsorEmailTemplateOk returns a tuple with the SponsorEmailTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorEmailTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorEmailTemplate) {
		return nil, false
	}
	return o.SponsorEmailTemplate, true
}

// HasSponsorEmailTemplate returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorEmailTemplate() bool {
	if o != nil && !IsNil(o.SponsorEmailTemplate) {
		return true
	}

	return false
}

// SetSponsorEmailTemplate gets a reference to the given string and assigns it to the SponsorEmailTemplate field.
func (o *WlanPortalTemplateSetting) SetSponsorEmailTemplate(v string) {
	o.SponsorEmailTemplate = &v
}

// GetSponsorInfoApproved returns the SponsorInfoApproved field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorInfoApproved() string {
	if o == nil || IsNil(o.SponsorInfoApproved) {
		var ret string
		return ret
	}
	return *o.SponsorInfoApproved
}

// GetSponsorInfoApprovedOk returns a tuple with the SponsorInfoApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorInfoApprovedOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorInfoApproved) {
		return nil, false
	}
	return o.SponsorInfoApproved, true
}

// HasSponsorInfoApproved returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorInfoApproved() bool {
	if o != nil && !IsNil(o.SponsorInfoApproved) {
		return true
	}

	return false
}

// SetSponsorInfoApproved gets a reference to the given string and assigns it to the SponsorInfoApproved field.
func (o *WlanPortalTemplateSetting) SetSponsorInfoApproved(v string) {
	o.SponsorInfoApproved = &v
}

// GetSponsorInfoDenied returns the SponsorInfoDenied field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorInfoDenied() string {
	if o == nil || IsNil(o.SponsorInfoDenied) {
		var ret string
		return ret
	}
	return *o.SponsorInfoDenied
}

// GetSponsorInfoDeniedOk returns a tuple with the SponsorInfoDenied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorInfoDeniedOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorInfoDenied) {
		return nil, false
	}
	return o.SponsorInfoDenied, true
}

// HasSponsorInfoDenied returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorInfoDenied() bool {
	if o != nil && !IsNil(o.SponsorInfoDenied) {
		return true
	}

	return false
}

// SetSponsorInfoDenied gets a reference to the given string and assigns it to the SponsorInfoDenied field.
func (o *WlanPortalTemplateSetting) SetSponsorInfoDenied(v string) {
	o.SponsorInfoDenied = &v
}

// GetSponsorInfoPending returns the SponsorInfoPending field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorInfoPending() string {
	if o == nil || IsNil(o.SponsorInfoPending) {
		var ret string
		return ret
	}
	return *o.SponsorInfoPending
}

// GetSponsorInfoPendingOk returns a tuple with the SponsorInfoPending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorInfoPendingOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorInfoPending) {
		return nil, false
	}
	return o.SponsorInfoPending, true
}

// HasSponsorInfoPending returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorInfoPending() bool {
	if o != nil && !IsNil(o.SponsorInfoPending) {
		return true
	}

	return false
}

// SetSponsorInfoPending gets a reference to the given string and assigns it to the SponsorInfoPending field.
func (o *WlanPortalTemplateSetting) SetSponsorInfoPending(v string) {
	o.SponsorInfoPending = &v
}

// GetSponsorName returns the SponsorName field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorName() string {
	if o == nil || IsNil(o.SponsorName) {
		var ret string
		return ret
	}
	return *o.SponsorName
}

// GetSponsorNameOk returns a tuple with the SponsorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorNameOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorName) {
		return nil, false
	}
	return o.SponsorName, true
}

// HasSponsorName returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorName() bool {
	if o != nil && !IsNil(o.SponsorName) {
		return true
	}

	return false
}

// SetSponsorName gets a reference to the given string and assigns it to the SponsorName field.
func (o *WlanPortalTemplateSetting) SetSponsorName(v string) {
	o.SponsorName = &v
}

// GetSponsorNameError returns the SponsorNameError field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorNameError() string {
	if o == nil || IsNil(o.SponsorNameError) {
		var ret string
		return ret
	}
	return *o.SponsorNameError
}

// GetSponsorNameErrorOk returns a tuple with the SponsorNameError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorNameErrorOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorNameError) {
		return nil, false
	}
	return o.SponsorNameError, true
}

// HasSponsorNameError returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorNameError() bool {
	if o != nil && !IsNil(o.SponsorNameError) {
		return true
	}

	return false
}

// SetSponsorNameError gets a reference to the given string and assigns it to the SponsorNameError field.
func (o *WlanPortalTemplateSetting) SetSponsorNameError(v string) {
	o.SponsorNameError = &v
}

// GetSponsorNotePending returns the SponsorNotePending field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorNotePending() string {
	if o == nil || IsNil(o.SponsorNotePending) {
		var ret string
		return ret
	}
	return *o.SponsorNotePending
}

// GetSponsorNotePendingOk returns a tuple with the SponsorNotePending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorNotePendingOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorNotePending) {
		return nil, false
	}
	return o.SponsorNotePending, true
}

// HasSponsorNotePending returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorNotePending() bool {
	if o != nil && !IsNil(o.SponsorNotePending) {
		return true
	}

	return false
}

// SetSponsorNotePending gets a reference to the given string and assigns it to the SponsorNotePending field.
func (o *WlanPortalTemplateSetting) SetSponsorNotePending(v string) {
	o.SponsorNotePending = &v
}

// GetSponsorRequestAccess returns the SponsorRequestAccess field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorRequestAccess() string {
	if o == nil || IsNil(o.SponsorRequestAccess) {
		var ret string
		return ret
	}
	return *o.SponsorRequestAccess
}

// GetSponsorRequestAccessOk returns a tuple with the SponsorRequestAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorRequestAccessOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorRequestAccess) {
		return nil, false
	}
	return o.SponsorRequestAccess, true
}

// HasSponsorRequestAccess returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorRequestAccess() bool {
	if o != nil && !IsNil(o.SponsorRequestAccess) {
		return true
	}

	return false
}

// SetSponsorRequestAccess gets a reference to the given string and assigns it to the SponsorRequestAccess field.
func (o *WlanPortalTemplateSetting) SetSponsorRequestAccess(v string) {
	o.SponsorRequestAccess = &v
}

// GetSponsorSelectEmail returns the SponsorSelectEmail field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorSelectEmail() string {
	if o == nil || IsNil(o.SponsorSelectEmail) {
		var ret string
		return ret
	}
	return *o.SponsorSelectEmail
}

// GetSponsorSelectEmailOk returns a tuple with the SponsorSelectEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorSelectEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorSelectEmail) {
		return nil, false
	}
	return o.SponsorSelectEmail, true
}

// HasSponsorSelectEmail returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorSelectEmail() bool {
	if o != nil && !IsNil(o.SponsorSelectEmail) {
		return true
	}

	return false
}

// SetSponsorSelectEmail gets a reference to the given string and assigns it to the SponsorSelectEmail field.
func (o *WlanPortalTemplateSetting) SetSponsorSelectEmail(v string) {
	o.SponsorSelectEmail = &v
}

// GetSponsorStatusApproved returns the SponsorStatusApproved field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorStatusApproved() string {
	if o == nil || IsNil(o.SponsorStatusApproved) {
		var ret string
		return ret
	}
	return *o.SponsorStatusApproved
}

// GetSponsorStatusApprovedOk returns a tuple with the SponsorStatusApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorStatusApprovedOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorStatusApproved) {
		return nil, false
	}
	return o.SponsorStatusApproved, true
}

// HasSponsorStatusApproved returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorStatusApproved() bool {
	if o != nil && !IsNil(o.SponsorStatusApproved) {
		return true
	}

	return false
}

// SetSponsorStatusApproved gets a reference to the given string and assigns it to the SponsorStatusApproved field.
func (o *WlanPortalTemplateSetting) SetSponsorStatusApproved(v string) {
	o.SponsorStatusApproved = &v
}

// GetSponsorStatusDenied returns the SponsorStatusDenied field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorStatusDenied() string {
	if o == nil || IsNil(o.SponsorStatusDenied) {
		var ret string
		return ret
	}
	return *o.SponsorStatusDenied
}

// GetSponsorStatusDeniedOk returns a tuple with the SponsorStatusDenied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorStatusDeniedOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorStatusDenied) {
		return nil, false
	}
	return o.SponsorStatusDenied, true
}

// HasSponsorStatusDenied returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorStatusDenied() bool {
	if o != nil && !IsNil(o.SponsorStatusDenied) {
		return true
	}

	return false
}

// SetSponsorStatusDenied gets a reference to the given string and assigns it to the SponsorStatusDenied field.
func (o *WlanPortalTemplateSetting) SetSponsorStatusDenied(v string) {
	o.SponsorStatusDenied = &v
}

// GetSponsorStatusPending returns the SponsorStatusPending field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorStatusPending() string {
	if o == nil || IsNil(o.SponsorStatusPending) {
		var ret string
		return ret
	}
	return *o.SponsorStatusPending
}

// GetSponsorStatusPendingOk returns a tuple with the SponsorStatusPending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorStatusPendingOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorStatusPending) {
		return nil, false
	}
	return o.SponsorStatusPending, true
}

// HasSponsorStatusPending returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorStatusPending() bool {
	if o != nil && !IsNil(o.SponsorStatusPending) {
		return true
	}

	return false
}

// SetSponsorStatusPending gets a reference to the given string and assigns it to the SponsorStatusPending field.
func (o *WlanPortalTemplateSetting) SetSponsorStatusPending(v string) {
	o.SponsorStatusPending = &v
}

// GetSponsorSubmit returns the SponsorSubmit field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorSubmit() string {
	if o == nil || IsNil(o.SponsorSubmit) {
		var ret string
		return ret
	}
	return *o.SponsorSubmit
}

// GetSponsorSubmitOk returns a tuple with the SponsorSubmit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorSubmitOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorSubmit) {
		return nil, false
	}
	return o.SponsorSubmit, true
}

// HasSponsorSubmit returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorSubmit() bool {
	if o != nil && !IsNil(o.SponsorSubmit) {
		return true
	}

	return false
}

// SetSponsorSubmit gets a reference to the given string and assigns it to the SponsorSubmit field.
func (o *WlanPortalTemplateSetting) SetSponsorSubmit(v string) {
	o.SponsorSubmit = &v
}

// GetSponsorsError returns the SponsorsError field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorsError() string {
	if o == nil || IsNil(o.SponsorsError) {
		var ret string
		return ret
	}
	return *o.SponsorsError
}

// GetSponsorsErrorOk returns a tuple with the SponsorsError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorsErrorOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorsError) {
		return nil, false
	}
	return o.SponsorsError, true
}

// HasSponsorsError returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorsError() bool {
	if o != nil && !IsNil(o.SponsorsError) {
		return true
	}

	return false
}

// SetSponsorsError gets a reference to the given string and assigns it to the SponsorsError field.
func (o *WlanPortalTemplateSetting) SetSponsorsError(v string) {
	o.SponsorsError = &v
}

// GetSponsorsInfoApproved returns the SponsorsInfoApproved field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorsInfoApproved() string {
	if o == nil || IsNil(o.SponsorsInfoApproved) {
		var ret string
		return ret
	}
	return *o.SponsorsInfoApproved
}

// GetSponsorsInfoApprovedOk returns a tuple with the SponsorsInfoApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorsInfoApprovedOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorsInfoApproved) {
		return nil, false
	}
	return o.SponsorsInfoApproved, true
}

// HasSponsorsInfoApproved returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorsInfoApproved() bool {
	if o != nil && !IsNil(o.SponsorsInfoApproved) {
		return true
	}

	return false
}

// SetSponsorsInfoApproved gets a reference to the given string and assigns it to the SponsorsInfoApproved field.
func (o *WlanPortalTemplateSetting) SetSponsorsInfoApproved(v string) {
	o.SponsorsInfoApproved = &v
}

// GetSponsorsInfoDenied returns the SponsorsInfoDenied field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorsInfoDenied() string {
	if o == nil || IsNil(o.SponsorsInfoDenied) {
		var ret string
		return ret
	}
	return *o.SponsorsInfoDenied
}

// GetSponsorsInfoDeniedOk returns a tuple with the SponsorsInfoDenied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorsInfoDeniedOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorsInfoDenied) {
		return nil, false
	}
	return o.SponsorsInfoDenied, true
}

// HasSponsorsInfoDenied returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorsInfoDenied() bool {
	if o != nil && !IsNil(o.SponsorsInfoDenied) {
		return true
	}

	return false
}

// SetSponsorsInfoDenied gets a reference to the given string and assigns it to the SponsorsInfoDenied field.
func (o *WlanPortalTemplateSetting) SetSponsorsInfoDenied(v string) {
	o.SponsorsInfoDenied = &v
}

// GetSponsorsInfoPending returns the SponsorsInfoPending field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetSponsorsInfoPending() string {
	if o == nil || IsNil(o.SponsorsInfoPending) {
		var ret string
		return ret
	}
	return *o.SponsorsInfoPending
}

// GetSponsorsInfoPendingOk returns a tuple with the SponsorsInfoPending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetSponsorsInfoPendingOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorsInfoPending) {
		return nil, false
	}
	return o.SponsorsInfoPending, true
}

// HasSponsorsInfoPending returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasSponsorsInfoPending() bool {
	if o != nil && !IsNil(o.SponsorsInfoPending) {
		return true
	}

	return false
}

// SetSponsorsInfoPending gets a reference to the given string and assigns it to the SponsorsInfoPending field.
func (o *WlanPortalTemplateSetting) SetSponsorsInfoPending(v string) {
	o.SponsorsInfoPending = &v
}

// GetTos returns the Tos field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetTos() bool {
	if o == nil || IsNil(o.Tos) {
		var ret bool
		return ret
	}
	return *o.Tos
}

// GetTosOk returns a tuple with the Tos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetTosOk() (*bool, bool) {
	if o == nil || IsNil(o.Tos) {
		return nil, false
	}
	return o.Tos, true
}

// HasTos returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasTos() bool {
	if o != nil && !IsNil(o.Tos) {
		return true
	}

	return false
}

// SetTos gets a reference to the given bool and assigns it to the Tos field.
func (o *WlanPortalTemplateSetting) SetTos(v bool) {
	o.Tos = &v
}

// GetTosAcceptLabel returns the TosAcceptLabel field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetTosAcceptLabel() string {
	if o == nil || IsNil(o.TosAcceptLabel) {
		var ret string
		return ret
	}
	return *o.TosAcceptLabel
}

// GetTosAcceptLabelOk returns a tuple with the TosAcceptLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetTosAcceptLabelOk() (*string, bool) {
	if o == nil || IsNil(o.TosAcceptLabel) {
		return nil, false
	}
	return o.TosAcceptLabel, true
}

// HasTosAcceptLabel returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasTosAcceptLabel() bool {
	if o != nil && !IsNil(o.TosAcceptLabel) {
		return true
	}

	return false
}

// SetTosAcceptLabel gets a reference to the given string and assigns it to the TosAcceptLabel field.
func (o *WlanPortalTemplateSetting) SetTosAcceptLabel(v string) {
	o.TosAcceptLabel = &v
}

// GetTosError returns the TosError field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetTosError() string {
	if o == nil || IsNil(o.TosError) {
		var ret string
		return ret
	}
	return *o.TosError
}

// GetTosErrorOk returns a tuple with the TosError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetTosErrorOk() (*string, bool) {
	if o == nil || IsNil(o.TosError) {
		return nil, false
	}
	return o.TosError, true
}

// HasTosError returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasTosError() bool {
	if o != nil && !IsNil(o.TosError) {
		return true
	}

	return false
}

// SetTosError gets a reference to the given string and assigns it to the TosError field.
func (o *WlanPortalTemplateSetting) SetTosError(v string) {
	o.TosError = &v
}

// GetTosLink returns the TosLink field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetTosLink() string {
	if o == nil || IsNil(o.TosLink) {
		var ret string
		return ret
	}
	return *o.TosLink
}

// GetTosLinkOk returns a tuple with the TosLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetTosLinkOk() (*string, bool) {
	if o == nil || IsNil(o.TosLink) {
		return nil, false
	}
	return o.TosLink, true
}

// HasTosLink returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasTosLink() bool {
	if o != nil && !IsNil(o.TosLink) {
		return true
	}

	return false
}

// SetTosLink gets a reference to the given string and assigns it to the TosLink field.
func (o *WlanPortalTemplateSetting) SetTosLink(v string) {
	o.TosLink = &v
}

// GetTosText returns the TosText field value if set, zero value otherwise.
func (o *WlanPortalTemplateSetting) GetTosText() string {
	if o == nil || IsNil(o.TosText) {
		var ret string
		return ret
	}
	return *o.TosText
}

// GetTosTextOk returns a tuple with the TosText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WlanPortalTemplateSetting) GetTosTextOk() (*string, bool) {
	if o == nil || IsNil(o.TosText) {
		return nil, false
	}
	return o.TosText, true
}

// HasTosText returns a boolean if a field has been set.
func (o *WlanPortalTemplateSetting) HasTosText() bool {
	if o != nil && !IsNil(o.TosText) {
		return true
	}

	return false
}

// SetTosText gets a reference to the given string and assigns it to the TosText field.
func (o *WlanPortalTemplateSetting) SetTosText(v string) {
	o.TosText = &v
}

func (o WlanPortalTemplateSetting) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WlanPortalTemplateSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessCodeAlternateEmail) {
		toSerialize["accessCodeAlternateEmail"] = o.AccessCodeAlternateEmail
	}
	if !IsNil(o.Alignment) {
		toSerialize["alignment"] = o.Alignment
	}
	if !IsNil(o.AuthButtonAmazon) {
		toSerialize["authButtonAmazon"] = o.AuthButtonAmazon
	}
	if !IsNil(o.AuthButtonAzure) {
		toSerialize["authButtonAzure"] = o.AuthButtonAzure
	}
	if !IsNil(o.AuthButtonEmail) {
		toSerialize["authButtonEmail"] = o.AuthButtonEmail
	}
	if !IsNil(o.AuthButtonFacebook) {
		toSerialize["authButtonFacebook"] = o.AuthButtonFacebook
	}
	if !IsNil(o.AuthButtonGoogle) {
		toSerialize["authButtonGoogle"] = o.AuthButtonGoogle
	}
	if !IsNil(o.AuthButtonMicrosoft) {
		toSerialize["authButtonMicrosoft"] = o.AuthButtonMicrosoft
	}
	if !IsNil(o.AuthButtonPassphrase) {
		toSerialize["authButtonPassphrase"] = o.AuthButtonPassphrase
	}
	if !IsNil(o.AuthButtonSms) {
		toSerialize["authButtonSms"] = o.AuthButtonSms
	}
	if !IsNil(o.AuthButtonSponsor) {
		toSerialize["authButtonSponsor"] = o.AuthButtonSponsor
	}
	if !IsNil(o.AuthLabel) {
		toSerialize["authLabel"] = o.AuthLabel
	}
	if !IsNil(o.BackLink) {
		toSerialize["backLink"] = o.BackLink
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.ColorDark) {
		toSerialize["colorDark"] = o.ColorDark
	}
	if !IsNil(o.ColorLight) {
		toSerialize["colorLight"] = o.ColorLight
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.CompanyError) {
		toSerialize["companyError"] = o.CompanyError
	}
	if !IsNil(o.CompanyLabel) {
		toSerialize["companyLabel"] = o.CompanyLabel
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.EmailAccessDomainError) {
		toSerialize["emailAccessDomainError"] = o.EmailAccessDomainError
	}
	if !IsNil(o.EmailCancel) {
		toSerialize["emailCancel"] = o.EmailCancel
	}
	if !IsNil(o.EmailCodeCancel) {
		toSerialize["emailCodeCancel"] = o.EmailCodeCancel
	}
	if !IsNil(o.EmailCodeError) {
		toSerialize["emailCodeError"] = o.EmailCodeError
	}
	if !IsNil(o.EmailCodeFieldLabel) {
		toSerialize["emailCodeFieldLabel"] = o.EmailCodeFieldLabel
	}
	if !IsNil(o.EmailCodeMessage) {
		toSerialize["emailCodeMessage"] = o.EmailCodeMessage
	}
	if !IsNil(o.EmailCodeSubmit) {
		toSerialize["emailCodeSubmit"] = o.EmailCodeSubmit
	}
	if !IsNil(o.EmailCodeTitle) {
		toSerialize["emailCodeTitle"] = o.EmailCodeTitle
	}
	if !IsNil(o.EmailError) {
		toSerialize["emailError"] = o.EmailError
	}
	if !IsNil(o.EmailFieldLabel) {
		toSerialize["emailFieldLabel"] = o.EmailFieldLabel
	}
	if !IsNil(o.EmailLabel) {
		toSerialize["emailLabel"] = o.EmailLabel
	}
	if !IsNil(o.EmailMessage) {
		toSerialize["emailMessage"] = o.EmailMessage
	}
	if !IsNil(o.EmailSubmit) {
		toSerialize["emailSubmit"] = o.EmailSubmit
	}
	if !IsNil(o.EmailTitle) {
		toSerialize["emailTitle"] = o.EmailTitle
	}
	if !IsNil(o.Field1) {
		toSerialize["field1"] = o.Field1
	}
	if !IsNil(o.Field1Error) {
		toSerialize["field1Error"] = o.Field1Error
	}
	if !IsNil(o.Field1Label) {
		toSerialize["field1Label"] = o.Field1Label
	}
	if !IsNil(o.Field1Required) {
		toSerialize["field1Required"] = o.Field1Required
	}
	if !IsNil(o.Field2) {
		toSerialize["field2"] = o.Field2
	}
	if !IsNil(o.Field2Error) {
		toSerialize["field2Error"] = o.Field2Error
	}
	if !IsNil(o.Field2Label) {
		toSerialize["field2Label"] = o.Field2Label
	}
	if !IsNil(o.Field2Required) {
		toSerialize["field2Required"] = o.Field2Required
	}
	if !IsNil(o.Field3) {
		toSerialize["field3"] = o.Field3
	}
	if !IsNil(o.Field3Error) {
		toSerialize["field3Error"] = o.Field3Error
	}
	if !IsNil(o.Field3Label) {
		toSerialize["field3Label"] = o.Field3Label
	}
	if !IsNil(o.Field3Required) {
		toSerialize["field3Required"] = o.Field3Required
	}
	if !IsNil(o.Field4) {
		toSerialize["field4"] = o.Field4
	}
	if !IsNil(o.Field4Error) {
		toSerialize["field4Error"] = o.Field4Error
	}
	if !IsNil(o.Field4Label) {
		toSerialize["field4Label"] = o.Field4Label
	}
	if !IsNil(o.Field4Required) {
		toSerialize["field4Required"] = o.Field4Required
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NameError) {
		toSerialize["nameError"] = o.NameError
	}
	if !IsNil(o.NameLabel) {
		toSerialize["nameLabel"] = o.NameLabel
	}
	if !IsNil(o.Optout) {
		toSerialize["optout"] = o.Optout
	}
	if !IsNil(o.OptoutDefault) {
		toSerialize["optoutDefault"] = o.OptoutDefault
	}
	if !IsNil(o.OptoutLabel) {
		toSerialize["optoutLabel"] = o.OptoutLabel
	}
	toSerialize["pageTitle"] = o.PageTitle
	if !IsNil(o.PassphraseCancel) {
		toSerialize["passphraseCancel"] = o.PassphraseCancel
	}
	if !IsNil(o.PassphraseError) {
		toSerialize["passphraseError"] = o.PassphraseError
	}
	if !IsNil(o.PassphraseLabel) {
		toSerialize["passphraseLabel"] = o.PassphraseLabel
	}
	if !IsNil(o.PassphraseMessage) {
		toSerialize["passphraseMessage"] = o.PassphraseMessage
	}
	if !IsNil(o.PassphraseSubmit) {
		toSerialize["passphraseSubmit"] = o.PassphraseSubmit
	}
	if !IsNil(o.PassphraseTitle) {
		toSerialize["passphraseTitle"] = o.PassphraseTitle
	}
	if !IsNil(o.PoweredBy) {
		toSerialize["poweredBy"] = o.PoweredBy
	}
	if !IsNil(o.RequiredFieldLabel) {
		toSerialize["requiredFieldLabel"] = o.RequiredFieldLabel
	}
	if !IsNil(o.SignInLabel) {
		toSerialize["signInLabel"] = o.SignInLabel
	}
	if !IsNil(o.SmsCarrierDefault) {
		toSerialize["smsCarrierDefault"] = o.SmsCarrierDefault
	}
	if !IsNil(o.SmsCarrierError) {
		toSerialize["smsCarrierError"] = o.SmsCarrierError
	}
	if !IsNil(o.SmsCarrierFieldLabel) {
		toSerialize["smsCarrierFieldLabel"] = o.SmsCarrierFieldLabel
	}
	if !IsNil(o.SmsCodeCancel) {
		toSerialize["smsCodeCancel"] = o.SmsCodeCancel
	}
	if !IsNil(o.SmsCodeError) {
		toSerialize["smsCodeError"] = o.SmsCodeError
	}
	if !IsNil(o.SmsCodeFieldLabel) {
		toSerialize["smsCodeFieldLabel"] = o.SmsCodeFieldLabel
	}
	if !IsNil(o.SmsCodeMessage) {
		toSerialize["smsCodeMessage"] = o.SmsCodeMessage
	}
	if !IsNil(o.SmsCodeSubmit) {
		toSerialize["smsCodeSubmit"] = o.SmsCodeSubmit
	}
	if !IsNil(o.SmsCodeTitle) {
		toSerialize["smsCodeTitle"] = o.SmsCodeTitle
	}
	if !IsNil(o.SmsCountryFieldLabel) {
		toSerialize["smsCountryFieldLabel"] = o.SmsCountryFieldLabel
	}
	if !IsNil(o.SmsCountryFormat) {
		toSerialize["smsCountryFormat"] = o.SmsCountryFormat
	}
	if !IsNil(o.SmsHaveAccessCode) {
		toSerialize["smsHaveAccessCode"] = o.SmsHaveAccessCode
	}
	if !IsNil(o.SmsMessageFormat) {
		toSerialize["smsMessageFormat"] = o.SmsMessageFormat
	}
	if !IsNil(o.SmsNumberCancel) {
		toSerialize["smsNumberCancel"] = o.SmsNumberCancel
	}
	if !IsNil(o.SmsNumberError) {
		toSerialize["smsNumberError"] = o.SmsNumberError
	}
	if !IsNil(o.SmsNumberFieldLabel) {
		toSerialize["smsNumberFieldLabel"] = o.SmsNumberFieldLabel
	}
	if !IsNil(o.SmsNumberFormat) {
		toSerialize["smsNumberFormat"] = o.SmsNumberFormat
	}
	if !IsNil(o.SmsNumberMessage) {
		toSerialize["smsNumberMessage"] = o.SmsNumberMessage
	}
	if !IsNil(o.SmsNumberSubmit) {
		toSerialize["smsNumberSubmit"] = o.SmsNumberSubmit
	}
	if !IsNil(o.SmsNumberTitle) {
		toSerialize["smsNumberTitle"] = o.SmsNumberTitle
	}
	if !IsNil(o.SmsUsernameFormat) {
		toSerialize["smsUsernameFormat"] = o.SmsUsernameFormat
	}
	if !IsNil(o.SmsValidityDuration) {
		toSerialize["smsValidityDuration"] = o.SmsValidityDuration
	}
	if !IsNil(o.SponsorBackLink) {
		toSerialize["sponsorBackLink"] = o.SponsorBackLink
	}
	if !IsNil(o.SponsorCancel) {
		toSerialize["sponsorCancel"] = o.SponsorCancel
	}
	if !IsNil(o.SponsorEmail) {
		toSerialize["sponsorEmail"] = o.SponsorEmail
	}
	if !IsNil(o.SponsorEmailError) {
		toSerialize["sponsorEmailError"] = o.SponsorEmailError
	}
	if !IsNil(o.SponsorEmailTemplate) {
		toSerialize["sponsorEmailTemplate"] = o.SponsorEmailTemplate
	}
	if !IsNil(o.SponsorInfoApproved) {
		toSerialize["sponsorInfoApproved"] = o.SponsorInfoApproved
	}
	if !IsNil(o.SponsorInfoDenied) {
		toSerialize["sponsorInfoDenied"] = o.SponsorInfoDenied
	}
	if !IsNil(o.SponsorInfoPending) {
		toSerialize["sponsorInfoPending"] = o.SponsorInfoPending
	}
	if !IsNil(o.SponsorName) {
		toSerialize["sponsorName"] = o.SponsorName
	}
	if !IsNil(o.SponsorNameError) {
		toSerialize["sponsorNameError"] = o.SponsorNameError
	}
	if !IsNil(o.SponsorNotePending) {
		toSerialize["sponsorNotePending"] = o.SponsorNotePending
	}
	if !IsNil(o.SponsorRequestAccess) {
		toSerialize["sponsorRequestAccess"] = o.SponsorRequestAccess
	}
	if !IsNil(o.SponsorSelectEmail) {
		toSerialize["sponsorSelectEmail"] = o.SponsorSelectEmail
	}
	if !IsNil(o.SponsorStatusApproved) {
		toSerialize["sponsorStatusApproved"] = o.SponsorStatusApproved
	}
	if !IsNil(o.SponsorStatusDenied) {
		toSerialize["sponsorStatusDenied"] = o.SponsorStatusDenied
	}
	if !IsNil(o.SponsorStatusPending) {
		toSerialize["sponsorStatusPending"] = o.SponsorStatusPending
	}
	if !IsNil(o.SponsorSubmit) {
		toSerialize["sponsorSubmit"] = o.SponsorSubmit
	}
	if !IsNil(o.SponsorsError) {
		toSerialize["sponsorsError"] = o.SponsorsError
	}
	if !IsNil(o.SponsorsInfoApproved) {
		toSerialize["sponsorsInfoApproved"] = o.SponsorsInfoApproved
	}
	if !IsNil(o.SponsorsInfoDenied) {
		toSerialize["sponsorsInfoDenied"] = o.SponsorsInfoDenied
	}
	if !IsNil(o.SponsorsInfoPending) {
		toSerialize["sponsorsInfoPending"] = o.SponsorsInfoPending
	}
	if !IsNil(o.Tos) {
		toSerialize["tos"] = o.Tos
	}
	if !IsNil(o.TosAcceptLabel) {
		toSerialize["tosAcceptLabel"] = o.TosAcceptLabel
	}
	if !IsNil(o.TosError) {
		toSerialize["tosError"] = o.TosError
	}
	if !IsNil(o.TosLink) {
		toSerialize["tosLink"] = o.TosLink
	}
	if !IsNil(o.TosText) {
		toSerialize["tosText"] = o.TosText
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WlanPortalTemplateSetting) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pageTitle",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWlanPortalTemplateSetting := _WlanPortalTemplateSetting{}

	err = json.Unmarshal(data, &varWlanPortalTemplateSetting)

	if err != nil {
		return err
	}

	*o = WlanPortalTemplateSetting(varWlanPortalTemplateSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accessCodeAlternateEmail")
		delete(additionalProperties, "alignment")
		delete(additionalProperties, "authButtonAmazon")
		delete(additionalProperties, "authButtonAzure")
		delete(additionalProperties, "authButtonEmail")
		delete(additionalProperties, "authButtonFacebook")
		delete(additionalProperties, "authButtonGoogle")
		delete(additionalProperties, "authButtonMicrosoft")
		delete(additionalProperties, "authButtonPassphrase")
		delete(additionalProperties, "authButtonSms")
		delete(additionalProperties, "authButtonSponsor")
		delete(additionalProperties, "authLabel")
		delete(additionalProperties, "backLink")
		delete(additionalProperties, "color")
		delete(additionalProperties, "colorDark")
		delete(additionalProperties, "colorLight")
		delete(additionalProperties, "company")
		delete(additionalProperties, "companyError")
		delete(additionalProperties, "companyLabel")
		delete(additionalProperties, "email")
		delete(additionalProperties, "emailAccessDomainError")
		delete(additionalProperties, "emailCancel")
		delete(additionalProperties, "emailCodeCancel")
		delete(additionalProperties, "emailCodeError")
		delete(additionalProperties, "emailCodeFieldLabel")
		delete(additionalProperties, "emailCodeMessage")
		delete(additionalProperties, "emailCodeSubmit")
		delete(additionalProperties, "emailCodeTitle")
		delete(additionalProperties, "emailError")
		delete(additionalProperties, "emailFieldLabel")
		delete(additionalProperties, "emailLabel")
		delete(additionalProperties, "emailMessage")
		delete(additionalProperties, "emailSubmit")
		delete(additionalProperties, "emailTitle")
		delete(additionalProperties, "field1")
		delete(additionalProperties, "field1Error")
		delete(additionalProperties, "field1Label")
		delete(additionalProperties, "field1Required")
		delete(additionalProperties, "field2")
		delete(additionalProperties, "field2Error")
		delete(additionalProperties, "field2Label")
		delete(additionalProperties, "field2Required")
		delete(additionalProperties, "field3")
		delete(additionalProperties, "field3Error")
		delete(additionalProperties, "field3Label")
		delete(additionalProperties, "field3Required")
		delete(additionalProperties, "field4")
		delete(additionalProperties, "field4Error")
		delete(additionalProperties, "field4Label")
		delete(additionalProperties, "field4Required")
		delete(additionalProperties, "message")
		delete(additionalProperties, "name")
		delete(additionalProperties, "nameError")
		delete(additionalProperties, "nameLabel")
		delete(additionalProperties, "optout")
		delete(additionalProperties, "optoutDefault")
		delete(additionalProperties, "optoutLabel")
		delete(additionalProperties, "pageTitle")
		delete(additionalProperties, "passphraseCancel")
		delete(additionalProperties, "passphraseError")
		delete(additionalProperties, "passphraseLabel")
		delete(additionalProperties, "passphraseMessage")
		delete(additionalProperties, "passphraseSubmit")
		delete(additionalProperties, "passphraseTitle")
		delete(additionalProperties, "poweredBy")
		delete(additionalProperties, "requiredFieldLabel")
		delete(additionalProperties, "signInLabel")
		delete(additionalProperties, "smsCarrierDefault")
		delete(additionalProperties, "smsCarrierError")
		delete(additionalProperties, "smsCarrierFieldLabel")
		delete(additionalProperties, "smsCodeCancel")
		delete(additionalProperties, "smsCodeError")
		delete(additionalProperties, "smsCodeFieldLabel")
		delete(additionalProperties, "smsCodeMessage")
		delete(additionalProperties, "smsCodeSubmit")
		delete(additionalProperties, "smsCodeTitle")
		delete(additionalProperties, "smsCountryFieldLabel")
		delete(additionalProperties, "smsCountryFormat")
		delete(additionalProperties, "smsHaveAccessCode")
		delete(additionalProperties, "smsMessageFormat")
		delete(additionalProperties, "smsNumberCancel")
		delete(additionalProperties, "smsNumberError")
		delete(additionalProperties, "smsNumberFieldLabel")
		delete(additionalProperties, "smsNumberFormat")
		delete(additionalProperties, "smsNumberMessage")
		delete(additionalProperties, "smsNumberSubmit")
		delete(additionalProperties, "smsNumberTitle")
		delete(additionalProperties, "smsUsernameFormat")
		delete(additionalProperties, "smsValidityDuration")
		delete(additionalProperties, "sponsorBackLink")
		delete(additionalProperties, "sponsorCancel")
		delete(additionalProperties, "sponsorEmail")
		delete(additionalProperties, "sponsorEmailError")
		delete(additionalProperties, "sponsorEmailTemplate")
		delete(additionalProperties, "sponsorInfoApproved")
		delete(additionalProperties, "sponsorInfoDenied")
		delete(additionalProperties, "sponsorInfoPending")
		delete(additionalProperties, "sponsorName")
		delete(additionalProperties, "sponsorNameError")
		delete(additionalProperties, "sponsorNotePending")
		delete(additionalProperties, "sponsorRequestAccess")
		delete(additionalProperties, "sponsorSelectEmail")
		delete(additionalProperties, "sponsorStatusApproved")
		delete(additionalProperties, "sponsorStatusDenied")
		delete(additionalProperties, "sponsorStatusPending")
		delete(additionalProperties, "sponsorSubmit")
		delete(additionalProperties, "sponsorsError")
		delete(additionalProperties, "sponsorsInfoApproved")
		delete(additionalProperties, "sponsorsInfoDenied")
		delete(additionalProperties, "sponsorsInfoPending")
		delete(additionalProperties, "tos")
		delete(additionalProperties, "tosAcceptLabel")
		delete(additionalProperties, "tosError")
		delete(additionalProperties, "tosLink")
		delete(additionalProperties, "tosText")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWlanPortalTemplateSetting struct {
	value *WlanPortalTemplateSetting
	isSet bool
}

func (v NullableWlanPortalTemplateSetting) Get() *WlanPortalTemplateSetting {
	return v.value
}

func (v *NullableWlanPortalTemplateSetting) Set(val *WlanPortalTemplateSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableWlanPortalTemplateSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableWlanPortalTemplateSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWlanPortalTemplateSetting(val *WlanPortalTemplateSetting) *NullableWlanPortalTemplateSetting {
	return &NullableWlanPortalTemplateSetting{value: val, isSet: true}
}

func (v NullableWlanPortalTemplateSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWlanPortalTemplateSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


