/*
Mist API

> Version: **2406.1.14** > > Date: **July 3, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.14
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the ConstMxedgeModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConstMxedgeModel{}

// ConstMxedgeModel struct for ConstMxedgeModel
type ConstMxedgeModel struct {
	CustomPorts *bool `json:"custom_ports,omitempty"`
	Display *string `json:"display,omitempty"`
	Model *string `json:"model,omitempty"`
	Ports *map[string]ConstMxedgeModelPort `json:"ports,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConstMxedgeModel ConstMxedgeModel

// NewConstMxedgeModel instantiates a new ConstMxedgeModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConstMxedgeModel() *ConstMxedgeModel {
	this := ConstMxedgeModel{}
	return &this
}

// NewConstMxedgeModelWithDefaults instantiates a new ConstMxedgeModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConstMxedgeModelWithDefaults() *ConstMxedgeModel {
	this := ConstMxedgeModel{}
	return &this
}

// GetCustomPorts returns the CustomPorts field value if set, zero value otherwise.
func (o *ConstMxedgeModel) GetCustomPorts() bool {
	if o == nil || IsNil(o.CustomPorts) {
		var ret bool
		return ret
	}
	return *o.CustomPorts
}

// GetCustomPortsOk returns a tuple with the CustomPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstMxedgeModel) GetCustomPortsOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomPorts) {
		return nil, false
	}
	return o.CustomPorts, true
}

// HasCustomPorts returns a boolean if a field has been set.
func (o *ConstMxedgeModel) HasCustomPorts() bool {
	if o != nil && !IsNil(o.CustomPorts) {
		return true
	}

	return false
}

// SetCustomPorts gets a reference to the given bool and assigns it to the CustomPorts field.
func (o *ConstMxedgeModel) SetCustomPorts(v bool) {
	o.CustomPorts = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *ConstMxedgeModel) GetDisplay() string {
	if o == nil || IsNil(o.Display) {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstMxedgeModel) GetDisplayOk() (*string, bool) {
	if o == nil || IsNil(o.Display) {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *ConstMxedgeModel) HasDisplay() bool {
	if o != nil && !IsNil(o.Display) {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *ConstMxedgeModel) SetDisplay(v string) {
	o.Display = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *ConstMxedgeModel) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstMxedgeModel) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *ConstMxedgeModel) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *ConstMxedgeModel) SetModel(v string) {
	o.Model = &v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *ConstMxedgeModel) GetPorts() map[string]ConstMxedgeModelPort {
	if o == nil || IsNil(o.Ports) {
		var ret map[string]ConstMxedgeModelPort
		return ret
	}
	return *o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstMxedgeModel) GetPortsOk() (*map[string]ConstMxedgeModelPort, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *ConstMxedgeModel) HasPorts() bool {
	if o != nil && !IsNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given map[string]ConstMxedgeModelPort and assigns it to the Ports field.
func (o *ConstMxedgeModel) SetPorts(v map[string]ConstMxedgeModelPort) {
	o.Ports = &v
}

func (o ConstMxedgeModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConstMxedgeModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomPorts) {
		toSerialize["custom_ports"] = o.CustomPorts
	}
	if !IsNil(o.Display) {
		toSerialize["display"] = o.Display
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConstMxedgeModel) UnmarshalJSON(data []byte) (err error) {
	varConstMxedgeModel := _ConstMxedgeModel{}

	err = json.Unmarshal(data, &varConstMxedgeModel)

	if err != nil {
		return err
	}

	*o = ConstMxedgeModel(varConstMxedgeModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "custom_ports")
		delete(additionalProperties, "display")
		delete(additionalProperties, "model")
		delete(additionalProperties, "ports")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConstMxedgeModel struct {
	value *ConstMxedgeModel
	isSet bool
}

func (v NullableConstMxedgeModel) Get() *ConstMxedgeModel {
	return v.value
}

func (v *NullableConstMxedgeModel) Set(val *ConstMxedgeModel) {
	v.value = val
	v.isSet = true
}

func (v NullableConstMxedgeModel) IsSet() bool {
	return v.isSet
}

func (v *NullableConstMxedgeModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConstMxedgeModel(val *ConstMxedgeModel) *NullableConstMxedgeModel {
	return &NullableConstMxedgeModel{value: val, isSet: true}
}

func (v NullableConstMxedgeModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConstMxedgeModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


